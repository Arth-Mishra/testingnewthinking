/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_wasm-audio-decoders_flac_index_js"],{

/***/ "./node_modules/@eshaz/web-worker/cjs/browser.js":
/*!*******************************************************!*\
  !*** ./node_modules/@eshaz/web-worker/cjs/browser.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVzaGF6L3dlYi13b3JrZXIvY2pzL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Blc2hhei93ZWItd29ya2VyL2Nqcy9icm93c2VyLmpzP2M5MGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IFdvcmtlcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@eshaz/web-worker/cjs/browser.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/common/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/common/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WASMAudioDecoderCommon: function() { return /* reexport safe */ _src_WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   WASMAudioDecoderWorker: function() { return /* reexport safe */ _src_WASMAudioDecoderWorker_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   assignNames: function() { return /* reexport safe */ _src_utilities_js__WEBPACK_IMPORTED_MODULE_2__.assignNames; }\n/* harmony export */ });\n/* harmony import */ var _src_WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/WASMAudioDecoderCommon.js */ \"./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js\");\n/* harmony import */ var _src_WASMAudioDecoderWorker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/WASMAudioDecoderWorker.js */ \"./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js\");\n/* harmony import */ var _src_utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/utilities.js */ \"./node_modules/@wasm-audio-decoders/common/src/utilities.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRTtBQUNBO0FBQ3BCOztBQUVzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uL2luZGV4LmpzPzM5YzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdBU01BdWRpb0RlY29kZXJDb21tb24gZnJvbSBcIi4vc3JjL1dBU01BdWRpb0RlY29kZXJDb21tb24uanNcIjtcbmltcG9ydCBXQVNNQXVkaW9EZWNvZGVyV29ya2VyIGZyb20gXCIuL3NyYy9XQVNNQXVkaW9EZWNvZGVyV29ya2VyLmpzXCI7XG5pbXBvcnQgeyBhc3NpZ25OYW1lcyB9IGZyb20gXCIuL3NyYy91dGlsaXRpZXMuanNcIjtcblxuZXhwb3J0IHsgV0FTTUF1ZGlvRGVjb2RlckNvbW1vbiwgV0FTTUF1ZGlvRGVjb2RlcldvcmtlciwgYXNzaWduTmFtZXMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/common/index.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WASMAudioDecoderCommon; }\n/* harmony export */ });\n/* harmony import */ var simple_yenc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! simple-yenc */ \"./node_modules/simple-yenc/dist/esm.js\");\n\n\nfunction WASMAudioDecoderCommon() {\n  // setup static methods\n  const uint8Array = Uint8Array;\n  const float32Array = Float32Array;\n\n  if (!WASMAudioDecoderCommon.modules) {\n    Object.defineProperties(WASMAudioDecoderCommon, {\n      modules: {\n        value: new WeakMap(),\n      },\n\n      setModule: {\n        value(Ref, module) {\n          WASMAudioDecoderCommon.modules.set(Ref, Promise.resolve(module));\n        },\n      },\n\n      getModule: {\n        value(Ref, wasmString) {\n          let module = WASMAudioDecoderCommon.modules.get(Ref);\n\n          if (!module) {\n            if (!wasmString) {\n              wasmString = Ref.wasm;\n              module = WASMAudioDecoderCommon.inflateDynEncodeString(\n                wasmString,\n              ).then((data) => WebAssembly.compile(data));\n            } else {\n              module = WebAssembly.compile((0,simple_yenc__WEBPACK_IMPORTED_MODULE_0__.decode)(wasmString));\n            }\n\n            WASMAudioDecoderCommon.modules.set(Ref, module);\n          }\n\n          return module;\n        },\n      },\n\n      concatFloat32: {\n        value(buffers, length) {\n          let ret = new float32Array(length),\n            i = 0,\n            offset = 0;\n\n          while (i < buffers.length) {\n            ret.set(buffers[i], offset);\n            offset += buffers[i++].length;\n          }\n\n          return ret;\n        },\n      },\n\n      getDecodedAudio: {\n        value: (errors, channelData, samplesDecoded, sampleRate, bitDepth) => ({\n          errors,\n          channelData,\n          samplesDecoded,\n          sampleRate,\n          bitDepth,\n        }),\n      },\n\n      getDecodedAudioMultiChannel: {\n        value(\n          errors,\n          input,\n          channelsDecoded,\n          samplesDecoded,\n          sampleRate,\n          bitDepth,\n        ) {\n          let channelData = [],\n            i,\n            j;\n\n          for (i = 0; i < channelsDecoded; i++) {\n            const channel = [];\n            for (j = 0; j < input.length; ) channel.push(input[j++][i] || []);\n            channelData.push(\n              WASMAudioDecoderCommon.concatFloat32(channel, samplesDecoded),\n            );\n          }\n\n          return WASMAudioDecoderCommon.getDecodedAudio(\n            errors,\n            channelData,\n            samplesDecoded,\n            sampleRate,\n            bitDepth,\n          );\n        },\n      },\n\n      /*\n       ******************\n       * Compression Code\n       ******************\n       */\n\n      inflateDynEncodeString: {\n        value(source) {\n          source = (0,simple_yenc__WEBPACK_IMPORTED_MODULE_0__.decode)(source);\n\n          return new Promise((resolve) => {\n            // prettier-ignore\n            const puffString = String.raw`dynEncode0114db91da9b\u0014u\u0015\u0014\u0014\u0014\u0015*\u0017t\u0016\u0015t\u0018\u0015t\u0017\u0015\u0017\u001a\u0019\u0014\u0015\u0014\u0016\u0015\u0019\u0017\u0015\u0014$\u001a#\u0016\u0015U¤¤\u0018\u001f\u0014U¤¤\u0018\u001f\u001b3\u0017\u001ay\u0016\u0014\u0018zz\u0014\u0018\u001fss|yusvuy\u0017\u0015\u001eÚ&\u0019\u0015\u00184\u0014<\u001605\u00164\u0014<\u0016,5\u0017\u0017T4\u00154\u0016^\u0018T4\u00144\u0014<\u0016(6\u0018U\u0015~J\u0016(4\u00184\u0014<\u0016 ~A\u0014\u00145\u00194\u00144\u0016U\u001c~6\u0018J\u001604\u00174\u00194\u00165\u00174\u00185\u0016 \u0015\u001f\u001f4\u00144\u00164\u0015J\u001604\u00144\u00174\u0015J\u0016,4\u0017U4\u0015U\u001fÒ\u0016\u0015\u001a7\u0014U45\u001b\u00174\u0018U4Z\u00184\u0017U\u00144\u0017U\u0014^/6\u001c5\u00184\u00165\u0019\u0017T4\u0018\u0018T4\u00144\u0019B\u0015\u0014U\u0015~6\u001a4\u001aC\u0015\u0014U\u0015~O\u0015\u00144\u0018U\u00155\u00184\u0019U\u0016~5\u0019 \u0015\u001f\u001fU\u00145\u001a\u0016T4\u0014B\u0015\u00144\u0017Z!\u00144\u0014U\u0016~5\u0019U\u00145\u0018U\u00155\u001a\u0017T4\u0018U\u0016~6\u0017U4Z\u0018TU\u00145\u0019U\u00165\u0018\u0017T4\u00184\u001b~4\u0019O\u0015\u00144\u0018U2Z\u0018TU\u00145\u0018\u0017T4\u00184\u001cZ!\u00194\u0016B\u0015\u00146\u0014\u0018T4\u001b4\u0014U\u0015~6\u00144\u0014B\u0015\u00146\u0014U\u0015~O\u0015\u00144\u00154\u0014U\u0015~4\u0018O\u0015\u0014\u001f4\u0016U\u0016~5\u00164\u0018U\u0015~5\u0018 \u0014\u001f\u0014\u00194\u00144\u0018~C\u0015\u00144\u0019~5\u00194\u0018U\u0016~5\u0018 \u0015\u001f\u0014\u001f\u0014\u001f4\u00184\u0019~5\u001d4\u00175\u00184\u001aU\u00154\u001dB\u0015\u00146\u001aU\u0014b!\u0014\u001f\u001f4\u001a\u00194\u00144\u0018~U\u0014O\u0015\u00144\u0018U\u0016~5\u0018 \u0015\u001f\u001f\u001f\u0015\u0019U\u00165\u0016\u00174\u0016U4Z\u0018TU#\u001f4\u00184\u0014U\u0015$\u00144\u00176\u00174\u0015<\u0016\u00144\u0016~B\u0015\u00146\u0019^\u00184\u0015<\u0016\u00184\u001a4\u00184\u0017~U\u0015~B\u0015\u0014\u00194\u0016U\u0016~5\u00164\u0017U\u00155\u00174\u00194\u001a~5\u001a4\u00184\u0019~U\u00155\u0018 \u0015\u001f\u001f\u001fµ\u0017\u0015\u0019Uä#U\u0014J\u0016\u0014Uè#5\u0018\u0016T\u0017T4\u0017U0Z\u0018T\u0016TUX5\u0017U\u00155\u0018\u0017T4\u0017\u0018T4\u0017Uà#~4\u0018O\u0015\u0014U\u00154\u0017U $~C\u0015\u00144\u0018~5\u00184\u0017U\u0016~5\u0017 \u0015\u0019\u0017T4\u00144\u0015$\u00166\u0019U\u0014\\!\u001a\u0016T\u0016T\u0016T4\u0019U\u0013\u0015a\u0018T4\u0014<\u0016\u00146\u0017\u0018T4\u0014<\u0016\u001c6\u00184\u0014<\u0016\u0018Z!\u001c4\u00174\u0018~4\u0019N\u0014\u0014\u001f4\u0014<\u0016\u001cU\u0015~5\u001a \u0015\u001f4\u0019U\u0016Z!\u00164\u0019U±\u0016_\u0018TU#\u001f4\u00144\u0019U\u0016U\u00156\u0018UÔ\u001c~B\u0015\u0014$\u00145\u001a4\u00144\u0016$\u00166\u0019U\u0014\\!\u001d4\u0019U\u00156\u0017U¤#~B\u0015\u00144\u00144\u0017Uä#~B\u0015\u0014$\u0014~6\u001b4\u0014<\u0016\u001c6\u0017_\u0018TU#\u001f4\u00174\u001a4\u0018U\u001c~B\u0015\u0014~6\u0018~5\u001a4\u0014<\u0016\u0014Y!\u00144\u001a4\u0014<\u0016\u0018_!\u001a\u0017T4\u0018Y!\u00164\u0014<\u0016\u00146\u001a4\u0017~4\u001a4\u00174\u001b~A\u0014\u0014N\u0014\u00144\u00144\u0014<\u0016\u001cU\u0015~6\u0017J\u0016\u001c4\u0018U\u00155\u0018 \u0014\u001f\u0014\u001f4\u00144\u001aJ\u0016\u001c\u001f4\u0019U\u0016[!\u0015\u001f\u001fU\u0014#\u001f\u0014\u001f\u0014\u001f\u00194\u00184\u0017U\u0015O\u0015\u00144\u0018U\u0016~5\u00184\u0017U\u0015~5\u0017 \u0015\u001f\u001fU\u00155\u0019\u001f4\u0019\u001f\u0013\u001e\u0015 7\u0014U\u0004\u001e6\u00188\u00144\u00184\u0014J\u0016\u00144\u00184\u0016J\u0016 4\u0018U\u0014J\u0016\u001c4\u0018U\u0014J\u001604\u0018V\u0014K\u0016(4\u00184\u0015<\u0016\u0014J\u0016\u00184\u00184\u0017<\u0016\u0014J\u0016$4\u0018U´\u001e~5\u001f4\u0018U\u0004\u001d~5 4\u0018U¤\u001c~5!\u0016T\u0016T\u0017T4\u0018U\u0015$\u00145\"U5\u0014\u0016T\u0016T\u0016T\u0016T\u0016T\u0016T\u0016T4\u0018U\u0016$\u0014\"\u0017\u0014\u0015\u0018\u001c\u001f4\u0018V\u0014K\u0017,U\u00165\u00194\u0018<\u0016(6\u0014U\u0018~6\u00164\u0018<\u0016$6\u001d_!\u001c4\u0018<\u0016 6\u001c4\u0014~6\u001aA\u0014\u00145\u001b4\u001aA\u0014\u00155\u001e4\u00184\u0014U\u0017~6#J\u0016(U5\u00144\u001aA\u0014\u00164\u001bU\u0013\u0015[!\u001b4\u00184\u0016J\u0016(4\u001c4#~A\u0014\u00144\u001eU\u001c6\u001aUU\u001cU\u0013\u0015[!\u001b4\u001a4\u001b6\u00144\u0016~6\u001b4\u001d_!\u001c4\u0018<\u0016\u001c6\u00194\u0014~5\u001a4\u0018<\u0016\u00146\u001d\u0018T4\u0018<\u0016\u00184\u001a]\u0018TU\u00155\u0019 \u001e\u001f\u0017T4\u0014Y!\u00174\u00194\u001d~4\u00164\u001c~A\u0014\u0014N\u0014\u00144\u0019U\u0015~5\u00194\u0016U\u0015~5\u00164\u0014U\u00155\u0014 \u0014\u001f\u0014\u001f4\u00184\u001bJ\u0016(4\u00184\u001aJ\u0016\u001c \u0016\u001fUÄ\u001dA\u0014\u0014!\u0017U\u00145\u0016U#Uô\u001dJ\u0016\u0014U\u0010\"UÔ\u001dJ\u0016\u0014U#UÔ\"J\u0016\u0014U#U´\"J\u0016\u0014\u0017T4\u0016U´\u0016Z\u0018TU\u00145\u0016\u0017T4\u0016Uô\u0015Z\u0018TU\u00145\u0016\u0017T4\u0016UDZ\u0018TU\u00145\u0016\u0017T4\u0016U$[\u0018T4\u00164\u001f~U\u001cO\u0015\u00144\u0016U\u0016~5\u0016 \u0015\u001f\u001fUÔ\u001dUô\u001d4\u0018U\u0004\u0019~U´\u0016$\u0015.U\u00145\u0016\u0017T4\u0016UP[\u0018T4\u0018U\u0004\u0019~4\u0016~U\u0019O\u0015\u00144\u0016U\u0016~5\u0016 \u0015\u001f\u001fU#<\u0016\u0014U#<\u0016\u00144\u0018U\u0004\u0019~U2$\u0015.UÄ\u001dU\u0015N\u0014\u0014 \u001d\u00194\u00164 ~U\u001bO\u0015\u00144\u0016U\u0016~5\u0016 \u0015\u001f\u0014\u001f\u0014\u00194\u00164!~U\u001dO\u0015\u00144\u0016U\u0016~5\u0016 \u0015\u001f\u0014\u001f\u0014\u00194\u0018U\u0004\u0019~4\u0016~U\u001cO\u0015\u00144\u0016U\u0016~5\u0016 \u0015\u001f\u0014\u001f\u0014\u001f4\u00184\u0019J\u0016\u001c4\u00184\u0016J\u0016(\u001fU\u00145\u0014 \u0016\u001f4\u00184\u0018U¤\u0015~J\u0016@4\u00184\u0018Uä\u0019~J\u0016<4\u00184\u0018UD~J\u001684\u00184\u0018U\u0004\u0014~J\u001644\u0018U\u0019$\u00145\u00164\u0018U\u0019$\u00145\u0019U5\u00144\u0018U\u0018$\u00145\u001b4\u0016U1^4\u0019U1^!\u00154\u0016U\u0016~5\u001c4\u0019U\u0015~5\u001aU\u001d5\u00144\u001bU\u0018~6\u0016U\u00144\u0016U\u0014^/6\u00195\u0016\u0017T4\u0016\u0018T4\u0018U\u0017$\u00145\u001b4\u0018U\u0004\u0019~4\u0014B\u0015\u0014U\u0015~4\u001bO\u0015\u00144\u0016U\u00155\u00164\u0014U\u0016~5\u0014 \u0015\u0019U\u0014U'4\u00196\u00144\u0014U'_/5\u00164\u0019U\u0015U\u001d~5\u0014\u0017T4\u0016\u0018T4\u0018U\u0004\u0019~4\u0014B\u0015\u0014U\u0015~U\u0014O\u0015\u00144\u0016U\u00155\u00164\u0014U\u0016~5\u0014 \u0015\u001f\u001fU5\u00144\u0018Uä\u0019~4\u0018U¤\u0015~4\u0018U\u0004\u0019~U'$\u0015!\u00174\u001a4\u001c~5\u001bU\u00145\u0019\u0017T4\u00194\u001b\\\u0018T4\u00184\u0018U<~$\u00166\u0014U\u0014\\!\u00194\u0014U#a\u0018T4\u0018U\u0004\u0019~4\u0019U\u0015~4\u0014O\u0015\u00144\u0019U\u0015~5\u0019 \u0016\u001fU\u00145\u001dU\u00175\u001eU\u00175\u0016\u0016T\u0016T\u0016T4\u0014U$\"\u0016\u0014\u0016\u0015\u001f4\u0019Y\u0018TU5\u0014 \u001c\u001f4\u0019U\u00154\u0018~C\u0015\u0002\u00195\u001dU\u00165\u0016 \u0015\u001fU\u001f5\u001eU\u001b5\u0016\u001f4\u001b4\u00184\u0016$\u00144\u001e~6\u00164\u0019~\\\u0018TU5\u0014 \u001a\u001f4\u0018U\u0004\u0019~4\u0019U\u0015~5\u0014\u0017T4\u0016Y!\u00164\u00144\u001dO\u0015\u00144\u0014U\u0016~5\u00144\u0019U\u0015~5\u00194\u0016U\u00155\u0016 \u0014\u001f\u0014\u001f\u001f4\u0018C\u0015\u0004\u001dY\u0018TU5\u0014 \u0018\u001f4\u0018Uä\u0019~4\u0018U¤\u0015~4\u0018U\u0004\u0019~4\u001c$\u00156\u0016\u0018TU5\u00144\u0016U\u0014\\!\u00184\u001c4\u0018B\u0015æ\u00194\u0018B\u0015ä\u0019~[!\u0018\u001f4\u0018U\u0004\u0014~4\u0018UD~4\u0018U\u0004\u0019~4\u001cU\u0015~4\u001a$\u00156\u0016\u0018TU5\u00144\u0016U\u0014\\!\u00184\u001a4\u0018B\u00154\u0018B\u0015~[!\u0018\u001f4\u00184\u0018U<~4\u0018U4~$\u00175\u0014 \u0017\u001f\u0014\u001f\u0014\u001f4\u0018U\u0010\"U#$\u00175\u0014\u001f4\u00144\"Y!\u0014\u001f4\u00145\u00194\u0014U\u0014^!\u0015\u001f4\u00154\u0018<\u0016\u001cJ\u0016\u00144\u00174\u0018<\u0016(J\u0016\u00144\u00145\u0019\u001f4\u0018U\u0004\u001e~8\u00144\u0019\u001f\u001f­\u0015\u0017\u0014U\u001c\u001fN\u0017\u0014\u0018\u0014\u0019\u0014\u001a\u0014\u001b\u0014\u001c\u0014\u001d\u0014\u001e\u0014\u001f\u0014!\u0014#\u0014%\u0014'\u0014+\u0014/\u00143\u00147\u0014?\u0014G\u0014O\u0014W\u0014g\u0014w\u0014\u0014\u0014·\u0014×\u0014÷\u0014\u0016\u0015\u0014Uä\u001c\u001f;\u0015\u0014\u0015\u0014\u0015\u0014\u0015\u0014\u0016\u0014\u0016\u0014\u0016\u0014\u0016\u0014\u0017\u0014\u0017\u0014\u0017\u0014\u0017\u0014\u0018\u0014\u0018\u0014\u0018\u0014\u0018\u0014\u0019\u0014\u0019\u0014\u0019\u0014\u0019\u0014U\u001d\u001f9$\u0014%\u0014&\u0014\u0014\u0014\u001c\u0014\u001b\u0014\u001d\u0014\u001a\u0014\u001e\u0014\u0019\u0014\u001f\u0014\u0018\u0014 \u0014\u0017\u0014!\u0014\u0016\u0014\"\u0014\u0015\u0014#`;\n\n            WASMAudioDecoderCommon.getModule(WASMAudioDecoderCommon, puffString)\n              .then((wasm) => WebAssembly.instantiate(wasm, {}))\n              .then(({ exports }) => {\n                // required for minifiers that mangle the __heap_base property\n                const instanceExports = new Map(Object.entries(exports));\n\n                const puff = instanceExports.get(\"puff\");\n                const memory = instanceExports.get(\"memory\")[\"buffer\"];\n                const dataArray = new uint8Array(memory);\n                const heapView = new DataView(memory);\n\n                let heapPos = instanceExports.get(\"__heap_base\");\n\n                // source length\n                const sourceLength = source.length;\n                const sourceLengthPtr = heapPos;\n                heapPos += 4;\n                heapView.setInt32(sourceLengthPtr, sourceLength, true);\n\n                // source data\n                const sourcePtr = heapPos;\n                heapPos += sourceLength;\n                dataArray.set(source, sourcePtr);\n\n                // destination length\n                const destLengthPtr = heapPos;\n                heapPos += 4;\n                heapView.setInt32(\n                  destLengthPtr,\n                  dataArray.byteLength - heapPos,\n                  true,\n                );\n\n                // destination data fills in the rest of the heap\n                puff(heapPos, destLengthPtr, sourcePtr, sourceLengthPtr);\n\n                resolve(\n                  dataArray.slice(\n                    heapPos,\n                    heapPos + heapView.getInt32(destLengthPtr, true),\n                  ),\n                );\n              });\n          });\n        },\n      },\n    });\n  }\n\n  Object.defineProperty(this, \"wasm\", {\n    enumerable: true,\n    get: () => this._wasm,\n  });\n\n  this.getOutputChannels = (outputData, channelsDecoded, samplesDecoded) => {\n    let output = [],\n      i = 0;\n\n    while (i < channelsDecoded)\n      output.push(\n        outputData.slice(\n          i * samplesDecoded,\n          i++ * samplesDecoded + samplesDecoded,\n        ),\n      );\n\n    return output;\n  };\n\n  this.allocateTypedArray = (len, TypedArray, setPointer = true) => {\n    const ptr = this._wasm.malloc(TypedArray.BYTES_PER_ELEMENT * len);\n    if (setPointer) this._pointers.add(ptr);\n\n    return {\n      ptr: ptr,\n      len: len,\n      buf: new TypedArray(this._wasm.HEAP, ptr, len),\n    };\n  };\n\n  this.free = () => {\n    this._pointers.forEach((ptr) => {\n      this._wasm.free(ptr);\n    });\n    this._pointers.clear();\n  };\n\n  this.codeToString = (ptr) => {\n    const characters = [],\n      heap = new Uint8Array(this._wasm.HEAP);\n    for (let character = heap[ptr]; character !== 0; character = heap[++ptr])\n      characters.push(character);\n\n    return String.fromCharCode.apply(null, characters);\n  };\n\n  this.addError = (\n    errors,\n    message,\n    frameLength,\n    frameNumber,\n    inputBytes,\n    outputSamples,\n  ) => {\n    errors.push({\n      message: message,\n      frameLength: frameLength,\n      frameNumber: frameNumber,\n      inputBytes: inputBytes,\n      outputSamples: outputSamples,\n    });\n  };\n\n  this.instantiate = (_EmscriptenWASM, _module) => {\n    if (_module) WASMAudioDecoderCommon.setModule(_EmscriptenWASM, _module);\n    this._wasm = new _EmscriptenWASM(WASMAudioDecoderCommon).instantiate();\n    this._pointers = new Set();\n\n    return this._wasm.ready.then(() => this);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WASMAudioDecoderWorker; }\n/* harmony export */ });\n/* harmony import */ var _eshaz_web_worker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @eshaz/web-worker */ \"./node_modules/@eshaz/web-worker/cjs/browser.js\");\n/* harmony import */ var _WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WASMAudioDecoderCommon.js */ \"./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n\n\nconst getWorker = () => globalThis.Worker || _eshaz_web_worker__WEBPACK_IMPORTED_MODULE_0__;\n\nclass WASMAudioDecoderWorker extends getWorker() {\n  constructor(options, name, Decoder, EmscriptenWASM) {\n    if (!_WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].modules) new _WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n    let source = _WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].modules.get(Decoder);\n\n    if (!source) {\n      let type = \"text/javascript\",\n        isNode,\n        webworkerSourceCode =\n          \"'use strict';\" +\n          // dependencies need to be manually resolved when stringifying this function\n          `(${((_Decoder, _WASMAudioDecoderCommon, _EmscriptenWASM) => {\n            // We're in a Web Worker\n\n            // setup Promise that will be resolved once the WebAssembly Module is received\n            let decoder,\n              moduleResolve,\n              modulePromise = new Promise((resolve) => {\n                moduleResolve = resolve;\n              });\n\n            self.onmessage = ({ data: { id, command, data } }) => {\n              let messagePromise = modulePromise,\n                messagePayload = { id },\n                transferList;\n\n              if (command === \"init\") {\n                Object.defineProperties(_Decoder, {\n                  WASMAudioDecoderCommon: { value: _WASMAudioDecoderCommon },\n                  EmscriptenWASM: { value: _EmscriptenWASM },\n                  module: { value: data.module },\n                  isWebWorker: { value: true },\n                });\n\n                decoder = new _Decoder(data.options);\n                moduleResolve();\n              } else if (command === \"free\") {\n                decoder.free();\n              } else if (command === \"ready\") {\n                messagePromise = messagePromise.then(() => decoder.ready);\n              } else if (command === \"reset\") {\n                messagePromise = messagePromise.then(() => decoder.reset());\n              } else {\n                // \"decode\":\n                // \"decodeFrame\":\n                // \"decodeFrames\":\n                Object.assign(\n                  messagePayload,\n                  decoder[command](\n                    // detach buffers\n                    Array.isArray(data)\n                      ? data.map((data) => new Uint8Array(data))\n                      : new Uint8Array(data),\n                  ),\n                );\n                // The \"transferList\" parameter transfers ownership of channel data to main thread,\n                // which avoids copying memory.\n                transferList = messagePayload.channelData\n                  ? messagePayload.channelData.map((channel) => channel.buffer)\n                  : [];\n              }\n\n              messagePromise.then(() =>\n                self.postMessage(messagePayload, transferList),\n              );\n            };\n          }).toString()})(${Decoder}, ${_WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]}, ${EmscriptenWASM})`;\n\n      try {\n        isNode = typeof process.versions.node !== \"undefined\";\n      } catch {}\n\n      source = isNode\n        ? `data:${type};base64,${Buffer.from(webworkerSourceCode).toString(\n            \"base64\",\n          )}`\n        : URL.createObjectURL(new Blob([webworkerSourceCode], { type }));\n\n      _WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].modules.set(Decoder, source);\n    }\n\n    super(source, { name });\n\n    this._id = Number.MIN_SAFE_INTEGER;\n    this._enqueuedOperations = new Map();\n\n    this.onmessage = ({ data }) => {\n      const { id, ...rest } = data;\n      this._enqueuedOperations.get(id)(rest);\n      this._enqueuedOperations.delete(id);\n    };\n\n    new EmscriptenWASM(_WASMAudioDecoderCommon_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]).getModule().then((module) => {\n      this.postToDecoder(\"init\", { module, options });\n    });\n  }\n\n  async postToDecoder(command, data) {\n    return new Promise((resolve) => {\n      this.postMessage({\n        command,\n        id: this._id,\n        data,\n      });\n\n      this._enqueuedOperations.set(this._id++, resolve);\n    });\n  }\n\n  get ready() {\n    return this.postToDecoder(\"ready\");\n  }\n\n  async free() {\n    await this.postToDecoder(\"free\").finally(() => {\n      this.terminate();\n    });\n  }\n\n  async reset() {\n    await this.postToDecoder(\"reset\");\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uL3NyYy9XQVNNQXVkaW9EZWNvZGVyV29ya2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ3NCOztBQUVqRSw2Q0FBNkMsOENBQVU7O0FBRXhDO0FBQ2Y7QUFDQSxTQUFTLDBFQUE4QixNQUFNLGtFQUFzQjs7QUFFbkUsaUJBQWlCLDBFQUE4Qjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7O0FBRWYsZ0NBQWdDLFFBQVEscUJBQXFCO0FBQzdEO0FBQ0EsbUNBQW1DLElBQUk7QUFDdkM7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxnQ0FBZ0M7QUFDNUUsb0NBQW9DLHdCQUF3QjtBQUM1RCw0QkFBNEIsb0JBQW9CO0FBQ2hELGlDQUFpQyxhQUFhO0FBQzlDLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGFBQWEsSUFBSSxRQUFRLElBQUksa0VBQXNCLENBQUMsSUFBSSxlQUFlOztBQUVsRjtBQUNBLHdCQUF3QixPQUFPO0FBQy9CLFFBQVE7O0FBRVI7QUFDQSxrQkFBa0IsTUFBTSxTQUFTLE1BQU07QUFDdkM7QUFDQSxZQUFZO0FBQ1osZ0VBQWdFLE1BQU07O0FBRXRFLE1BQU0sMEVBQThCO0FBQ3BDOztBQUVBLG9CQUFvQixNQUFNOztBQUUxQjtBQUNBOztBQUVBLHdCQUF3QixNQUFNO0FBQzlCLGNBQWMsY0FBYztBQUM1QjtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLGtFQUFzQjtBQUM3QyxtQ0FBbUMsaUJBQWlCO0FBQ3BELEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3YXNtLWF1ZGlvLWRlY29kZXJzL2NvbW1vbi9zcmMvV0FTTUF1ZGlvRGVjb2Rlcldvcmtlci5qcz82ZTNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb2RlV29ya2VyIGZyb20gXCJAZXNoYXovd2ViLXdvcmtlclwiO1xuaW1wb3J0IFdBU01BdWRpb0RlY29kZXJDb21tb24gZnJvbSBcIi4vV0FTTUF1ZGlvRGVjb2RlckNvbW1vbi5qc1wiO1xuXG5jb25zdCBnZXRXb3JrZXIgPSAoKSA9PiBnbG9iYWxUaGlzLldvcmtlciB8fCBOb2RlV29ya2VyO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXQVNNQXVkaW9EZWNvZGVyV29ya2VyIGV4dGVuZHMgZ2V0V29ya2VyKCkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBuYW1lLCBEZWNvZGVyLCBFbXNjcmlwdGVuV0FTTSkge1xuICAgIGlmICghV0FTTUF1ZGlvRGVjb2RlckNvbW1vbi5tb2R1bGVzKSBuZXcgV0FTTUF1ZGlvRGVjb2RlckNvbW1vbigpO1xuXG4gICAgbGV0IHNvdXJjZSA9IFdBU01BdWRpb0RlY29kZXJDb21tb24ubW9kdWxlcy5nZXQoRGVjb2Rlcik7XG5cbiAgICBpZiAoIXNvdXJjZSkge1xuICAgICAgbGV0IHR5cGUgPSBcInRleHQvamF2YXNjcmlwdFwiLFxuICAgICAgICBpc05vZGUsXG4gICAgICAgIHdlYndvcmtlclNvdXJjZUNvZGUgPVxuICAgICAgICAgIFwiJ3VzZSBzdHJpY3QnO1wiICtcbiAgICAgICAgICAvLyBkZXBlbmRlbmNpZXMgbmVlZCB0byBiZSBtYW51YWxseSByZXNvbHZlZCB3aGVuIHN0cmluZ2lmeWluZyB0aGlzIGZ1bmN0aW9uXG4gICAgICAgICAgYCgkeygoX0RlY29kZXIsIF9XQVNNQXVkaW9EZWNvZGVyQ29tbW9uLCBfRW1zY3JpcHRlbldBU00pID0+IHtcbiAgICAgICAgICAgIC8vIFdlJ3JlIGluIGEgV2ViIFdvcmtlclxuXG4gICAgICAgICAgICAvLyBzZXR1cCBQcm9taXNlIHRoYXQgd2lsbCBiZSByZXNvbHZlZCBvbmNlIHRoZSBXZWJBc3NlbWJseSBNb2R1bGUgaXMgcmVjZWl2ZWRcbiAgICAgICAgICAgIGxldCBkZWNvZGVyLFxuICAgICAgICAgICAgICBtb2R1bGVSZXNvbHZlLFxuICAgICAgICAgICAgICBtb2R1bGVQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgICAgICBtb2R1bGVSZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHNlbGYub25tZXNzYWdlID0gKHsgZGF0YTogeyBpZCwgY29tbWFuZCwgZGF0YSB9IH0pID0+IHtcbiAgICAgICAgICAgICAgbGV0IG1lc3NhZ2VQcm9taXNlID0gbW9kdWxlUHJvbWlzZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlUGF5bG9hZCA9IHsgaWQgfSxcbiAgICAgICAgICAgICAgICB0cmFuc2Zlckxpc3Q7XG5cbiAgICAgICAgICAgICAgaWYgKGNvbW1hbmQgPT09IFwiaW5pdFwiKSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoX0RlY29kZXIsIHtcbiAgICAgICAgICAgICAgICAgIFdBU01BdWRpb0RlY29kZXJDb21tb246IHsgdmFsdWU6IF9XQVNNQXVkaW9EZWNvZGVyQ29tbW9uIH0sXG4gICAgICAgICAgICAgICAgICBFbXNjcmlwdGVuV0FTTTogeyB2YWx1ZTogX0Vtc2NyaXB0ZW5XQVNNIH0sXG4gICAgICAgICAgICAgICAgICBtb2R1bGU6IHsgdmFsdWU6IGRhdGEubW9kdWxlIH0sXG4gICAgICAgICAgICAgICAgICBpc1dlYldvcmtlcjogeyB2YWx1ZTogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgZGVjb2RlciA9IG5ldyBfRGVjb2RlcihkYXRhLm9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIG1vZHVsZVJlc29sdmUoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb21tYW5kID09PSBcImZyZWVcIikge1xuICAgICAgICAgICAgICAgIGRlY29kZXIuZnJlZSgpO1xuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvbW1hbmQgPT09IFwicmVhZHlcIikge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2VQcm9taXNlID0gbWVzc2FnZVByb21pc2UudGhlbigoKSA9PiBkZWNvZGVyLnJlYWR5KTtcbiAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb21tYW5kID09PSBcInJlc2V0XCIpIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlUHJvbWlzZSA9IG1lc3NhZ2VQcm9taXNlLnRoZW4oKCkgPT4gZGVjb2Rlci5yZXNldCgpKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBcImRlY29kZVwiOlxuICAgICAgICAgICAgICAgIC8vIFwiZGVjb2RlRnJhbWVcIjpcbiAgICAgICAgICAgICAgICAvLyBcImRlY29kZUZyYW1lc1wiOlxuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICAgICAgICBtZXNzYWdlUGF5bG9hZCxcbiAgICAgICAgICAgICAgICAgIGRlY29kZXJbY29tbWFuZF0oXG4gICAgICAgICAgICAgICAgICAgIC8vIGRldGFjaCBidWZmZXJzXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoZGF0YSlcbiAgICAgICAgICAgICAgICAgICAgICA/IGRhdGEubWFwKChkYXRhKSA9PiBuZXcgVWludDhBcnJheShkYXRhKSlcbiAgICAgICAgICAgICAgICAgICAgICA6IG5ldyBVaW50OEFycmF5KGRhdGEpLFxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIC8vIFRoZSBcInRyYW5zZmVyTGlzdFwiIHBhcmFtZXRlciB0cmFuc2ZlcnMgb3duZXJzaGlwIG9mIGNoYW5uZWwgZGF0YSB0byBtYWluIHRocmVhZCxcbiAgICAgICAgICAgICAgICAvLyB3aGljaCBhdm9pZHMgY29weWluZyBtZW1vcnkuXG4gICAgICAgICAgICAgICAgdHJhbnNmZXJMaXN0ID0gbWVzc2FnZVBheWxvYWQuY2hhbm5lbERhdGFcbiAgICAgICAgICAgICAgICAgID8gbWVzc2FnZVBheWxvYWQuY2hhbm5lbERhdGEubWFwKChjaGFubmVsKSA9PiBjaGFubmVsLmJ1ZmZlcilcbiAgICAgICAgICAgICAgICAgIDogW107XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBtZXNzYWdlUHJvbWlzZS50aGVuKCgpID0+XG4gICAgICAgICAgICAgICAgc2VsZi5wb3N0TWVzc2FnZShtZXNzYWdlUGF5bG9hZCwgdHJhbnNmZXJMaXN0KSxcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSkudG9TdHJpbmcoKX0pKCR7RGVjb2Rlcn0sICR7V0FTTUF1ZGlvRGVjb2RlckNvbW1vbn0sICR7RW1zY3JpcHRlbldBU019KWA7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGlzTm9kZSA9IHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zLm5vZGUgIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICB9IGNhdGNoIHt9XG5cbiAgICAgIHNvdXJjZSA9IGlzTm9kZVxuICAgICAgICA/IGBkYXRhOiR7dHlwZX07YmFzZTY0LCR7QnVmZmVyLmZyb20od2Vid29ya2VyU291cmNlQ29kZSkudG9TdHJpbmcoXG4gICAgICAgICAgICBcImJhc2U2NFwiLFxuICAgICAgICAgICl9YFxuICAgICAgICA6IFVSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW3dlYndvcmtlclNvdXJjZUNvZGVdLCB7IHR5cGUgfSkpO1xuXG4gICAgICBXQVNNQXVkaW9EZWNvZGVyQ29tbW9uLm1vZHVsZXMuc2V0KERlY29kZXIsIHNvdXJjZSk7XG4gICAgfVxuXG4gICAgc3VwZXIoc291cmNlLCB7IG5hbWUgfSk7XG5cbiAgICB0aGlzLl9pZCA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSO1xuICAgIHRoaXMuX2VucXVldWVkT3BlcmF0aW9ucyA9IG5ldyBNYXAoKTtcblxuICAgIHRoaXMub25tZXNzYWdlID0gKHsgZGF0YSB9KSA9PiB7XG4gICAgICBjb25zdCB7IGlkLCAuLi5yZXN0IH0gPSBkYXRhO1xuICAgICAgdGhpcy5fZW5xdWV1ZWRPcGVyYXRpb25zLmdldChpZCkocmVzdCk7XG4gICAgICB0aGlzLl9lbnF1ZXVlZE9wZXJhdGlvbnMuZGVsZXRlKGlkKTtcbiAgICB9O1xuXG4gICAgbmV3IEVtc2NyaXB0ZW5XQVNNKFdBU01BdWRpb0RlY29kZXJDb21tb24pLmdldE1vZHVsZSgpLnRoZW4oKG1vZHVsZSkgPT4ge1xuICAgICAgdGhpcy5wb3N0VG9EZWNvZGVyKFwiaW5pdFwiLCB7IG1vZHVsZSwgb3B0aW9ucyB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIHBvc3RUb0RlY29kZXIoY29tbWFuZCwgZGF0YSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgdGhpcy5wb3N0TWVzc2FnZSh7XG4gICAgICAgIGNvbW1hbmQsXG4gICAgICAgIGlkOiB0aGlzLl9pZCxcbiAgICAgICAgZGF0YSxcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLl9lbnF1ZXVlZE9wZXJhdGlvbnMuc2V0KHRoaXMuX2lkKyssIHJlc29sdmUpO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IHJlYWR5KCkge1xuICAgIHJldHVybiB0aGlzLnBvc3RUb0RlY29kZXIoXCJyZWFkeVwiKTtcbiAgfVxuXG4gIGFzeW5jIGZyZWUoKSB7XG4gICAgYXdhaXQgdGhpcy5wb3N0VG9EZWNvZGVyKFwiZnJlZVwiKS5maW5hbGx5KCgpID0+IHtcbiAgICAgIHRoaXMudGVybWluYXRlKCk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyByZXNldCgpIHtcbiAgICBhd2FpdCB0aGlzLnBvc3RUb0RlY29kZXIoXCJyZXNldFwiKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/common/src/utilities.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/common/src/utilities.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assignNames: function() { return /* binding */ assignNames; }\n/* harmony export */ });\nconst assignNames = (Class, name) => {\n  Object.defineProperty(Class, \"name\", { value: name });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uL3NyYy91dGlsaXRpZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AseUNBQXlDLGFBQWE7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3YXNtLWF1ZGlvLWRlY29kZXJzL2NvbW1vbi9zcmMvdXRpbGl0aWVzLmpzPzUyYWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGFzc2lnbk5hbWVzID0gKENsYXNzLCBuYW1lKSA9PiB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDbGFzcywgXCJuYW1lXCIsIHsgdmFsdWU6IG5hbWUgfSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/common/src/utilities.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/flac/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/flac/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FLACDecoder: function() { return /* reexport safe */ _src_FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   FLACDecoderWebWorker: function() { return /* reexport safe */ _src_FLACDecoderWebWorker_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _src_FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/FLACDecoder.js */ \"./node_modules/@wasm-audio-decoders/flac/src/FLACDecoder.js\");\n/* harmony import */ var _src_FLACDecoderWebWorker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/FLACDecoderWebWorker.js */ \"./node_modules/@wasm-audio-decoders/flac/src/FLACDecoderWebWorker.js\");\n/* harmony import */ var _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wasm-audio-decoders/common */ \"./node_modules/@wasm-audio-decoders/common/index.js\");\n\n\n\n\n(0,_wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.assignNames)(_src_FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], \"FLACDecoder\");\n(0,_wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.assignNames)(_src_FLACDecoderWebWorker_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], \"FLACDecoderWebWorker\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvZmxhYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUNrQjtBQUNQOztBQUUxRCx3RUFBVyxDQUFDLDJEQUFXO0FBQ3ZCLHdFQUFXLENBQUMsb0VBQW9COztBQUVhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2FzbS1hdWRpby1kZWNvZGVycy9mbGFjL2luZGV4LmpzPzU2NDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZMQUNEZWNvZGVyIGZyb20gXCIuL3NyYy9GTEFDRGVjb2Rlci5qc1wiO1xuaW1wb3J0IEZMQUNEZWNvZGVyV2ViV29ya2VyIGZyb20gXCIuL3NyYy9GTEFDRGVjb2RlcldlYldvcmtlci5qc1wiO1xuaW1wb3J0IHsgYXNzaWduTmFtZXMgfSBmcm9tIFwiQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uXCI7XG5cbmFzc2lnbk5hbWVzKEZMQUNEZWNvZGVyLCBcIkZMQUNEZWNvZGVyXCIpO1xuYXNzaWduTmFtZXMoRkxBQ0RlY29kZXJXZWJXb3JrZXIsIFwiRkxBQ0RlY29kZXJXZWJXb3JrZXJcIik7XG5cbmV4cG9ydCB7IEZMQUNEZWNvZGVyLCBGTEFDRGVjb2RlcldlYldvcmtlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/flac/index.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/flac/src/EmscriptenWasm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/flac/src/EmscriptenWasm.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ EmscriptenWASM; }\n/* harmony export */ });\n/* **************************************************\n * This file is auto-generated during the build process.\n * Any edits to this file will be overwritten.\n ****************************************************/\n\nfunction EmscriptenWASM(WASMAudioDecoderCommon) {\nvar Module = Module;\n\nvar out = text => console.log(text);\n\nvar err = text => console.error(text);\n\nfunction ready() {}\n\nModule = {};\n\n/** @param {string|number=} what */ function abort(what) {\n throw what;\n}\n\nfor (var base64ReverseLookup = new Uint8Array(123), /*'z'+1*/ i = 25; i >= 0; --i) {\n base64ReverseLookup[48 + i] = 52 + i;\n base64ReverseLookup[65 + i] = i;\n base64ReverseLookup[97 + i] = 26 + i;\n}\n\nbase64ReverseLookup[43] = 62;\n\nbase64ReverseLookup[47] = 63;\n\n/** @noinline */ function base64Decode(b64) {\n var b1, b2, i = 0, j = 0, bLength = b64.length, output = new Uint8Array((bLength * 3 >> 2) - (b64[bLength - 2] == \"=\") - (b64[bLength - 1] == \"=\"));\n for (;i < bLength; i += 4, j += 3) {\n  b1 = base64ReverseLookup[b64.charCodeAt(i + 1)];\n  b2 = base64ReverseLookup[b64.charCodeAt(i + 2)];\n  output[j] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;\n  output[j + 1] = b1 << 4 | b2 >> 2;\n  output[j + 2] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i + 3)];\n }\n return output;\n}\n\nif (!EmscriptenWASM.wasm) Object.defineProperty(EmscriptenWASM, \"wasm\", {get: () => String.raw`dynEncode0146c05a3732ò{Úb\u0013Wt.\u001fá#\u001fû=}Ef\u0013ÎÄV\tÐë³w¹´ì_\u0019\u0007Y¹¬¹°[oc\u001f×ßow¬¼´ô0ÀýM¬~ÞD\u0000þðñ\u0000'óù5F\u0006ý\u0004's\"üsêuüµAÊ\u001c}*ê\nÃ (¡ÒØûYG+»\u0018\u0014;Øï3ãJ¡>Âñ?\býG1=}3/ATfC\u0004yÃ%K\u0005øSyPNçaHof\f¤ÇfªÌÄLcè\u0014fª>grÐý9zã¢©Ôå?nì\u0010b%Æ5Ç3>¤Þ\b= |¦Iá6Ãö_%U¡6IN#g\nèý\u00100\u001bü\u0004ü3;$ÝÄ!D\u0006^ = QãS©\u0007NiÈ\\Æ®9\u001fG\u001e@\u000b÷íÞÊuñ^\n¼õ¾©gfr\u001a.~o+¬\u0011öP\u0012,R<i\u0015\u001bL¤îþW\u0000Ç'¶FøVj\u0001î|Ò©qÂ}ð\u000bn]\u001dÜ\u000fPcO×,°Ë«VÐh\"²P®à\u0019\u000fÃËìÌìì'Qj¥;Î¤.¹gtß~WÚ,H\tÎpvúâ\u0014S\u0012vk\u0019_hÚÐ)\fñ,cQ\u0015Ûª¬³Þ{©û\u0018·qdâÊ\u0001Ê®\fi¦;Y\u0017Pª\u0012Pr*¼\u0017ø\u001a\u00165\u0000~î,\tZ§ÆÅ=MV<HêÐÁ2û\u001f ×ì*#\u0017¬W÷>§í[= z¿q¾nþjë*Ó3ù>º\u0000H\u000f\u0014ñÚáÐ¤çæ­¼\u001aãW+ Î²öt\u001biîq6²)\u0011ïÎ¬F}¾áÆ/ÈJ\u0019'êÈ\\ít77ú¯p\u0006è\u001c¢ [\n\u0005\u0006\u001bZú<Q|Ül\n;H5ôöÿa\tòæðÏ\u0005Ë º)\u001bGòÏm[´V)Ù7?¥KÓ\u000fmõõspÔ§SÅ9³7@'¯êvC2s­gD6q¦Eõxâ'-å>\u001eÌè>¢æ\u0002ëíwuß\f¯fiâüÜÕ-u1\bwýE\u0011\u001b\u001a Ø#J£°ÛR×±!pÅ»3EyZ:j/?íð$oþ[rúä:d#ÛÀpj#­»É¦Ï!\u0007éJq\u001b5CpvÂÛSÈ$F®ÍÞ¡»¸µFÚ\u001aTì=}£\u001bQ°\n\u000e\u0007\u0015\u001aúR+aËê½PëssëL8B\u0019e\u001b= 9)Ð\u001b4O­Ý#y2¾\u001cÚc= =}^n\u0017p\u0019= ¿Ï\u0018{õ'\u0014F(u²à]¸OÀÑ÷£¼I¢ØöÖàØkÛõkÈ¶\"£=M#xûüdô{x ëÎ\u000f©x´¸\u0017 \nRßß\u0012P\u000fÐeX©\u001dÍNF\u0018\u000e,!ý^?(HÙÂç\u000e\u0014Y\u0007ïÏfq.£í1ÅY¿\u0000¨yUn°.·èç°~ß£iO+\u0004J{Ù¡ÅhþÀhþ\u0010Ý]Â_@\u0018''3ËO {1bÐ¾ôàïþ\u0017j\u001fûQÆ2®\u0007¤+\u0011\u0016Ý\"]¹t\u001c~ð¨Àau¡¿KÐå«}ÇÀõ\b¬æ7Ð=M\u0011p~½£}D²\u0001\u001e©]÷ª\u000bâÊ¥HÓ-Î[@Y\fü*< GB\u0003é\u001f\u001cu)Ð)ð#\u0013Eßí©}év\u0005á¼èâ\u0001yyiÆºo6ÝndbÐÍí\u000f¾Dn\u0016öø\b÷BÊÚª×¸Ð2\u001dwe¼rGÙR/Ì\u001d}<NjáÀ9§×= ö+µ\u001b.¥ï[ðxò}É¶7°Ûyeôíî\u001a\u0016åÄðìà\u001b¬9XÈiÇØ\u0002\u0018Ñ^BÆK½Æ½1\n­£×ïSºiÂ\u0017\"ñkü¬Ë>«6DÆ~\u001c?\u001bàþÓºÿÆiÁb\u001f»*îõc/®îí,.K3ñúÏcóa\u0017xh·ú¿ác\u0003è)®AÎü è#Ô<Õ®\u0005éi*.\u001eÎÔO\f·©ß/×Êñ$îMþrÀ:Ìf£Tr¹qZ=M¶·\u001f²%®0EöØÔ6NæiH*ÎÕFõ6(\u0017ç\u001b=MU'ºÁ[\u0005ªeôÐÂþÔ]ôbuµn\u0013«ùËq¬qrßóöv¡à.eÖùÉòwåSb>¢\u0016ÉU\u0016à^óÜ¢r©'¥\u001fvÑs\u0011·^ÆÐ?'æ\f­Äj\u0005é²àÁ\u001d\u0012\u0012\u0012\u0012\u0012É\u0013\u0012\u0012\u0012ÒÜbòðû¨#q¡PëÈ´\u0012lté|\u0005\u001dj\u0010ÃÿUº{ýÓô'¹\u0018û<úÈ<3\u000b©µ£\u000bµü\u0000ôÁî1ÔDöó­U\u000f\u0006õ0Sd°Ï&Çæ¶ÛÃbzf\u001a\u001fm­iÈz7pùø\u0010ò¢wD,¼W>;\u0003è¼nªHäO¢\u0004\u001fÅ\u0004\u0005ë}~î[cÞOYÞ¶±\u001eqm6Ñ\u00037ÇxG=MJ$^ÁlXÚ\u0010\u000bö\u0007»Y¸\u00111¬\u000e©æ¡¶8Xé,4XôÛ¶\u001c\u0019\u001dÁ<þGvÑIôOÂÁý\u0006Tx×iÍQ1Mb7ÖbÚ·&¿\u0017ó\u000eYê!\u0006\u0014Û\u0014iàtêj[w4\u000f(ðfj=M)E\u0010ëTâ^ûÿÐ^Þ2\fÈKAôYÝä= {Qtîthnä £¶¾Ø»ß\u0012X\u001e\u0019¹ \bÜ]\u0019¤ÃÞ·Ê<É¯hëÅ\"ÏéP^³Hz´OÓN\b>Æ0P\b¢}­9\u0016),Ò¢ôÉ$\u0018ò2\u0004/¥\u0005àyóOÇH ÖÙÉY4\u0010ìÕaj@ÓÜ!cê\u001b=}¨\u0017L\u0019?Êàý\u001aÜr»';É=Mª0/«) wKs¬ç%}Â\u001egÉV0\n\u0016³\t\u001c3­n\u0005úÉçÜNmçÖoC\u0003ß=Mjð¦ð©«\u0002¾uïÛÜy\u001dÎ\u001diê};)ãÛ]¹×ÆÎÔ¬?É[P\tàï\u001c¸ü\u001c\u0015ñ¥ò¹\u001c²!D¸NCÉóÜoæo¡:\u000b\u0007\u0001¼À^]ó£Ã½5\"Úðê®ÍT×~é3Ì¹Í2_£PÂ«+®Um²ª\u001c\u001b\u001f\u0004+ñï}U\u0002Ã¨f\u0013JçÕ!k\u001aÓª= µ\f´TBÂú²\u001d\u0010Ý¢\u0014\u0014XØ\"[\u001af\u0015e]\u0005Â4-±POmþ¿UmBåQ¨âÆx×®Ji\"þçCîT\u0002\u0005\u0005jw\u000bñm¤³Ð}ª#-[h®\u0015A-&Kß,[Î\u001dâ(S$w5²ÕA-@ð;xoõ_8xwd\u001d\u001cZº,×7E\u000b_ÂbDfÿó24NîkºI=}½ú@:÷TÝ°\u001e5!\u0003aM¼3\u0002Â\u00132Ø]ìZ¦$\u001a5qíq:±¡\u0007G4Û³±]à9®øÍÑüÇkÿP°N[l½îü\u00031ÅTBN»¨.\u0007Ó¾\u001eO:\u001f\u0003iñÈæIí4\u0011«Þû\"ÏÓ, \u0015ßÈdExEq³´[-äý'iwo½\u0019ÙÕå4!3ar\u0006'\u0004ù\tÝªä\u0005¶$QËÊ²\u0014ýGaD\u0010KWX3%Îz/0T\u0015âz\u000bPµ·ÀÌüüãÑõåÙ®ÓúA×t\u0006ií\u001c/?ËQË\u001fÌe\u0002ÃU\u000ec\u001dÛ%\"yµ$á¿5áØóØ4ªpýa8ë»h×LihEg|·gnGHrª¿å\u001e Ø\t¨A¹¯°RÑQ$Q´1\\Ö\u0007soþ£u®ÑaNz\u0006t^v\u000bÚº·!ëþz\u0019¬\u0019ä%?\u0013ãß=}Ð¨­A_\u0003ßÁ5-äÁ4ÿ-äÁ4\u0003)\u0005o\u0004~×F6©ð\u0002.\u0016\u0019ÙB=M\u001aU3§&ù÷Ì6äÙüÑÐ_ò(Y£ôá´ÿ´ºÿ¯¹×ÒUÂþ±y£E\u001c|ãÝ&wW/\u0010{ªRÐ¦«ãKINmÄNB1ZtÈ\u000biµúp\u001bÆ¶gÂ\u0010\fK]d÷£¾\n\u0003ôQÕ\u001et¸¦Í\u000eÇÛ\u000eÇCÙw¸Ö;×ITòT´diM\biMo\\\u001e|Ì\u0006F\biÜ'WÒ«H'WýWd_d§fFda= ÉÎü\u001böóTºbf@Úñ®ígPíéÆ\u001dÄìo\u0006cn¶iÆsHxãÆ\u0012ffiHx%°rKªÁGßJªof\u0001_ 7VÖ_JªìYÖÿéÆK\u001a= ×qZ»ç¶ø®\u001b£µ³±PL\u001cJjÏ_Ö\u0016x1= Þ\u0011ÁD\u001eïðÆ0L-\u000eÑ(¬´Ð\u0014Ûåä4B;%Î4~ÜÌ¾\u0011±\u0015Ö\u0000õ·= É0èÔRüvË®æwå±ª3üA2gÐ=}æ\u000e\u0000_òrÔ»Òý±\u0007õræp ÁóC\u0005,/|O\\·\"qh'<\u001c\u00148yl¯lÚ\u0014·ëyëi\t,ôÖ½Æb¸æþÎ(\u001c\"O×ñ\u0011 6m\u001d \u000flji¢¡ÝI©ËÁKÒý\u0000\u0017ãôOT8_ùãFF'5Q\u0016=}GfÄ_ÉÒßmÕrkùöpj÷þ7èÞhsþMH\u001b~ôVÏ]\u001eg\fûËÝg¼RÁ í\u0007½Ç®c\u0005zÀ§Ùhê§ Ü\u0010$É>\u001f%{ísªß½\"NvxOh\u0002-aQÖkRì\u0003lr\u001et,Øº\t¶\u001bêj\u0010³Ç(rZgIÙ\u001f\u0006ª\u001cyßlÈ\u000bq\u001döÓOy£\u0002èdO¿ÉWFW dÀlU×\u0017\u001b\u000eÚÚy¶ÞMÉ\u0010\u0012ß/qyÃ«|Z\u0005x\f2\f\u0006Ø^<ôvX¯[h;²*¤¡\u0010×jRÊZÑÞÖÚôNb?¤$à= #=M;öoDZQÅM\nÒôE«§Ê\u0019«ûq¦3Á\u0007¢,\u0001\u0012Ä/E>´~\u0006ØxL\u0014ÿl'¢g!*\u0017 xþVwd¬nùÖs°¹w¢ÖÏ\u001aè\u0007shÏh Ïµüà½¬}¦±YÍ¡\b\u000ehdÎ= \u0013Ó\u000e\u0010Zu¦aò!EHU<V\u0002~¸A®kó\u001ci\u0017TQÛPÞÙÒTmzÉµb\\|4Q§ âAH§òL¾\bÔ%\u001eÑ°r¿¥Gó²0¨Kg3¯Èf.×\u001ecO\f¤\"Ë1¼\u0014Ú8på3ç´ó£ÃàR!Ô%ÖtÍCò¨\u0002³­PÕ\b®ÿwsë¸´ÿç®¢\u001e^vðW¥ù\u0000=MÛZ#Ô\u001a5¯æÀ\u001b¬ý\u001a&¾ÖsZJznÛ\f¦x\n\\\"¾Ï¡\"¸\"ô'wë\u0006è\u0001kM0Üsä¤s\\d#2\u0010ºÈöIÞ/Z<Xü#Mj\u0007Î\u000fËu*cú?=M;}CSÅÅI+\\+aD@wBÓ.ÖçA9káÖöOâ=M\u0013ø\u0016üñÈó\u0013(ä³GÀ\u0005\u0003;æ\u000eÍ\u000b%\u0013\u0013*vÔ¡U/\u0004ihªqõ5à¦+û{»\\â¼¸åØwÍ-ÄÙèÙ\neïlÐS$\u001dý q\nñíOxpÅx\u0004'^:\u0007³\ndbf \u001d\u0015}.Ã%Ðxl¿´a\u000f¹iØ}üÙB%´²g?\u000b³j\u0005~h¿¹\u000fµ63,LÏvYÄ[ÿ1¶µ²mB\u0002çºÙ\u001duµ);\u0011iØ\u001e8}7Ì\u0018ØÕ´i?.Î*á!D\\$\u000087³jee×Â±\u000f¾/l\u000fí= UÕ§JBç= ´\u001b\u0019´EU¬ò¥RÂM2Ù\u001a¿±È=MvÃ(³\u000b±W\u0001ã¿)u\u0014³6Þ°X8ÖGo\u0018\u0011F*-\tlîa®\u001c\u0004Ààq=M\u000eU÷OÞã'7j¢J\u001b2'¼KP@3ôS·í\u0003¹+§\u0007v¶)Øü\u000b$î¹\\!ÍÏZ·Bpu°]\u0013ðÙHryþPÇAô'X2c\u0019å®¹®Wø(U\u0014\u001ec\u001fEDÈc\u00000º\bP´#U\u0001<LÜiÒæý(INz©Åº \u00119G=}¨q'§9Æ!±ÔÂÁzbO,¹|¿,õhYdKVß\u0015|\u0004\u001d*\"\u0016køºÏ\u00144¯1»?rò¼hCÐ\u0003rÔ-Ã|ÞÄ\u000eõP1uy*×a¬ÃÄÄáB¸\u0004¯_\u0013ç=MÛ0Ôñvz\bFa(|Ïôqi´L\"\u0000*Må=Mi±%ÿeÚf~¸G \u0014%ÄÌ|¡«Þîqj\u001aR43\u0000êtÿ\u001f­æ^\u000e\u0015¨\u0004ðGØeWn\u0015¡ík±\u000bÔ*C>:ø$ç¹vç¾ñ¼øÚoñ¥5<v¤Å4¾7ÁH¿ê§Äïß;­2\u001d'm§[Àï\u001f@a0¾\u001dÔûAö¡3zø¼æ¥3^©Øå}\u000eOTº\u001a\"»áÚnÚÚæ%\u001bÅ.DålÝ\bÂ\u001fÎóúÕñà><mMÑ\u0002Þcád\u0011ÕX\u001eÊÅµjm;#Á\u001ab£mUâÅ&Z(ê¯= \u000b¿#dr²Üän\b*(Bö(æ\u001cQ<0XÕ©;bÕðt6n1bÕ\u000276;RÕê<ÀjLÚiÉ¤\u0016Ã\u000e\bÒO;£Ø±\u0014ïÏÈÏY¹lÔ¯èª¨YQl4É{ÆùyOî!Z\u0010øOÁeÓ/¸¦À\\\u0010w\u0019+\u0006º\u0014JßtÞf\u0019+Î/¼µÉû«3~ßo\u000f\u0012â\u0012ZªlUÙ\u001cÎÇ\t)¯'¶h£=M§T\u0019Ç\tzZ©T-IÍ/Þ\tb\u001c)¸ò\fÎ=M\fÎÁW·r¡p2½Í¬h\u001e¨&\u000bU\u0002>wuÄ\u0012Ñ5¿oÕ±A5SYwk÷],²þÚ\u0006]¼¥ãeËÿsÕo.JãS\bgëv\u0001P¹ëÄZm\n\u001f]X3\nü\u0000Ì3¨\u0002+8ì\u0014\u0001L\\Z\u0010\u0011LxîZµPKõ!.øººëÍ<\u0016²qU¿\u000eÁd8wU6\u0018s½\u000bLAÆ\u0011DÖÙÑHX\b<j¿ÿ8±a\u0017Å\u001bºiàO\u0011W\u0013Ê-Î¬h)Î¬h-Î¬¨\fW\u0013\u000fW\u0013\nHWõS\u0007e\u0017l2ÄÒWìèi\u0019w'èMìQl\u000eº¨\u0000s}éPeÅÙT\u0012\u000e§ò Õ\u001f\u0013\fià²ÔW­©\nØÎ©\u001f´_\u0017\u00011ià\u0002>wuÄ\u0012Ñ5¿oq³E\u0014ãºôé»ðæÑ!Ò.§xËßñº\\ñéO@d\u0001C~\u0010© x£\fú©\u0000Ð¯\u0015:÷Þß$Ñ/Ò/A¨ÀÈ¶gÁÂÇd¥®Õ\u0015Û\u000b8EaÑ³ü\u0007ïrZ\u0005|\\ \u0005ç\u00124 \u001c³õ]L´K\u000eæ·+!r¢\"c+?â{Hñ¶×C\u0006)²YOy§òiwª+£Ücø\u0010\u0011aÂ@Ä2Zð\u0010J#\u001efùx\u001eÏÀ= bdôÙtw^\u000en\u001a\u0004yL\u001fàw&n­ ¼/\u0002At£¼/r0°LLy\u001cèéÁxèd¯­&Nn¼¦Òøumc©ùä÷ÈÒ+©\f,×qZ- \u0011i9VÑùô~5Ñ9·7òqtA(Ø\u000b±<ÐhÅðb¯*±\t¨\u0004Ì\\@Q³§À\u0017\u0019áç.ß<i\u0017iãÕÕºOýÐ$Óî ¡_é.#ce_áU¢Ó\u0004Ârt=Mèí%}t|\\ã\\Õã\u0005³è}×õS=}u8{úv%V\u0003o_ê¾­(Ñv=MÿüOÄ,pF¿.ºx\u001dC^Ìù\u000eÌãr5ÚÇ\u000bXrÍþ\u0014IuÝ\u0005¢ÛìÞáõ*,£´\u0014«½ÔÌ!t\u001bi\u0000 óhÛéô+¶%ì¹\u0018÷#ÈÞcósü§Èå²°tU³-\bä8×·¡Ãöz;ù\u001e\u001cìæqÀÕõ^\u0002\u0011$\u0006#ãåQ\u0018¦|Õ,\u001dZ\"{°,ã#g*Ê\u0016 ó|\u001aæç,©¼s>¬\u001d¨îµ¼s\u0012\u0016¬\u001dT84\u0001Ü¾éôû\u0005ê±Óü~ÑÙÕ\u001f¨Àù\u000bÖ;¬Ñ\u001f])\\µ\u0014¡½%(3¹\u001d<\\±VI'Öm\u000bÄ¨5<\u000f¾+¯Mÿ¥\u0019cÖõ[RæþöÉy\tùÖü-uu{äø!$j?k\u001f\u0000r:\"´K0± [§\\¼ð$\u0007\u000ft¼txØÿ$çX=}ØâX\u0004ãáâ)!D\u001fªåµ­\u0014l­>\\\u0014lÇµÁ­Ù\u0004­ÙÐµ?\u001fjÕ»OÝ°C\u0014uëôuÃë±í*hI½©¥\f\u0000!dáp\u001bL²Ü\u000bQËÿýæö!KU\u0015\u001e=}¹\u001e\u0010\ni\u0006öÒ³lz²á\u000fçáéÖ tûÍX·×'w\u0011\u001cÍéáûé­\u001aÕüåFÞI®{§ÚoÇÜÛ_5G'ë\u0017þF\"¸\u0006sÇe·7¿Ù\u0000p&\u0019ÙØ»Ú¡ï\u0019víhÈügå°\u0019\u001c)+®VDõ\u001b=M 44÷×\u0005g#âu\t\u0017'Ê\u00046d42é+\u0011öñG~4\u0014\to®H\u001eRÔ71í\u0014KÁHCÛÅ=}\u0010\u0005)Ú-*o\u001b¹¥+~Ú½0æÇâÀU\u001f¥=}ÌY³8þ©\u0018\u001f\b»Êr#QÜPâÇYm\u001c>F\u0010Å3P°u U\u0000Á#O<<v\u0012õÏ2T\u0014±Z¶ÔÆ/ÂÂ¿Hï©\u00137ñ&\\®ì\u0006\u0002$ÇpÒVÔe\u001aÇ\u0002ì-M;m\bóm\u0007/¿ðË\u0016£Âñß\u001a[uºvpdÔÂ»4\tÊ{¬\u0017Q¢ûZ\u0012\u000b.ri/L2\n¤Ê0°±f:Ù\u001d0n\tµÚiªåÂ ²\tb$ùQ¹§}þPß}çË/°I«¶JÇoì+F®Þ¤Q\u001b+ M³ËÿZXó\bî¤\\¦N{!l\u001ah*p¾òWP]åTÕ\u0011-\t{\u0011/ïI· \u0016Å¶¹´O-'¶ÚlþíJMã\u001e=}ñ¶\u00194\n\u000fF\u000e\u0000ÿ(æ\u0016@MWï¢Ð0U¾\u0010dr\u001d_OÚ\u0018ì\f72\u000fJÈkþ\u00020A\u0002Ô¤eÇìÔÚ\nµðNúé\u0016ü\u0015SºôÕ\b\bªÀÈ¥dÇs\"!Óä´áÄ ÏõíRß¡²|NÆ¤ÕØ\n¯BÊ#ê!°\u001dãWñMò¾ImSmÜ»PÒ=M®áÔu%\nw\u000e'G|S½\u001b+ÞvbÍ¤Vý8¤¦oðÃ\u0006= Z°\u001c« \u001b|×­Öóê²²ffD\u000f¿ ðî\u0002R\u001fÛÖc\u0012o¬êÚcuºç_§.d*\"i\f-h/¾EL\\Á}¤Ë>´¬\u0018\tÓæþ£ê0ÔÐÄ_ÞÎr~´ñ9\fr-\u0007ö\u0005\u000bÖ]ÜKÆ¯Å-\u0018$q\u0002e\u000e¿%Ñ=MØ\u0006¼\u0002¾è¤\u001c\u001b×<»êîi^ôüSÂ\u0007ÏÄgaiY7TÍ\u0010ÓÖ©Û~4YÂÙ\u0016M\bÉï»Ý\u0000;¸\u0012«fDF*i!JGp\u001aËÀÆ6¤øh¯ÿseqø÷hyègZ¼\u0000|?´a³Í|«q³à,:rÆnÁ\"Ò\tÓ Öu|s\u001e{!çÔa ÆÐ\u0007\u0017V:Tzæ&ËèBâßæÞíóa\u000bR²ÒcöÌx|hÕ«t*q«?c\u0010\u0010\u0011¡®\faÙ´Ñ\u001aD\u0014\náï¯Ë\u0002(å(Àg Í\u0010\u0018þ~·6õNxQÔXTmN-JÕ¼/ãtÃ\u0002e5\u0018íz3ÀBx#)Å\u0019\u0004uEQ=}+ÅO/qB)ë³äÈù~»¨.Ý_%¹ãn\u001dlj±Rm±Rá\u0004âRáÌûxâp\f\u0017÷(Õff$I\n×sé©F\u001dEYdÚÃh¤aÊ\n!È6\u0010ÎémG-&£õF8ÀtÀ¯9¤ GàÎ\u0014G²¢uñ-kÉ#És/tx¼M»Ücgòè\u0005-ïÆdÆP\f«p¶æ«O°© \u0002¡lûÄñu\u0007ivÖÒ\u0006êY\u0015s´\"\u0005rºv\bÍ3Må=Mº\u0017øC<\u0019Ó/äfô¡ÛÏ$rëy!ÝêÉõçe6¹É¹3\u0004ä\u0019WOë\u0006<[\b\u0015gµ»¡\u000e\u0000ðGõ\u00160Sú'¿);¤¢\u0014Ubò ªmðÀYs:(<à\\¶¬£÷zü{\u0018\t¯\u0003ûi%ÖUÌi%\b¯:ïbÙôkò¬Ü&µ+i\u0003ràWKn\u001f\fÇòJ­ØÅ/Çr=MI4¼Mø´DTÆmaMøèÝä)³AG6hæ¥ÐE&Ì7Z\u0003Üý'ûfë2eÜÔ+Ó.-!¦ÿÛ\u0015:Al\"ùH(\u00186ãûò­\u0003É\\zKããÓ{^\u0002þ¶?ð'ô\u0005tÏØQnY´½h£Ï&\u001b@®RîB¾Âæîµÿ'NÓj\u0000ÐÖ>ßÚ½S\u0000\u001f}¦E\t©M²õ¯¥ÿei\u0004þÊ)Oæ!-ÓÔ«ô\u0001Á9Ä7¼ ¹»ìÉ'bÜN­ÉM\tu¥\u0000H½\u0011ú%ÛIYüàM¡Zª\u0012CÔ*ãõ\"uÚ#ü&*ûõøÀÍ9\u0017åþLch×\foßu%\u0005\u001a\u000b»toíµÆ¿W;îÉFØ¿u«Z^\u001eÈVêßKaÏ3\buD;ÅA½E+5E45­©»]D\u001cU¥D}E6ÅB\u001d?a\u0012ÀÓN7bNJ=}çºèÐ\u0003Á\u0004\u001a\u00109?FÎ\u0015±\"§¡\u001b| \"\u0011°M/¡\u0018²x}½v¡ö \u0002ou)^l[UEvã\\\u000b\u0007iàÜñè\u001e\u0007cÌó8(=}Ó\u0014Xºk\u0001éÈ=Mî¢|¾ðÜÖz¢â9>ïO7¢½®äuû3÷õ.¶&ï¥ëhv\u0001TYúÃ©H²'\"Æf\u001a,'\u000eºR.?0ÇGÖuÎÔwò7M\u0014T@@¿.ìkÍ¬\u0005À\t±t\u001aß[=MÁ¥T#/ó¢/'*DZ\u0001ÎÕã°ØðMÿ\u0014ÖçåKg·W&-+\u0007*\u0011h¶\u0004\u0012ù®Y\u000e¾v3ÙÖoÉï*\u0017:³¦L¾\u001f\u0007m2Îÿ×FtÓ®)v(j¾f\u0012°V³1^\u001cç[û\u001d|l\"H&Ù«e°ëYl?\núHa\u001fÄkÖj\u0019Ticv¬\u0006Î¯V=M÷¡#yT?_}U\u0002z£CÄ¢Å\u0018ié(\u0018UÞX7\u0004û?ç¿|~cx°\u001cêF\u000fXO%k8Ìð\u001ckqjðt7\u0010¿no­ú*?°Ûù¤[/z åþ= v\u001d\u000eR¹þéN3åDÊø&ÿÆe\u0001Ô\u000f[[Ï}XÈo 4\u001e¾Ñ5*¾\u0019ÔZ\u00004\u0010X©(¯¶:¶çàFAÝçB#¹Ó\u0017=M$r¶Ö\u00051ü]ã:ÂÇÇF>óÊæ\u0004d\u0004¹Tµr­\u0005§öÅ=M\u001c±-[õÃï!9\u0016\u0012a4\u0001¯RëeÃo\u00045»\u0007\u001fà|õ\\\u0013{Û=}f5yf\u0015\u0000Ò1ÅÞÔ?{Ýò¢ø\u0014Çïó\u0016R/ó=}¸¿$ð\u0002o+æ¨d\u0010\u0001.¢[À]v\u0012Ä¬>ß\u0010UHe\u0018ô~Ó×³beoec\u001aâÑÛ~|ÊP\u0013Ôß\u000eb5Ý39dìeÆ\u0003á]3«t]ÃÇ¸..±¾À\u0018Ò­@¿n¡TiEx\u0018\tv¶Ã¿î\u0019ed®\u0014\u000bÜ\tQg=MGÙ[Ø \u0005\u0017¤jñÒH®FjeÊl/÷\u0000S\u000f&Æ¾éx\u0000Ä ÆKdóöd@A[óöþ=M\u001awp\u0006Øk/9?\u0004/ÆÍ\u0007{Ö¹,/èAVKqD-bì~/­\u001e\u001e>Þ6Ó\u001dÙÒ|>×I×\b\u0017{ºc(ê+\u001b»\u000e ¹À\"wÓôÀ¾Ñg3¢M¸cú¦\b¢þT¤£M\u0019ÿT¤£M¸c-Ö©Ú\\B&\u0010.a¦\u001d\u0007¦°c\u0001T®-ÿ\u0007ç¸qT[@\"F!¨ÌHü\\\u0017ÿøAÂj8~±\u0015vÛ9okf5I\u00035A@ì=M×ÂÈÒ\u0010åÒµ~LÃ¶a÷MMÎ¾jÅã$\u001d>\\Õ*Õä!8\"Î*Ó3j\u0005\u0014ýa¡Ä·a\u000fuÔ$\"8aÂ\u0001ÿØ8\u001dï4\"a!OÅÙµµ²';\u0011!¾C8Î*UüÙB\u0004C¦Q\u000fý×Âº8\u00133jÅÑµµ´g?>|ØÕÕ\u0004ûã*k\u0004\u0003ûË*q\u0006Ó'çÂta$w\u0000°GJt\u0007H¦¢YÚ£?è\"ûÏ\u0002¸kÀ×F-ö*Ìè@¾ÿ>b\tkl¾Ò$¯Y\u0011Ð}jK\u0004~\fhÙ\u0010\u0018_«<\\\u0002/¤\u0001*8ê@\nÜ)R\u0001_¬Køe>\u001e)é(i-i_{=}£\u000f)zÌ\u0012x\u001b>a\u0014CNÄmeÑPò³ûR ÒµU\u001fØÀ¬ÚÈ³>|±¾$:6%wqNuàRom\u0010½MÚÝ¤¤×¸è¢e¤¿»S\u0010Ï8 Æ¸©[+,\u0010ÓT+ÓG+Mñnµôç$= ´óè\u0002\u0003Ìh+£¥Un¤?\u000f= ÐÚY+ÕÎ\b\u00046FÎ\u0002ZBý\fÄ@¶D¢&¢;Ä}>P\u001dU¤\\=M\u0002U#@â\u001aÿá\u0018ê¶Ø_yÉ$\u000b) ÝbfNÍ\tdÏÝ\"²m´\u0002YÖ·\u0014£>\n-;¼kG\u0019\u0019\u0000ÁÈW\u0007zÄ·c)g\u000b\u0016Amíae\u0005ym\u001f&SGQ!åmyÎFëÀ[\u0003\u0016\u0006hÜEE°Ô\u000eár\u0006GÔ6m(¸\f¥Ï_pwk¬¡kÙ\u0004XjË*!>dÉEÉÍÕ\u001cÊ¿\\\u000fÈÚ¶²+?Êk\u0016Xe!Iö/¹s÷Sö\u0011 #l%%lÅ\u0000ßeyt7ôí\túã\u000e³»\u0002¿\u0001Þ\u0004\"tô¤\u0004¢ÛX\u0003£á#£û_Ç[üÿg\nó\u0001Ü);Q\u000fqí;Ã¡½ª2T\n,RºÞc!= \u001a^RöËUÓ[°A'=}eå¤Lo\u001aÚå\u0016iRÆ²á¦%ä²O\u0012&Çê·MìÑ]¶YöñMÕ.c8qQì;\u001eÂKíC\u0001\u0018¹uNè?w>èHû×Óáüµá«±f= ;¬%|;¨¾Pmrbx%Ø\u0012¬t *× <)³ð­h)\u0013 ©Qê%x×´¸>\u00166\u0010-9ÜåïCÿê{Í%¡Çr'Çr¤AÑüõ¿¡7½=M\u000bÁa\u000bu#ÿ>+·7÷Ó(1)¨ýò,.Ûw\u0000S(zÆï ei\u001cmÇ\u001eº\u001f t¡õ\u0018P\u0000\\Þ8þÜ)í\u0002VV¼\u0003§¡ÉFì§õ IO¸d]O\u0013Ö3 @OÜè¤|M\u00061\u0003|\u0019ç\u0002|õ\u0007~ì®ËU\u0015½B\u0004\"\u001d\u0002«\u0007Îu_Ëø\u0001OºWz$\u0003·3×%D\u0002Ã\u0019÷\u0001%¶24á%.~÷H1°\u0019!Jç9\u000f\u0004E=M%E)*qî¢XÁÝðcxFrgj£¾ø ïS¹S¸ÉWnÓº²Çêº--ÈÐÜ\f@=Mþ5cy\u0002\u001a\u001b(,¦´_ìå\t\u0002m\u0005\u0001gO+çíØÍÎeqKm¼Y{Õ\u0010DiÉô Ìgø}Î@Ü%ïèvþT\u0005Ãý|\"Xhsñ\u001cï\u0016\u0001y2L3Í-<ç\u0019\u0002'\fÃ..­«CÈSÃ\u0010û<\u0016\u0007£\u001eVí#\u000eÌ>ð«Á\t®.fn)dßèÝ\u0010§tL|rçéF<æ:y3HÌâÌPmB\u0002¨zÊ5,Ä÷7@éj\u000e\u001dß5*ûQu\u000f¤ù\"9:\u0010ªØÊ_EÚh=}\b)\u000fãÑNÕ¸\u0007ifÁ@\u0006û7_ã\u0019-ìfíìp-ô:öò/¼>·Y]Ùry;{ÈM´ã\u0018\u0002í±eì\u001a®¬D\u001e¦±]³ÑÝ~¡ÛÃ\u00100Âc5\u0011òÛg¹üÜÏãÃ:Ø¶Ù1-~¬³k\u0005Æ³=}ô0^bï(\u0000;áQ>¿ÁVHÕR(´öÄB+(m«*bw:ªPP ß®= ÄêÑ÷·Î·ë5E-\"\u001eûx©D\u001f%\u0011ª­â\u0012J/äçy·å^x\u000f¸©}ÛòlqªyÍ\u001dèéèPºA yi)\u000bü\u001cÚ±ßbIÎÍaôzÐ$z^R?øAf\u001dÉÕ×\u000f\u001e\f&\u001fÑyø¬a\u0003®ÈyQ.SYÌ/!\u0015°õû\u001aÔp&naýêEÕè4®å¥ïÛ×\u000eæNGÑ4&HöBÐô/ÖÆ \\\u001a{t=M\u0017Þ¦~ÛjÀÇ#zP\u001bÖWF\f5ìÜ0\u0001Ûçy:ð^õeÿÿ%ð\u001f\u000e+¯Ò¼))\u0012Ò:v-\u0007¨äüCC(\u001e<:ôNíL<W·\u0012å44úÙíaßì\u0016a³ôå=}MÔ¯EkÏd0*õkÎ¨âU*sV\u0004ó~eÒ0\u0011ì\u0001¦\u0015\u0011âý\\nÿ´\u0000t¶~\u001cl\u000f :R|Å\fL!î,¯>w\u000b\u001fî»wjV>PÓÏ\u00103Ûëuj¿¥4!/øs/\u0003RtÛÏ&D\u0019\u000f\u00033u\u0012\u001968\u0003\ntÅgÿ½abÑõü<¯èB_}Ê£îö­h2(æßG!\u0011tÀÞcê8n0ß\\\u001et\u0012ÆwaÊ>³\bÔs±\n\u0015TÏ(¾Ð2§{yº³·5ïåX¬ð\u0013v~,öä\u0013ÈhuoªePÐ\u0002\u0013¦b*ùS×µ§oSù»§}ù×Z¬çêZP­3ä\u0002í3¤]°¿nÉzZÊe¬ÚGçÿP¯RÊÃB÷¾ÆuT5bWZ*Ü¼*òÃ\u0015MùTã\u0014\u0013.A.i+n\u001f>þM¡|ô\u000bfþM­Ù³¶Ê©Wâÿy>v»dD\"#£\u001a©hC¯ñ\u0002¹|6@Ï[\u0011HZôI1OX.òW¹\u0005ëÿA;vÛõyÛEÐ+!ßøIé\u0002°$÷s¿Á¡84aÀNôì1aß¼Ó©iK=}×7WX¯ÚË?ü)ÏÏK];ºtÒt³Aµ\u0003½ì%.­©µÛâlvfKª|àr<ùÌÁ%|¢\bcâ^Ã\u0006\u000bæÃ m\u000e0·qÛ\u001c\u0019ý|¢ö¹ªC¥S= 6Jµµ@Ãq[åP¯ú\u001c-\u001cm\u0017áM¦y¸,\u001d\u0004Wç-º]Ü¾ÀëfhdÖ84&®p\u0006Ëæ(\nT]]YÃRIp3Íõ¤§Ëîq\u0007a\u0018\\ZV\u001f:¦XYQ/øbÑ«V$ÑÊO\u0002XÙ\"ÿs#Ô=Mï¹\bÊ\u0017´L¯Iû§ß\taT\u0018!\"íi\u0017È\u0004C6ÜÄ\u001a±é½\u0018\u0013Ä~\u0017gVC\u0012\u0017¦ aªe¶\"ä=M»f\u0013\u0007O¿KÍ\u0003:\u001då1ÕU\u0004ºÜ\u0003ÛRâX¡:GGÁ\u0004òT_ ­¼RX*\u0007e.rÅØ\u0002î§RÅßg*Ô\b¥ÈSÈcÇ[²+ý<ªZEø£6ñÑóè ÙÐ\u0019Fé%^%&Öj\u0017¢|È\u0017vØYüÐ¦Í\u0017÷Àì\u0003\u001eÒ\u0006$»¡\"\u000f\u001eÎÓF$£úG)¶\u0001úw¾Z>\u0014ôÊ5,È)E©O\u0015©\u0018ECªoÀ­qpà\u001b\tO~nàÑ#'JÈêæ®äÐÜÌZÐ\f\u0015é¹\u0017B\u0017(\u0001hJ\u0003\u0014s³Í>5Zî ¶ÙÁÎ!Î8è¿ÓÙ\u000e»Ó\u001eúÎõ\u0014_xÇô!0r²ª\u000eee\u000b]vÀ«\u000eO¿E×)o\u000f¦\u0019F\b6ÏRJÈÞ\u0011oJÜ/å\f\u000e'Õ{T\u0003\b{_4\u0007óÐ³MûfZ\u000b{b×Bö\u0006Sÿo<=}%Ëï¨\u000bLãç3õ{y\tã\n\u000eå=}üA\u0001T\u0004k 6Ä¤ t?ØOùñà©\u0000âÞG¿\u0014P#ª\u001d= T5>ïe\u001d4Î-ê[\tLí\u001fjå\u0014Ððð\u0010Êºw\"v9XÂÝQ,\u001b¯A(\u0005\u0011ø\u0003:å¬«\u0017íäÅýn­Ã0\u001c+ºn@ùê\u0012A\u001a\u0005¯\u0010\u000fF>Aì\u0012L\u000eE³\u0010ú\u0003CÔsC<\u0005²/Ì\u001aÅÍ%vØ\u00130=MtaM\bïÒ­¡.w;\u0013ÿãI\u000fq\\\u0018]#ÿ0\u000bó|¿zT\núCf¥\f\u0001s\u0011§·]\u0014k\f]ó\u001bùAóéë_v\n= ³\u001bþpÜÝ1pRL¯\u0017U\u0017[\u001aB9è³¤a\u0012ða£ÛéÝlßßæåê w#ì\u0007ñÜ÷@d\bë\u00013÷ Æët\u001fÌ æ8Uwgé¸â&Ò= ®þáa¯= \u0002\u0002®7A£ñm«\nX\u0010v\u000b\u0017;ÀÔ~\u0001m±\u0007éÔÈJOiMl&f\u0018jfDâ¸\u0006×a4|6©&\u0015)ù\u001a=}¡\bÎTåflì{^.¸µòzÊÂuÜnû \u0000\u0019ÝÄV¹Úsã:ëe\fÕõëôuC¿rûnû\u001aæ:\b§\u0003ÕAjnýàý³ÌaÈ\u000b1x+; ·\u0011\u0013ðüëÃdùW®ÅÓâè¿2¥\u000e¤>ÔæèáÂÔV­ò\u0017¶ã:è*¼\u000f\tTk]\u001c\u000f\u0001!×u\u001aéZ¤ÑvUA@àg:V6Ã\u0006#\u001b2¥~B±= $Vykcj.öþ¼³Uo\u0012'tàuh@9\u0019ë\u001cT-bë÷,ú\u0000;T[Q\bó\u0011þ_\u0010\u0001à/÷\u0018÷8Öé|!Ï=M´n\\zlµé¦Ù<Ùý\u0017to ÿÓ°\u0017Ðî(M¿\u000f¶ð ¶¨Ð<öüíR»\u0010úï\u0006F-J°\u0013þtê± Ip÷¡·=}0«\u0007âæm¹þ­÷\b¼ØÏ\u0017q\u0013ÏSëg»\u0001ã5g½ìô2ý0¶\u000f¯\u0014¦_>±\u001c[]cz\u001b[ n\u001bÛ¤éÿ=Mw= ðe¤kq~©Ló\u00143:\u001e\u0002NÚíÐ.µºÕµ¹q(áíàzh ëèë\u0016h\f\u001fÞ-Ô*ßë\u0014ýç>Îb»¼\u0003®~R¡>\u0010ÄK\u0004,¦§Yñ4'AÙ\u0016¿\u0002\u0014*sx»aR!~ãlbÃÞ]= \u0011\\º¬Y7¯¢Nïm4\u0002¦ÍeÑeÉåj* ¡À\u0006&¼\u0015\u001d\u001e³oÕìÒÝ\u0010¦Îû= VdhÌG\"¹R\u0012\u0018,bäÄ\u001côZ Û´\u0019t¡6*/S)^\u0016roÍtË\fG\u001cÚØÚ-\u0015¹\u0016¿\u0015zÜ±C\u001d\u000bÌm2úz#\"ÑÂÙ}xýqÆ#¦NLËî^Þí\u001fQ\u000f= \u0006A¿J@h6jø.t=M^ãT\u0004§à5à%W\t?Äîð\fH7Ü\u0019G½¢W6fåú;Ý\u001aúsvÞp£^Ãï4§VÎ%k®JØÄ-\u001b±a\u0019r~Tm«P\u001bÁ96XV¢\nñ_+]I<àÜmiµ¤¨åå= !I¢+ÔLn\u0003g=}!}cÄÏ0¤½Eñ \u0013ä½Ô}&éû¸:°(¤mÜÜ©\b Ó#¶>]ÓÝ\\isÒ:Ê\u0011Ýìê\u000eÏ= 3\u0017QK\u001dí\u0011 \u001f- \u001crÏ\tý·óSà\n\\5ó>VÎK\u0019cGÖXæVÝ\u0007£v@\u000bâ\u001d¥þÖ\u000e\u0011ó\u0004T7\u001föE½\b­å³v½3bð\b´Ù¥½½´\u00054\u001d2Åõ\u0014©&~^*ÍbS¦6Êw40æÁß\u001dNosÄÐ7÷Ô\u0007øS3\u0011!µ\u00192f$3:HI>'Í§tÕX\u001b~÷}Ê·(\u0012~÷âÑÏ_<(­\u0017+= 7VLÁdh^ò\u0019r|Ô¥#xaÎ\u000fÒ\u0003|Ø¤v\u0002(ùlytVýS\u001bKÈf^_~2ÜñÀå«\u0017Ç\u0013n­îp²­\u000eULÇÕN{K*dPÇ\u001b¾«\u0013~ÝR&?¼màÙ¥yv\bÔ827ª0Ã\u0006 \u000bô\u001d3®rÜ\t@îÙ,R%ó/l³egÉ$_\u0012A\u001a¢Ë\u0004#¿¨«²ÿ\u001b÷+Gøí4ÜY= \u001fõ</\fÎ*¬¾ýù~ãö8ûÔ*øsðAÙÀ]0{ßémZ\u001eÕ*\u001bÕ@= wÅD<\u00188^\u0006Õ\u001bQ.\u0001\u001c<ýlpàR9Ë\u0000÷Þ)ËkÎ\u001aö1\u000e¤QÄ\u0010~\nK· ¢/ðúý|&\u0010õ«>\u001c\u0018\u0017\\o\u001b2\u00062¿fñ6ÿÃ&/\u001c\u0005ßW\u0013¥I\"òRDðÂEI1í¨ÿj¡lÝþ\u0004\u0014Óf.Ót¬Y\u0013\f*|&ß\u0017]ä¡\u001dÝ³ üelHå9>5òûÕÇ\u00006UÏøSPx0ªú>'0¾].\u0015oÏKs½b\u0012Q}¹\u001eée_)]nÀ.¤j\u0005\bN6ÈÉ¯gi\u0005HÌhÿ(\u000b\u001fªò¤âmM{¬Þs¯_}\bIÙ'\tXÔeÜ\u0006?PO\u0016\u001bA³èü\u00199Ö\u0012Éð\u0007îX!ì[tB\u0014¹\u0015qI$åÛÝ\u0002ÊC­t\u001e]äWã\u0017\u001aæ{Ù&\u0000µöàºû= \u000f\u001a6ñ)£BT\t0ÕÛ Å\\Arò±\n!y§¥ìáQ4ÿ­~+F\u0011¢\\jæÜ'ùH0ækÏSNfJ|]7\u0001é\u0017\u001d²È\u001f å_W\u0006x3= -5ô·´þA]\u0012Q\u0015:»t h=M^ý®\u0017û\u000eÍ\u000bp¬²\u0018¹¢²´\u0014¬óct '\u0001\u0010\u0000¦®¶7ÁYÙ\u0018¼\\os\u0016\\DÂé%ÛÓ ¼+ ×\u0003Ã×! jK\u00045}6\n\u0015\u0006!!x\u0006ñâ\u0017Üq³wö4\u0016æW<DNåð\brüè\u0011òmÖ\u0001WÊCëV4TV²^*\u00153ÿ ²^+ç·Æ&d¶\u001b|'!$\u001c9sª¹\u0004ã¿\u000eÜóBýÒ\u001b\u0012k\nÕýêp\u000fÞgeûOÑ\u0007,\u0012¯Ë:,¯câ|Oì\b+Ön\u0007VÇ\u0000Éå0TCk#(f\u001e<>:º#èÇ\u0013{ÏE\u0014,Z4}í¶¥º1\u001dYâ\f]·= ½·= }ÓãéMqò:\u0019~ä\u0010zQÖ!\"ù¦~\t¹Hû$ä-Z´ì¶%'Kí6Å\t¯P~Q'Ñ\u0017Z\u0014¨'\\k\tZÄädÒ¹~qj%cÅ,6ãÄm/tí$Yãeî\u0003SêW¬Á\u0018¨êô\bLW8ÕGô6t56\u0000£ôtÞpáaÔ°äã\nÈÚ%¼Ø­Ö\u001bÏ¤ôJ\">$\u0001\u0003\ftS*8W¢= æÃrÝ,\n=Mº¯BÿÿzmnÏ¿º¬,\t¸´íî\"ö¨C½Õ­6µ\u0013cCc3_V=}úvOrR¸\u001bôøî¢qøýu¸!Ñ\u0002ì§|ÂW_0xð%\u000b@õa\bQÅEÕ\u0001ñÎØ!Nè$!i5\u0012¾^Ü\u0001-ßß?V¬¬¬äOy3{,Þ©§,\\¬¬¬¬¬òðôEÚ|\u000eÒÏ3%;Ã\u0017BÜx|\u0016h£·¯\u0018ò\u001b;¶ £Å\u001ceZßÛ\tm-\u0018Ð:¿Ýó\u0010Ô\t]\u0001h\u0017×ÊTb(WA{¬\u0010\b\näïy\u000f\u001fØó¤®3ù²\u001f\u001ctú+|í¢\u0005\u0016\u001an \u0010Ëü\u001eÜÊ»®2Å»(t\fÜ\nxi¡*kæÝ\u000b\u000f«Ä_d$ï¹Ã¿²5.>]0ésC#ñåìë7IdÄêæ\u00057¼pfLq÷é+,Ù9\u0014,·4\u0011 ÈäV©Å¶ín\u0015°ª+\u000fÔú*\u000b³Ým$¼KÈc\u0014¸ÈÍû£Ï6w\bx'Ê[\b-NñÊuW\u001cN¥iòY\u0004\u001efÂÕö>W§e'­ÊCÊ¥WTVÄ~>Y'V'µÊ\tÊÅW ÿsú3bí\u001e¼)+\u000fõ*\u001d<ÅÄ¢ût[Q)8ÿ²\u0015\u001e~y\f¡Ï°\u001c±«?©Íµ\u001eøG½Í\u001c\u0019\tGÃW.çÆU:¦½UJ:_æAI@Z\u0016ÃGÃH.¬eI\u0000W\u0016ÆôM:gæ±GÃF.°5I\u0000X\u0016ÁÆtM:tæG\u0003I.¨uM£N.\u000bæ9Geº2¯ÀÛ8BüÄ|á©Ùa\n:TÍ\u0019WÜ¶x\b7XÔ®kúNMjb\u001eÚöÏöp§[§\bh\bâÊÊ÷Êwiç~ðÉÀBf_¤ðÓ²\u0015\u000bÂ£QíAòT\u0000\u0017\u0012©C'p1gý¼\u001d\u000e\fÄ\u0007¨éOxR\f+_¨Ö*¢×ç.Îq¿ôh\u0001pÉ»{W\u000e\u001b|\u001dÎ¼Äü©!:1\u000bò½î/«´·£p°Ó!ð®Û!p­Ë!ð«ß!pªÏ!ð¨×!p§Ç!ð¥ä ×\u0013\u0016\u0005jq dÚ.$v½\u0013ÖuåPH[î¡àú'j³§·\u0000¿!/\u0007\u001cøW{*îÁ0pM0Q\u0011$ë(Jü·ýÉê\u001aÌuûçëè\u0004¶³µ\u0014{Òé\t®Å\u000e¾Î}\u0010\u0017go\u00010\u0011ô°\u001fîirµ1\"éÙh°\u0004Îà\\Ç\u0012\t;ûo=}\bw1ÿ]lkÚÃO«sGkï´Ïmõ(\u0019ñ®À\u000eo»i²3¾Ó±;\u00102åÚçg¡\u001a­\u001fè©±ØÂ\bb¶\u0017¬C*Jp¿ÇpVÀQ±g:=Mãñ\u001b\u0006¶\u001b2\\ªXd\u001e\u0013Y.\u0006ô\"Û++\u000e.U\u0019'ô*÷ejø?Èúo®OV\f\u0005Ëjq\u0019é¨\u0019\u001aÚ0°:x¤õ èËª\u0003\u0017\u001bÑ²áØ²ÐpfruÂ\u0011ïGKºÍK\u000eæ¬Ùà\u0017-ðâ%Ä:qaµ\\±:¡Ì\u000f&ü\u0000ó7´\u0011¾ý«\u0002!x0üÒ\u0000sé´\u0011î!x0üÒ\u0000sé´\u0011î!x0üÒ\u0000sé´\u0011î!x0üÒ\u0000sé´\u0011î!0ÿ\t\u0013§íküÑ=Mà½è÷;»ö£ßZ!Ë±bü±Ä=}iÂ9äSþ\u0011.@R\u0019\tGÃW.çÆU:¦½UJ:_æAI@Z\u0016ÃGÃH.¬eI\u0000W\u0016ÆôM:gæ±GÃF.°5I\u0000X\u0016ÁÆtM:tæG\u0003I.¨uM£N.\u000bæ9Geú7ºql!ëå\u0013,\u0015®µäS¨@NÍ\u0019WÜ¶x\b7XÔ®kúNMjb\u001eÚöÏöp§[§\bh\bâÊÊ÷Êwiç~°J;>½'ëËÂ4àá¾m\f7·â7£\f= Þ\u000b\u0002ý\u0012ÜT\"bL),x\n´äê.,yZ#Ho=MsÚh#ho#s¬ö´Ï\u000e*ÜÐ¾´_5À\u0017T\u000ez\tMn\ntÛ»/N{\u0003&\u0011î\u0012tÛ½Oý!\u000b\"§]·¡£\u000e³ÛºGý\u0015?\"w-·¡Ûâ\u0011x$´-V\u0012lã 7_\báZÌ/´¿ð|V\u0002^}Ý¹cÖ²Ñ1Z\u0007Ó³XÿÛïçHáï°â1|\u000b\u001c× {üÇsø$\u0001\u0019à\u001f[§ë¡;$å UÐN\u001d(ì#©=M²\u000edá S\u0018Qø$Á°ìu\u001aÀ)2_6¹1l¹¶mlíag£0HCY¯óÚP²#LNÞp_T« ]¯&5\u0018 \u000f«X5\u001aÙÞ\u0002¸ØTë¿úÑ\u0017A¹¸q»= >êd\u0002$Ì\u001ax¶¾\\9ju\t{+²Ö¹\u0012ØÜ\u0013\u0003|ÉB\u001d¸@ö\\<ÂÿÇ+Q¬\u0011\u0000\u001fç-á\u0013¥\\;£Ë¸\taÁ\u00039*\u0010÷$7¬·=M¡ò­+¨W¡\u000f*\\þ\\ÏüÝç\bï¥ÝinÀ\u001e:Ü\u0016ü\u000bX<Ô¶|a·Ó[µ]ñ°Y±°U1¨Q>_§å \u0005ÄûÃI°=}LOõkbh\u0002Ô¶Þ6À¾Içi\u0002ß¶'#ÊYN5gâ¾e'j4å¶x=}~ËAmâ\u0010CY)DOí¹EÊyþÅ\bß\"Å½!\u0013È#Úaõ\u001c#´ì\u001fz~\u0016%\u001d!²\u001a±ñúê|±Eé dØ^FèvN\u001dªã«²!\u0004¡²=}Ó-õ03½ÉÄîDt¼\u0005e\u0005s=M\tÂáúH\u0002^¡«>¤Èµ*>¤Æ*¿>\u0006¸Tò\u0014ÈÛ\u000e_öXShí\u0006*~ÏbIq×é¦k¸JòTÉÛ\u000egöXNhM\u0006ªeÏ2Kq×¦køa\"òÉ¡Ð»¶÷Tto\u001c\u0007\u000b~ëM=MZ1&Ö«m\u001eíÌE÷ã¯ûD\u0017Aè2pürýçæëm\u0005´M\u0002^\f±ãy1¾,ª[¼Í\u0011Â\u0012\u0012:k'BÞ½'òùQ\tejðði!u\tÇ_¾»s0ß¡NO£JW\u000bí¶ý\u0003oÈL'´§d4LPï)·g\n\u0005´q\u0006Ì=  Óa¥m@mèQêu_êÚöHkÀ,ò·X¤¦²ð\u0010Ñè\u0017áÀúvæÆ5v¼»Y\u0003¡.åÖ áùØY\u001cÞà6âs\u0002upû0>Å\u0010\u0018\u000b\u0011ÖÃÍÄê&Z³ÛwØ(\u00117Ö\u001dÖénõÍ*;)IN\u001d®sêÑýÔX\u0003\u001d=MqðøX½ò)oö7nG¸\u001d®Ä®Üª9f>H\u0005ånbºl©fTy»_\u0017ÜÿR¤Wµlò¯5Ô[òkº}xr¿¸Üç_\u0001Q)å7äÎQ)'a\u000fÞ\u001fVÖÀNë¤K»sR·7V+\u0011¶%ø1=}\u0015þZ¨»\u0001 \u0013ôð;ôÂ%â)9«Íàò\u0016\n-lDEBzÎ= }=}¯6(s\fÓ;yÐÃózvO¨·òV_¸\u0000_ßª´ö8Hýí\u001fÑ°¸ö\u0000ch÷ç­ã?¡Ûtl\u001bÖý0´áÂ,L\u0012ÄÞßAÄÂÜ*Ø{×¬Ü,,L\bÔ\u001c\u0015_´=}ÙÏùs­Q\torò=MWT^,\b-tóà.\u000e MÊÓå7Íê´>­¢\u0015HÏQ!Ûühî®ÒXÅó\u001dPÂf6ý\u0014\"ü\u001eô4\u0017­QlçP¹wÇÓ\u000ee;v\u0015ªüRÃvè\u0000÷æUlÈMÓrö6®ú)Æ³kéó\u0010\u0015áûÝ\u001f.= ÙÉ§á¶lÖB*RÿõëlàGÚDfËþp>æ?®Øv¨ý+ä]'sÝ<\u0013)Ê¾¨\u0011\u0003\bÞ;µÒtø~³}= \u0014L#_¾a\u0003d-3§øÔÙØDØ8Õe|\u001bá\u0016Ü\u0010d§Ý^P_Øy@]§:Ì!m1U÷Ân\u001fN\u001cíòÂöór=M\u0012ì²=}¶Al3Ý¬BSª<ñõ½\u0000ôÛè\u001b\u0004.¯)T1ÁüÒD-P\u0001|üí4wÀ?\u0004¶\u0015Èj\u0010X#\néýù\u0010íVP(U¼Ãsy\u0005ì\fì1á1<û\u0010*aÛ³&ÄUØZÍUcÈSïÖh¦ðG$Ðï[n¼ßp(wâ±aÃ·÷ÁÃ\u0005ª³9H?8 :ÌCG÷\u0013=M¤1Õ#×å!Æ©õg!ÒJºB÷IÃ\tämvèý¶iï\tÊ\u000bÕÚÇ.µ^= x>Þ;óÁH¸w&CgezÄ¯XÝîÖØGÉGð\u0006¿2Ò¥ujï\u0016ßÚ= \u001e¥Ä5cØv5Òyõ9I$ôO<\"½!\u0013t.0Òô6ð­\u0001ßFÄå\u0016\u0002^Íf&¨(ØZ\u0011\u001fj\nÎÎEV(\u001c7ö¾F76Á4×,.xs)G\u0003(×Ô]8e\u0001!\u000ef#«øøð.÷ª«ãJöª¢2#\u000eJH©G\nc\"AÙ( û¶\u0000(Ý\u0017L ~vV ½\u000f7a*¡¸ï\u0011\u001dB?ÿD]ý\u000e·\u001føp¡,mÝªàÏï\u0013Ç9¥ÕpUjB Õ\u0011r\u001f\u0016¨@!¾ÊË©èþ(\u001cØsÈ*Rffºû¹)'Ø¼gâG|m¹õëg2Û\u001dÒôÚ³\u0010¬M*\u00198í\bc\u0000\"À= 4 ¥\u0005-£KçÀa(È3çJ°ÊLïcZîKEcÀÌ\\¥æ³M{}!\u0016A¼J£1B\u0019¢ÇÌßyÚâù#>¬M=}Äx\u000bP\n\u0011¥\"h\u0014üÖ\\\u0014ÿÖ\u001cýÈä\t®\\»¶\u000e2NÈ¦«­P£Îña)LGëVôÈ´~5ªI7Í Ãß)Wn´ö°\u0016]vjù¤\u001906Ï\u0000kxjÿ*Ï¦uÏó%íóR»\u0011Q[¤E.¢¹å\u0019ð8zÈÀ\u0006vy@øÚu8+*m¾õ=}¸Û±¼ÊíÁq+ð\u0016]}â1À\tË´Å#\u001fL'\tÂ8\nëÏUrÁ¬]Ü\u00183ÊVº^Ææ{\"XÐ½\u001d) k7¶s1õ«\u0003\u0016ø¬Mî\u0014Ë*ß@XýFÀwðÉØ¥+A\u0011\n¬Ûkùö3ÍKû\u0001¬E\u0004\u0000DÕ(|ðnÌßâ¡¬Æw:²\u0003åb~*æw®\u001fH\u001cæë¬J(FR6òÊ5A\u0014\u0010À\"\u001f¸¶û\u00007|%6hÛOg¥HØJ8/QÌFR\u0014zll¼òäfç\u001a)2a\u0017\u0004Ò²,fëE× l«vVjp:¥w~¯/çq\n^²«\b.f\f(Çkýh3-d7N(.)\u0007ºÃ)¼Ä\u0017ÿ£CEëD±C½@¥;\u00051%¤¸\u00141ý(Ãíg6ÄÛpá¹z²Nx?R\f%a8*kÓ°H<\t_â<9dÖôÿÑ\u001e\u001eÓ\u001c%'Â\u0005a3C¤EEMFYG2DlLFF¡LFûSQûh¬§FFFFFFFFMTObaX[~|wjips¶½Ä¿²±¨« £&-4/BA8;\u001e%\u001c\u0017\n\t\u0010\u0013ÖÝäßÒÑÈËîõìçúù\u0000\u0003=M\u0006\u000f\u0014!\"\u001b\u0018E>7<)*30ýöÿ\u0004ñòëèÕÎÇÌÙÚãàmfot{xe^W\\IJSP¤µ®§¬¹ºÃÀÏÔÍÆÛØáâ÷ü\u0005þóðéê?D=}6+(12\u0007\f\u0015\u000e# \u0019\u001a¯´­¦»¸ÁÂ¥_d]VKHQRglunyz¢¡¼·¾Å°³ª©v}hkrqLGNU= cZYôïæíøû\u0002\u0001Ü×ÞåÐÓÊÉ$\u001f\u0016\u001d\b\u000b\u0012\u0011,'.R\u0018ÉèQRFö(§ü³!ü³!ü\u0012ü³á½ü³!ü·8S¿9C\u001d=MUFEOI·kGÉ\u000eØ¸\u000esïf\u0003êÚj\u0016 ®s\u0003æ\u0005:ÚtOðïI«ëHJS+ÆbÌÙ¶ô\bsÿh-'sÂØ8c¤\u000e±¾N=}ªdrÜûøH¼\u000e´\u001eJ1«èÇv£Ì\u0007®_pLô¶ZT\u001d¯~¡í0J¢Íá»ÕÌ&£ÉÑ¶\u0004$\u000b@å)UCÓe7ã¤\u0016\u0011¾Yõ/ëº\\\b( \u0011¦£³Æ\u001böø¼\u001bd\u001eUÁ±q²õsûOl\u001bZÞT±t\u0012õ{Q\b.à)¦ÓÆEfpAÅbÔÁrÔ5wP­(2¤\u00169¶ \u0015\u0006\u000f~÷}(,$\u0017!¶¥e\u0006#þù;= ¢Õ±Áot5k\u0003N5+Ä\fÕ9S\u0005\u0013]?âÅ6\u0015BÙ\u0005?Ä+Bu:k\u0002ÐÝA|$+¡ÃIÕ)\u000f\u001d­6e\tÉ£®öÓûWz\u0019,\u0016j= µa³Q3ê3üÒ!¡U2w\u0003ê­<ÛÄ\u001f]Á­/Ø#÷1º\b\u0019 ­óJÛé\u0018Ñ0¡ñãî\u0001Sú\u001a\u001cy°²Ïnÿ«úzÚ\u001dP|\u0010²sL\u000bé\u001e\\Ð\b!EJ\u0006¾ZÊ'¯VJ&O\u0002TÈFbHï¾SuÈjÂ]ÈFBbÀ7µDNF\u0004\u0012}çTeËfF5-VJ&x¶Ûa¶{NH¶U4M%ÿ[JGþO\u0012)ZâT¶tNH¶\\ÔJFDVbðGFFC<½í_xgJfÊÖVNOgJfjyNÊVXHggÊNÊVXHgg2\u0003%¥E\u0004ÅÃEB@\tdÎfAÎ¶\bW·\u000bSxâiÏ~íî7\fM= ÂéÑ|åèÒp\u0015n6\u0006c¸\u001ex\u0015h<ò&ÈY²'ËUþù\u000fôÒ§ÌKYy\u0011zÜ^x\u0012n\fR¦Æ\u0005Bçä/æ@Ô®è×¯ëÓyà/þìô/ìÍaÀ\u00011üä\u00002ð\u0014t.æã¹$põè=}ð>(Ù°?+Õ\u0004ñï\u0000õÐ¿,ËX¤qñúÝdpòî=MP¾&EJ\u0007IFæNVF\u0006\u0012óÃ!|\u0014ü³!üßÓù³!ü³!ü{©ÏZX&ÊXR\tµ6i^F9vQ,È[>a\u0012Ç>Iâ\tl\u001eP´¦}¾IÕöIÜÉi¶P±\u0006|rÉË¦I*\tsþQ&wîIÛ6F$Ét\u0016Q¥y\u0002ÉÝæGÔÉ¥&uâG\u001f¶StÈR6dT\u00076KÀæHÉLÂðCï+hp°ËÎ´¡³èüÎ6Î÷ (ð¼!Z\u001aq×\u0013\u000e\u0004@Ájõ-\u001aEh\u0015×;ã@o¸çÏbì\u0000¯Rèì±ÓÃ\u001a)ë·Ñ@Ô\u0010°\u000e\féWÓp±òéÕà}\u0013:\u0019èÝ\u0017¹\u0013Ì¬m\u0000^£\u001dBÕD\u001bB\u0018Jàü¨Å©9 +\u001eè¼\u0001[Ô£°Í<n<çÃÏ\f4û9wóÜu,Ñ§øwE ]ó\u0012|,ò{Õß°Óúh)Í\u0000y#B½YEÒ\u00051D.¬(KD¡ýc%\u001aó/Ü(}Íþ±\"¡íe-qã¢ôñ\u0018ï\u000b«ºÄ()\u0016çÉÕê%ê\u0002ï®\u0016y®kÓÙÜL§vÀ^¢ØÔÁÉÂ¸\u001bö«\u001eDvª*²8\u0005'\u000b6×\u0002a\u0014ÙíÌi\t\u001cÊç$µÛ¶\u0016!jY4ÀÀßJ>\u001c±mz;°ÀëÊÓDg7à>\u001c5m\u0000DÅÜ20Ý:±Ï_Cå\n\u0015:OBzCy\u0013Ë[\u0019\u001eS!ìY\u0019.'\u001e:d¤ì\u0001ö¦³ì<$?j­8ÝÀÃà2ïQÙ0v{\u0012¾Öxa5ü\fu)¡\u0010½\u001cÔ\u0005\fÓÚ°\u001f¾cbÓ´õ¦¦ª\u0007xÞa{ÒwîaCM\u0005¥F5°úUÆêXLT&\tøPû=Mno\u001aäèÌÏ\u0018£úoðéc3í\u001eAoúå¨Ao~ðí\u0017ìîÔ\f£~4èÓ)t Z\u001b\u0017D$ý&3D\u0005ýOE+jQg$KVGf\u0003fÇFWFr'¾|O\"PÙÊüXÜW´\bç»Ê=M½§fd\u0010i\u0012´Ïè_\u0015Wÿ\u0002X[Î¤*ssÐjRÔ4jxØ6w¢ÎæÚVLX\tWËÊãMÊùð¶bX\u0015Î-=MãÑÝ=M£ÏQ\nuÒ=M(\u0018(\u000e7A(&>\u0014¾½\"Üãäï§Ã§kray×/§[øª\u0012MrÎ\u000bz÷èîFóâ¬çÐ¯t0VðÔ<ÈLaïL r\u001báµ\u000b^óRµ\u0012pL= YXi¨\u001aww5¨âÒïw~É=M¦\f²\u000f\nRw-âä¹kmf¤n\f¸\u0018¸\u000e(Ãöþ2\u0014_ß¯\u0015= åë\u000fBØ\u000fr\u000fú«k¬¿xQy«Uxçòðr¬ÚVÆ\u0010gÑRÿÊÊ.KJPaËLn.É¬'óº±Ì}ÃLàdØt\u0010î\u0011ë\u0005½¬=My¾_\u0012:sbÆ£\u0014ü¶\n²]­N=MÄ\u0007LÓbIÜ)©\u0015¬qý¾ØÊ\u001cJuµH\u0010Q'ÏX0X\u0002½­\bdä\u0006¦8üjiÒjÄ8ÿj¿8Û*\u0018\bjrsßâúu_0¸mÕ*!K)K= D]GË¥\býOXKdÄg¥l¾\u0006ÍJHYå\u001eEqW¨FÐ\nÿ·×É~êWÀv¾·Q·\\\u0018µNºÇ\u0001´Ë÷\u001ca\u001dÁ\tjg\u001fk\u001cX­Î¿ãdp ôÑ<µ$4/ü½aÃáìá02\\'\\Z½ñøññ±3ÊB\u001fæ{Ö\u000f0Ó\u0012¶zB?/¬jd¿¹y\\·ÅÙ¨YÈº]5Ñ%Â\u0006\u0019Á5@µÁ\"\u001fC\bCø~4«òqü¼e\u001899´3´¸ûÏ\u000fß\u0015\u0018è¤¾õáÁv\u001cC\u0003Ð\u0003Â\\£0u{YËÆ\u0010²zÎ|èRêwü^sºC\u0014Uþ*R±Ý·Ý}\u0018ÁÍ»Íù\u0001ÿ\"\u0013ÖyJ+ê¹÷\u0002?â­\u0016$9:9à<âù]Ë]«\"Q\u0010\u0007ô\u0007û]Ö2\u0015­û­\u000f\u001f0y\u0012rz1?_ïj\b}³,C\u0019Ð\u0019Bþ\u00180ý= ÊcSì0ÈLM´Éf®JTìïµïýê.aI¯¶ ªépã»\b¾\bát_ÞÃ\u0010À\u0010\u0016Â\u0018ãg\u0015VâJ~qqCÛLÍ\u001f\në¶]Þc[||\ndGÈö\\\u0012H0UK@\u0006ÃhUï¾òp©ÛÝm/áÃ\u001eÀ\u001e\u001f\u001dÂ\nãfVbgc\u001bk?Ø|e;j4óé\u001d¯X3\u000f­ÕOÕ\u000fØÿ=MÛI¢I°ÕiC\u001d®±\u000eC\u001bûGp¾¤qó\\;\tA#ò\f>=}sPQå>UÖ¦\u0006V,O«X\f{'ØNa§\u0019~ÿè?zÊðir×O}ì^P\t¾Zw·ÜrTÒ½Y¬s²Êéiøl¸¯(X\u0002$HâuLÙ\"lsÊÕFJQS/äRl§Ùk\u000fúW¼âÊy«Ô\u0012eÐR\u0017S7Sk-ð8¿Ú¢5®An\u0017nÂúLÔ¶ÕÖ\u0011rYÆÏÇÏ6JÉ\bi­\u0010Ë¬ðªÌ³Lz\u001b_áêâ*à\u0012åQ\u0012O\u0012Ç-= d{ÓðzjQ³Qçk\u0014¿\u001eÂ+Â\u001dÄgøý\u0012t+á8oK$\u001b<{è{>°\u001f-\u001c\u000f |iLã\u0007ýß\u0002û\u0013úÓø\u001b¡²uX['\u000bøX¶ÉÁÉ\u0002\nøa\u001eY\u001eI5|b:2©4U°Ï\u0017¬Ê-²Í¸Í±m\u0005LîT\t{Ì\u0015·,·ú©Ü¦|RxU§ÍÛÍ£Í>|*ò4ò\u0015\u0004æµÿ&óý}Î= 6À\u001foö\u0017#n«ÿK\"T\"Ìµ_´¾ôyõé}zk\u001d²\u001dæñM¬ £TDi*ç4ç5W\u001fó\u0000µ\u0000·Á5\u001e¡ó>cY\u001e2´Ü}¤hõºõÂu\u000f\u0015¤ÙÝ8\"!¯ÅhÀÈ½\u0010 \u0007|½á\u0002#8c>X>HÅ}Â:Â¨Ä°$!$eâ\u0012õ:\u0001Â\nDí]·ÑgØúb ûa:LzbÑö´üû²3\u001e,ÑlÛnf£l/ôn5ÈÁfÓl9¤\u0002Ý©\u0005q\u001c\u0019!ÅÆ'Èæö\u0018·£K=}@a±\u0013\\\u0002å)Þ±Æm\u0017ÅZV\u0018aþ;VjkmTÃ CzQ\u0011ú 2s]\u0014A\nêqÚe\u0006eË\u0005jÐ0\u0011öZ_¯B\u0013B\f'ºS9R=}%Jl\u0016¡ÿ½æÏ\u0018lÿ¢ë\u0016|1eè÷_\u001c<s4ÔA\u0004\u000f\u0006¢@Y´mz tñ |CqºOü\u0016@\u0018\u0005+¿Í\u001d}Õ:U+]¶ï6ãñ¾ñÄI\t\u000e )}9ÂÛ)ù±Ë­ÿh|ÈáÊ×ØsÐô0´6¼JwLßÉ·\u0003i\nû\u0014ù$%K\u001e­¸\u0016d¯âÂå0æ|¤\u0012®ë\u001f½úv¨ÂÇ= \u0000Æ\u0011Íðë\u000f8)ð³ØäÉàw\u0012\u0010üe´.&?T×øo­\u0006\u0019×*è¨öÀVÂT÷= \u0013o~4^./'I´\u0017·ýëx?»\u001bS3NCV:p¼\u0013\u001a´µ\u000f3\u000e9\u0019nU\u0006=M\b/Ø\u0001PëÀPÂU?\t~$BYDí©ò\u0011+¯7Õisì\u0002L¥N]äo\\î{6*µ)\u0015,\u001f>¥ÔôTÕ=MY>¥\t£SÃ×ôÚÅÃ\u001a0:\u0011\u0016U\u001eÁ±ç#%\u0016×59G^kPÒÆÞØ¾ÉgjI[©~%ä2(¿~\u0004Î= ãÍs\u0007!\u00008\u0011ÂYFK«X~I= k_g\u0015SËµi\u001dM¼[\u0005©µ¸#=}:ÃMB&Á.ÏêD¢;XôG0nÍR°Öz\u0010uî²6dªe\u0000Y7¨ÁÏ±á=M&!¡ú\u0005º¯\u0003D\u0018\u0000ì3³a%\u001aLcëd§ê¹Ò\u0003~9ºDýæF;sA£\u0010%ÿä÷\u0015¬\u0004\u000eE\u0003\u000eÀÿ(CåÝ¢=} d\u0002_ezÔðª_ßÂòª,Õ?ùÑ¬Û°p\\\u001dõ\u0000úèO´A+\u0017\u0006\u0018[\u001f;CtS®0\u0019\fÃYZ\u001aË Ûcß\u0018yý=}\u001e4y/?Ã\u0000w=Mâ¯[~ØÎc\f<Ùç:®´þÖkÓ\nîï ÏjÃx½ð¶úì\u000eU\u0017\u0014\u001bñÒ9\u0013Qó±b¨I\\@\u0005Ö\u0017Ã\"U\b¯\u0001\bñÄë\u0003ë\u0005§úáõ¡c\u0013e?½1U= ½ÞÓ\u001ch=MLH\u001a¬Å{/~CV\u001dròÝäâå\u001b ÈÕ\u0017ð~Ûï¾$\u000f·-¬ãov[enqõr±tõµ$\u0018\u0004/3µ\u000b}\u0011tD 6=M+Ü,\u00013Õ%ÄSDÁ\t?m;õ\u0002Ô·­\u0003t>ÿ¾¬\u001fÈ\u0010S±uuµ\u001cüuÃA6 Z\u0014ú\u001aw¿\t\f­CVbb1\fgí<\u0010Ñc\u001d©\\ëfû~ó²¶ëîçE+\n,\u00043&!7ÜÆÑ¬t¤T\u0014¡RusJ­sã½Ç\\fÄ%8Æµ%Åj\u0004ÌaúÒO\nFÿ\u0004G×'îfN>=}ub\u000esÇhÉÇ¢YZQAE\tZè\u001a·ÏNÖÁKÐR?BÆ¢\u0010ÅLrm°ªfýtkø¡~wJ= XD}r\u0017qN\u000e³ÏRC=}nW\niÉS\u0012ÅG`});\n\nvar HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64, wasmMemory;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n HEAP8 = new Int8Array(b);\n HEAP16 = new Int16Array(b);\n HEAPU8 = new Uint8Array(b);\n HEAPU16 = new Uint16Array(b);\n HEAP32 = new Int32Array(b);\n HEAPU32 = new Uint32Array(b);\n HEAPF32 = new Float32Array(b);\n HEAPF64 = new Float64Array(b);\n}\n\nvar _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\nvar abortOnCannotGrowMemory = requestedSize => {\n abort(\"OOM\");\n};\n\nvar _emscripten_resize_heap = requestedSize => {\n var oldSize = HEAPU8.length;\n requestedSize >>>= 0;\n abortOnCannotGrowMemory(requestedSize);\n};\n\nvar UTF8Decoder = new TextDecoder(\"utf8\");\n\n/**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */ var UTF8ToString = (ptr, maxBytesToRead) => {\n if (!ptr) return \"\";\n var maxPtr = ptr + maxBytesToRead;\n for (var end = ptr; !(end >= maxPtr) && HEAPU8[end]; ) ++end;\n return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n};\n\nvar SYSCALLS = {\n varargs: undefined,\n get() {\n  var ret = HEAP32[((+SYSCALLS.varargs) >> 2)];\n  SYSCALLS.varargs += 4;\n  return ret;\n },\n getp() {\n  return SYSCALLS.get();\n },\n getStr(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nvar _fd_close = fd => 52;\n\nvar _fd_read = (fd, iov, iovcnt, pnum) => 52;\n\nvar convertI32PairToI53Checked = (lo, hi) => ((hi + 2097152) >>> 0 < 4194305 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n var offset = convertI32PairToI53Checked(offset_low, offset_high);\n return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\n/**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */ var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n return UTF8Decoder.decode(heapOrArray.buffer ? heapOrArray.subarray(idx, endPtr) : new Uint8Array(heapOrArray.slice(idx, endPtr)));\n};\n\nvar printChar = (stream, curr) => {\n var buffer = printCharBuffers[stream];\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n};\n\nvar _fd_write = (fd, iov, iovcnt, pnum) => {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[((iov) >> 2)];\n  var len = HEAPU32[(((iov) + (4)) >> 2)];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAPU32[((pnum) >> 2)] = num;\n return 0;\n};\n\nvar wasmImports = {\n /** @export */ a: _emscripten_memcpy_js,\n /** @export */ e: _emscripten_resize_heap,\n /** @export */ d: _fd_close,\n /** @export */ b: _fd_read,\n /** @export */ f: _fd_seek,\n /** @export */ c: _fd_write\n};\n\nfunction initRuntime(wasmExports) {\n wasmExports[\"h\"]();\n}\n\nvar imports = {\n \"a\": wasmImports\n};\n\nvar _free, _malloc, _create_decoder, _destroy_decoder, _decode_frame;\n\n\nthis.setModule = (data) => {\n  WASMAudioDecoderCommon.setModule(EmscriptenWASM, data);\n};\n\nthis.getModule = () =>\n  WASMAudioDecoderCommon.getModule(EmscriptenWASM);\n\nthis.instantiate = () => {\n  this.getModule().then((wasm) => WebAssembly.instantiate(wasm, imports)).then((instance) => {\n    const wasmExports = instance.exports;\n _free = wasmExports[\"i\"];\n _malloc = wasmExports[\"j\"];\n _create_decoder = wasmExports[\"k\"];\n _destroy_decoder = wasmExports[\"l\"];\n _decode_frame = wasmExports[\"m\"];\n wasmMemory = wasmExports[\"g\"];\n updateMemoryViews();\n initRuntime(wasmExports);\n ready();\n});\n\nthis.ready = new Promise(resolve => {\n ready = resolve;\n}).then(() => {\n this.HEAP = wasmMemory.buffer;\n this.malloc = _malloc;\n this.free = _free;\n this.create_decoder = _create_decoder;\n this.destroy_decoder = _destroy_decoder;\n this.decode_frame = _decode_frame;\n});\nreturn this;\n}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/flac/src/EmscriptenWasm.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/flac/src/FLACDecoder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/flac/src/FLACDecoder.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decoder: function() { return /* binding */ Decoder; },\n/* harmony export */   \"default\": function() { return /* binding */ FLACDecoder; },\n/* harmony export */   setDecoderClass: function() { return /* binding */ setDecoderClass; }\n/* harmony export */ });\n/* harmony import */ var _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wasm-audio-decoders/common */ \"./node_modules/@wasm-audio-decoders/common/index.js\");\n/* harmony import */ var codec_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! codec-parser */ \"./node_modules/codec-parser/index.js\");\n/* harmony import */ var _EmscriptenWasm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EmscriptenWasm.js */ \"./node_modules/@wasm-audio-decoders/flac/src/EmscriptenWasm.js\");\n\n\n\n\n\nfunction Decoder() {\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () => {\n    return new this._WASMAudioDecoderCommon()\n      .instantiate(this._EmscriptenWASM, this._module)\n      .then((common) => {\n        this._common = common;\n\n        this._inputBytes = 0;\n        this._outputSamples = 0;\n        this._frameNumber = 0;\n\n        this._channels = this._common.allocateTypedArray(1, Uint32Array);\n        this._sampleRate = this._common.allocateTypedArray(1, Uint32Array);\n        this._bitsPerSample = this._common.allocateTypedArray(1, Uint32Array);\n        this._samplesDecoded = this._common.allocateTypedArray(1, Uint32Array);\n        this._outputBufferPtr = this._common.allocateTypedArray(1, Uint32Array);\n        this._outputBufferLen = this._common.allocateTypedArray(1, Uint32Array);\n\n        this._errorStringPtr = this._common.allocateTypedArray(1, Uint32Array);\n        this._stateStringPtr = this._common.allocateTypedArray(1, Uint32Array);\n\n        this._decoder = this._common.wasm.create_decoder(\n          this._channels.ptr,\n          this._sampleRate.ptr,\n          this._bitsPerSample.ptr,\n          this._samplesDecoded.ptr,\n          this._outputBufferPtr.ptr,\n          this._outputBufferLen.ptr,\n          this._errorStringPtr.ptr,\n          this._stateStringPtr.ptr,\n        );\n      });\n  };\n\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready,\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n\n  this.free = () => {\n    this._common.wasm.destroy_decoder(this._decoder);\n\n    this._common.free();\n  };\n\n  this._decode = (data) => {\n    if (!(data instanceof Uint8Array))\n      throw Error(\n        \"Data to decode must be Uint8Array. Instead got \" + typeof data,\n      );\n\n    const input = this._common.allocateTypedArray(\n      data.length,\n      Uint8Array,\n      false,\n    );\n    input.buf.set(data);\n\n    this._common.wasm.decode_frame(this._decoder, input.ptr, input.len);\n\n    let errorMessage = [],\n      error;\n    if (this._errorStringPtr.buf[0])\n      errorMessage.push(\n        \"Error: \" + this._common.codeToString(this._errorStringPtr.buf[0]),\n      );\n\n    if (this._stateStringPtr.buf[0])\n      errorMessage.push(\n        \"State: \" + this._common.codeToString(this._stateStringPtr.buf[0]),\n      );\n\n    if (errorMessage.length) {\n      error = errorMessage.join(\"; \");\n      console.error(\n        \"@wasm-audio-decoders/flac: \\n\\t\" + errorMessage.join(\"\\n\\t\"),\n      );\n    }\n\n    const output = new Float32Array(\n      this._common.wasm.HEAP,\n      this._outputBufferPtr.buf[0],\n      this._outputBufferLen.buf[0],\n    );\n\n    const decoded = {\n      error: error,\n      outputBuffer: this._common.getOutputChannels(\n        output,\n        this._channels.buf[0],\n        this._samplesDecoded.buf[0],\n      ),\n      samplesDecoded: this._samplesDecoded.buf[0],\n    };\n\n    this._common.wasm.free(this._outputBufferPtr.buf[0]);\n    this._outputBufferLen.buf[0] = 0;\n    this._samplesDecoded.buf[0] = 0;\n\n    return decoded;\n  };\n\n  this.decodeFrames = (frames) => {\n    let outputBuffers = [],\n      errors = [],\n      outputSamples = 0;\n\n    for (let i = 0; i < frames.length; i++) {\n      let offset = 0;\n      const data = frames[i];\n\n      while (offset < data.length) {\n        const chunk = data.subarray(offset, offset + this._MAX_INPUT_SIZE);\n        offset += chunk.length;\n\n        const decoded = this._decode(chunk);\n\n        outputBuffers.push(decoded.outputBuffer);\n        outputSamples += decoded.samplesDecoded;\n\n        if (decoded.error)\n          this._common.addError(\n            errors,\n            decoded.error,\n            data.length,\n            this._frameNumber,\n            this._inputBytes,\n            this._outputSamples,\n          );\n\n        this._inputBytes += data.length;\n        this._outputSamples += decoded.samplesDecoded;\n      }\n\n      this._frameNumber++;\n    }\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      errors,\n      outputBuffers,\n      this._channels.buf[0],\n      outputSamples,\n      this._sampleRate.buf[0],\n      this._bitsPerSample.buf[0],\n    );\n  };\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = Decoder.isWebWorker;\n  this._WASMAudioDecoderCommon =\n    Decoder.WASMAudioDecoderCommon || _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.WASMAudioDecoderCommon;\n  this._EmscriptenWASM = Decoder.EmscriptenWASM || _EmscriptenWasm_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n  this._module = Decoder.module;\n\n  this._MAX_INPUT_SIZE = 65535 * 8;\n\n  this._ready = this._init();\n\n  return this;\n}\n\nconst setDecoderClass = Symbol();\n\nconst determineDecodeMethod = Symbol();\nconst decodeFlac = Symbol();\nconst decodeOggFlac = Symbol();\nconst placeholderDecodeMethod = Symbol();\nconst decodeMethod = Symbol();\nconst init = Symbol();\n\nclass FLACDecoder {\n  constructor() {\n    this._onCodec = (codec) => {\n      if (codec !== \"flac\")\n        throw new Error(\n          \"@wasm-audio-decoders/flac does not support this codec \" + codec,\n        );\n    };\n\n    // instantiate to create static properties\n    new _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.WASMAudioDecoderCommon();\n\n    this[init]();\n    this[setDecoderClass](Decoder);\n  }\n\n  [init]() {\n    this[decodeMethod] = placeholderDecodeMethod;\n    this._codecParser = null;\n    this._beginningSampleOffset = undefined;\n  }\n\n  [determineDecodeMethod](data) {\n    if (!this._codecParser && data.length >= 4) {\n      let codec = \"audio/\";\n\n      if (\n        data[0] !== 0x4f || // O\n        data[1] !== 0x67 || // g\n        data[2] !== 0x67 || // g\n        data[3] !== 0x53 //    S\n      ) {\n        codec += \"flac\";\n        this[decodeMethod] = decodeFlac;\n      } else {\n        codec += \"ogg\";\n        this[decodeMethod] = decodeOggFlac;\n      }\n\n      this._codecParser = new codec_parser__WEBPACK_IMPORTED_MODULE_2__[\"default\"](codec, {\n        onCodec: this._onCodec,\n        enableFrameCRC32: false,\n      });\n    }\n  }\n\n  [setDecoderClass](decoderClass) {\n    if (this._decoder) {\n      const oldDecoder = this._decoder;\n      oldDecoder.ready.then(() => oldDecoder.free());\n    }\n\n    this._decoder = new decoderClass();\n    this._ready = this._decoder.ready;\n  }\n\n  [decodeFlac](flacFrames) {\n    return this._decoder.decodeFrames(flacFrames.map((f) => f[codec_parser__WEBPACK_IMPORTED_MODULE_2__.data] || f));\n  }\n\n  [decodeOggFlac](oggPages) {\n    const frames = oggPages\n      .map((page) => page[codec_parser__WEBPACK_IMPORTED_MODULE_2__.codecFrames].map((f) => f[codec_parser__WEBPACK_IMPORTED_MODULE_2__.data]))\n      .flat();\n\n    const decoded = this._decoder.decodeFrames(frames);\n\n    const oggPage = oggPages[oggPages.length - 1];\n    if (oggPages.length && Number(oggPage[codec_parser__WEBPACK_IMPORTED_MODULE_2__.absoluteGranulePosition]) > -1) {\n      if (this._beginningSampleOffset === undefined) {\n        this._beginningSampleOffset =\n          oggPage[codec_parser__WEBPACK_IMPORTED_MODULE_2__.absoluteGranulePosition] - BigInt(oggPage[codec_parser__WEBPACK_IMPORTED_MODULE_2__.samples]);\n      }\n\n      if (oggPage[codec_parser__WEBPACK_IMPORTED_MODULE_2__.isLastPage]) {\n        // trim any extra samples that are decoded beyond the absoluteGranulePosition, relative to where we started in the stream\n        const samplesToTrim =\n          decoded.samplesDecoded - Number(oggPage[codec_parser__WEBPACK_IMPORTED_MODULE_2__.absoluteGranulePosition]);\n\n        if (samplesToTrim > 0) {\n          for (let i = 0; i < decoded.channelData.length; i++)\n            decoded.channelData[i] = decoded.channelData[i].subarray(\n              0,\n              decoded.samplesDecoded - samplesToTrim,\n            );\n\n          decoded.samplesDecoded -= samplesToTrim;\n        }\n      }\n    }\n\n    return decoded;\n  }\n\n  [placeholderDecodeMethod]() {\n    return _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.WASMAudioDecoderCommon.getDecodedAudio([], [], 0, 0, 0);\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  async reset() {\n    this[init]();\n    return this._decoder.reset();\n  }\n\n  free() {\n    this._decoder.free();\n  }\n\n  async decode(flacData) {\n    if (this[decodeMethod] === placeholderDecodeMethod)\n      this[determineDecodeMethod](flacData);\n\n    return this[this[decodeMethod]]([\n      ...this._codecParser.parseChunk(flacData),\n    ]);\n  }\n\n  async flush() {\n    const decoded = this[this[decodeMethod]]([...this._codecParser.flush()]);\n\n    await this.reset();\n    return decoded;\n  }\n\n  async decodeFile(flacData) {\n    this[determineDecodeMethod](flacData);\n\n    const decoded = this[this[decodeMethod]]([\n      ...this._codecParser.parseAll(flacData),\n    ]);\n\n    await this.reset();\n    return decoded;\n  }\n\n  async decodeFrames(flacFrames) {\n    return this[decodeFlac](flacFrames);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/flac/src/FLACDecoder.js\n"));

/***/ }),

/***/ "./node_modules/@wasm-audio-decoders/flac/src/FLACDecoderWebWorker.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@wasm-audio-decoders/flac/src/FLACDecoderWebWorker.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FLACDecoderWebWorker; }\n/* harmony export */ });\n/* harmony import */ var _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wasm-audio-decoders/common */ \"./node_modules/@wasm-audio-decoders/common/index.js\");\n/* harmony import */ var _EmscriptenWasm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EmscriptenWasm.js */ \"./node_modules/@wasm-audio-decoders/flac/src/EmscriptenWasm.js\");\n/* harmony import */ var _FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FLACDecoder.js */ \"./node_modules/@wasm-audio-decoders/flac/src/FLACDecoder.js\");\n\n\n\n\nclass DecoderWorker extends _wasm_audio_decoders_common__WEBPACK_IMPORTED_MODULE_0__.WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, \"flac-decoder\", _FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__.Decoder, _EmscriptenWasm_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  }\n\n  async decodeFrames(frames) {\n    return this.postToDecoder(\"decodeFrames\", frames);\n  }\n}\n\nclass FLACDecoderWebWorker extends _FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor() {\n    super();\n\n    super[_FLACDecoder_js__WEBPACK_IMPORTED_MODULE_1__.setDecoderClass](DecoderWorker);\n  }\n\n  async free() {\n    super.free();\n  }\n\n  terminate() {\n    this._decoder.terminate();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdhc20tYXVkaW8tZGVjb2RlcnMvZmxhYy9zcmMvRkxBQ0RlY29kZXJXZWJXb3JrZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRTtBQUNwQjtBQUN3Qjs7QUFFekUsNEJBQTRCLCtFQUFzQjtBQUNsRDtBQUNBLG1DQUFtQyxvREFBTyxFQUFFLDBEQUFjO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVlLG1DQUFtQyx1REFBVztBQUM3RDtBQUNBOztBQUVBLFVBQVUsNERBQWU7QUFDekI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ad2FzbS1hdWRpby1kZWNvZGVycy9mbGFjL3NyYy9GTEFDRGVjb2RlcldlYldvcmtlci5qcz9hMGYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdBU01BdWRpb0RlY29kZXJXb3JrZXIgfSBmcm9tIFwiQHdhc20tYXVkaW8tZGVjb2RlcnMvY29tbW9uXCI7XG5pbXBvcnQgRW1zY3JpcHRlbldBU00gZnJvbSBcIi4vRW1zY3JpcHRlbldhc20uanNcIjtcbmltcG9ydCBGTEFDRGVjb2RlciwgeyBEZWNvZGVyLCBzZXREZWNvZGVyQ2xhc3MgfSBmcm9tIFwiLi9GTEFDRGVjb2Rlci5qc1wiO1xuXG5jbGFzcyBEZWNvZGVyV29ya2VyIGV4dGVuZHMgV0FTTUF1ZGlvRGVjb2RlcldvcmtlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBzdXBlcihvcHRpb25zLCBcImZsYWMtZGVjb2RlclwiLCBEZWNvZGVyLCBFbXNjcmlwdGVuV0FTTSk7XG4gIH1cblxuICBhc3luYyBkZWNvZGVGcmFtZXMoZnJhbWVzKSB7XG4gICAgcmV0dXJuIHRoaXMucG9zdFRvRGVjb2RlcihcImRlY29kZUZyYW1lc1wiLCBmcmFtZXMpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZMQUNEZWNvZGVyV2ViV29ya2VyIGV4dGVuZHMgRkxBQ0RlY29kZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgc3VwZXJbc2V0RGVjb2RlckNsYXNzXShEZWNvZGVyV29ya2VyKTtcbiAgfVxuXG4gIGFzeW5jIGZyZWUoKSB7XG4gICAgc3VwZXIuZnJlZSgpO1xuICB9XG5cbiAgdGVybWluYXRlKCkge1xuICAgIHRoaXMuX2RlY29kZXIudGVybWluYXRlKCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@wasm-audio-decoders/flac/src/FLACDecoderWebWorker.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/index.js":
/*!********************************************!*\
  !*** ./node_modules/codec-parser/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   absoluteGranulePosition: function() { return /* binding */ absoluteGranulePosition; },\n/* harmony export */   bandwidth: function() { return /* binding */ bandwidth; },\n/* harmony export */   bitDepth: function() { return /* binding */ bitDepth; },\n/* harmony export */   bitrate: function() { return /* binding */ bitrate; },\n/* harmony export */   bitrateMaximum: function() { return /* binding */ bitrateMaximum; },\n/* harmony export */   bitrateMinimum: function() { return /* binding */ bitrateMinimum; },\n/* harmony export */   bitrateNominal: function() { return /* binding */ bitrateNominal; },\n/* harmony export */   blockSize: function() { return /* binding */ blockSize; },\n/* harmony export */   blockingStrategy: function() { return /* binding */ blockingStrategy; },\n/* harmony export */   blocksize0: function() { return /* binding */ blocksize0; },\n/* harmony export */   blocksize1: function() { return /* binding */ blocksize1; },\n/* harmony export */   buffer: function() { return /* binding */ buffer; },\n/* harmony export */   bufferFullness: function() { return /* binding */ bufferFullness; },\n/* harmony export */   channelMappingFamily: function() { return /* binding */ channelMappingFamily; },\n/* harmony export */   channelMappingTable: function() { return /* binding */ channelMappingTable; },\n/* harmony export */   channelMode: function() { return /* binding */ channelMode; },\n/* harmony export */   channels: function() { return /* binding */ channels; },\n/* harmony export */   codec: function() { return /* binding */ codec; },\n/* harmony export */   codecFrames: function() { return /* binding */ codecFrames; },\n/* harmony export */   copyrightId: function() { return /* binding */ copyrightId; },\n/* harmony export */   copyrightIdStart: function() { return /* binding */ copyrightIdStart; },\n/* harmony export */   coupledStreamCount: function() { return /* binding */ coupledStreamCount; },\n/* harmony export */   crc: function() { return /* binding */ crc; },\n/* harmony export */   crc16: function() { return /* binding */ crc16; },\n/* harmony export */   crc32: function() { return /* binding */ crc32; },\n/* harmony export */   data: function() { return /* binding */ data; },\n/* harmony export */   description: function() { return /* binding */ description; },\n/* harmony export */   duration: function() { return /* binding */ duration; },\n/* harmony export */   emphasis: function() { return /* binding */ emphasis; },\n/* harmony export */   frame: function() { return /* binding */ frame; },\n/* harmony export */   frameCount: function() { return /* binding */ frameCount; },\n/* harmony export */   frameLength: function() { return /* binding */ frameLength; },\n/* harmony export */   frameNumber: function() { return /* binding */ frameNumber; },\n/* harmony export */   framePadding: function() { return /* binding */ framePadding; },\n/* harmony export */   frameSize: function() { return /* binding */ frameSize; },\n/* harmony export */   hasOpusPadding: function() { return /* binding */ hasOpusPadding; },\n/* harmony export */   header: function() { return /* binding */ header; },\n/* harmony export */   inputSampleRate: function() { return /* binding */ inputSampleRate; },\n/* harmony export */   isContinuedPacket: function() { return /* binding */ isContinuedPacket; },\n/* harmony export */   isCopyrighted: function() { return /* binding */ isCopyrighted; },\n/* harmony export */   isFirstPage: function() { return /* binding */ isFirstPage; },\n/* harmony export */   isHome: function() { return /* binding */ isHome; },\n/* harmony export */   isLastPage: function() { return /* binding */ isLastPage; },\n/* harmony export */   isOriginal: function() { return /* binding */ isOriginal; },\n/* harmony export */   isPrivate: function() { return /* binding */ isPrivate; },\n/* harmony export */   isVbr: function() { return /* binding */ isVbr; },\n/* harmony export */   layer: function() { return /* binding */ layer; },\n/* harmony export */   length: function() { return /* binding */ length; },\n/* harmony export */   mode: function() { return /* binding */ mode; },\n/* harmony export */   modeExtension: function() { return /* binding */ modeExtension; },\n/* harmony export */   mpeg: function() { return /* binding */ mpeg; },\n/* harmony export */   mpegVersion: function() { return /* binding */ mpegVersion; },\n/* harmony export */   numberAACFrames: function() { return /* binding */ numberAACFrames; },\n/* harmony export */   outputGain: function() { return /* binding */ outputGain; },\n/* harmony export */   pageChecksum: function() { return /* binding */ pageChecksum; },\n/* harmony export */   pageSegmentTable: function() { return /* binding */ pageSegmentTable; },\n/* harmony export */   pageSequenceNumber: function() { return /* binding */ pageSequenceNumber; },\n/* harmony export */   preSkip: function() { return /* binding */ preSkip; },\n/* harmony export */   profile: function() { return /* binding */ profile; },\n/* harmony export */   protection: function() { return /* binding */ protection; },\n/* harmony export */   rawData: function() { return /* binding */ rawData; },\n/* harmony export */   sampleNumber: function() { return /* binding */ sampleNumber; },\n/* harmony export */   sampleRate: function() { return /* binding */ sampleRate; },\n/* harmony export */   samples: function() { return /* binding */ samples; },\n/* harmony export */   segments: function() { return /* binding */ segments; },\n/* harmony export */   streamCount: function() { return /* binding */ streamCount; },\n/* harmony export */   streamInfo: function() { return /* binding */ streamInfo; },\n/* harmony export */   streamSerialNumber: function() { return /* binding */ streamSerialNumber; },\n/* harmony export */   streamStructureVersion: function() { return /* binding */ streamStructureVersion; },\n/* harmony export */   subarray: function() { return /* binding */ subarray; },\n/* harmony export */   totalBytesOut: function() { return /* binding */ totalBytesOut; },\n/* harmony export */   totalDuration: function() { return /* binding */ totalDuration; },\n/* harmony export */   totalSamples: function() { return /* binding */ totalSamples; },\n/* harmony export */   version: function() { return /* binding */ version; },\n/* harmony export */   vorbis: function() { return /* binding */ vorbis; },\n/* harmony export */   vorbisComments: function() { return /* binding */ vorbisComments; },\n/* harmony export */   vorbisSetup: function() { return /* binding */ vorbisSetup; }\n/* harmony export */ });\n/* harmony import */ var _src_CodecParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/CodecParser.js */ \"./node_modules/codec-parser/src/CodecParser.js\");\n/* harmony import */ var _src_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_src_CodecParser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\nconst absoluteGranulePosition = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.absoluteGranulePosition;\nconst bandwidth = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bandwidth;\nconst bitDepth = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitDepth;\nconst bitrate = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrate;\nconst bitrateMaximum = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMaximum;\nconst bitrateMinimum = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMinimum;\nconst bitrateNominal = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateNominal;\nconst buffer = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.buffer;\nconst bufferFullness = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.bufferFullness;\nconst codec = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.codec;\nconst codecFrames = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.codecFrames;\nconst coupledStreamCount = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.coupledStreamCount;\nconst crc = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc;\nconst crc16 = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc16;\nconst crc32 = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc32;\nconst data = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.data;\nconst description = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.description;\nconst duration = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration;\nconst emphasis = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.emphasis;\nconst hasOpusPadding = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.hasOpusPadding;\nconst header = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.header;\nconst isContinuedPacket = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isContinuedPacket;\nconst isCopyrighted = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isCopyrighted;\nconst isFirstPage = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isFirstPage;\nconst isHome = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isHome;\nconst isLastPage = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isLastPage;\nconst isOriginal = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isOriginal;\nconst isPrivate = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isPrivate;\nconst isVbr = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.isVbr;\nconst layer = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.layer;\nconst length = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.length;\nconst mode = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.mode;\nconst modeExtension = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.modeExtension;\nconst mpeg = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.mpeg;\nconst mpegVersion = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.mpegVersion;\nconst numberAACFrames = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.numberAACFrames;\nconst outputGain = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.outputGain;\nconst preSkip = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.preSkip;\nconst profile = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.profile;\nconst protection = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.protection;\nconst rawData = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.rawData;\nconst segments = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.segments;\nconst subarray = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray;\nconst version = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.version;\nconst vorbis = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbis;\nconst vorbisComments = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisComments;\nconst vorbisSetup = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisSetup;\nconst blockingStrategy = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.blockingStrategy;\nconst blockSize = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.blockSize;\nconst blocksize0 = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize0;\nconst blocksize1 = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize1;\nconst channelMappingFamily = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMappingFamily;\nconst channelMappingTable = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMappingTable;\nconst channelMode = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMode;\nconst channels = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.channels;\nconst copyrightId = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.copyrightId;\nconst copyrightIdStart = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.copyrightIdStart;\nconst frame = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.frame;\nconst frameCount = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameCount;\nconst frameLength = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameLength;\nconst frameNumber = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameNumber;\nconst framePadding = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.framePadding;\nconst frameSize = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameSize;\nconst inputSampleRate = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.inputSampleRate;\nconst pageChecksum = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageChecksum;\nconst pageSegmentTable = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageSegmentTable;\nconst pageSequenceNumber = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageSequenceNumber;\nconst sampleNumber = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleNumber;\nconst sampleRate = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate;\nconst samples = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples;\nconst streamCount = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamCount;\nconst streamInfo = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamInfo;\nconst streamSerialNumber = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamSerialNumber;\nconst streamStructureVersion = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamStructureVersion;\nconst totalBytesOut = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalBytesOut;\nconst totalDuration = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalDuration;\nconst totalSamples = _src_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalSamples;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDQzs7QUFFaEQsK0RBQWUsMkRBQVcsRUFBQzs7QUFFcEIsZ0NBQWdDLHNFQUFpQztBQUNqRSxrQkFBa0Isd0RBQW1CO0FBQ3JDLGlCQUFpQix1REFBa0I7QUFDbkMsZ0JBQWdCLHNEQUFpQjtBQUNqQyx1QkFBdUIsNkRBQXdCO0FBQy9DLHVCQUF1Qiw2REFBd0I7QUFDL0MsdUJBQXVCLDZEQUF3QjtBQUMvQyxlQUFlLHFEQUFnQjtBQUMvQix1QkFBdUIsNkRBQXdCO0FBQy9DLGNBQWMsb0RBQWU7QUFDN0Isb0JBQW9CLDBEQUFxQjtBQUN6QywyQkFBMkIsaUVBQTRCO0FBQ3ZELFlBQVksa0RBQWE7QUFDekIsY0FBYyxvREFBZTtBQUM3QixjQUFjLG9EQUFlO0FBQzdCLGFBQWEsbURBQWM7QUFDM0Isb0JBQW9CLDBEQUFxQjtBQUN6QyxpQkFBaUIsdURBQWtCO0FBQ25DLGlCQUFpQix1REFBa0I7QUFDbkMsdUJBQXVCLDZEQUF3QjtBQUMvQyxlQUFlLHFEQUFnQjtBQUMvQiwwQkFBMEIsZ0VBQTJCO0FBQ3JELHNCQUFzQiw0REFBdUI7QUFDN0Msb0JBQW9CLDBEQUFxQjtBQUN6QyxlQUFlLHFEQUFnQjtBQUMvQixtQkFBbUIseURBQW9CO0FBQ3ZDLG1CQUFtQix5REFBb0I7QUFDdkMsa0JBQWtCLHdEQUFtQjtBQUNyQyxjQUFjLG9EQUFlO0FBQzdCLGNBQWMsb0RBQWU7QUFDN0IsZUFBZSxxREFBZ0I7QUFDL0IsYUFBYSxtREFBYztBQUMzQixzQkFBc0IsNERBQXVCO0FBQzdDLGFBQWEsbURBQWM7QUFDM0Isb0JBQW9CLDBEQUFxQjtBQUN6Qyx3QkFBd0IsOERBQXlCO0FBQ2pELG1CQUFtQix5REFBb0I7QUFDdkMsZ0JBQWdCLHNEQUFpQjtBQUNqQyxnQkFBZ0Isc0RBQWlCO0FBQ2pDLG1CQUFtQix5REFBb0I7QUFDdkMsZ0JBQWdCLHNEQUFpQjtBQUNqQyxpQkFBaUIsdURBQWtCO0FBQ25DLGlCQUFpQix1REFBa0I7QUFDbkMsZ0JBQWdCLHNEQUFpQjtBQUNqQyxlQUFlLHFEQUFnQjtBQUMvQix1QkFBdUIsNkRBQXdCO0FBQy9DLG9CQUFvQiwwREFBcUI7QUFDekMseUJBQXlCLCtEQUEwQjtBQUNuRCxrQkFBa0Isd0RBQW1CO0FBQ3JDLG1CQUFtQix5REFBb0I7QUFDdkMsbUJBQW1CLHlEQUFvQjtBQUN2Qyw2QkFBNkIsbUVBQThCO0FBQzNELDRCQUE0QixrRUFBNkI7QUFDekQsb0JBQW9CLDBEQUFxQjtBQUN6QyxpQkFBaUIsdURBQWtCO0FBQ25DLG9CQUFvQiwwREFBcUI7QUFDekMseUJBQXlCLCtEQUEwQjtBQUNuRCxjQUFjLG9EQUFlO0FBQzdCLG1CQUFtQix5REFBb0I7QUFDdkMsb0JBQW9CLDBEQUFxQjtBQUN6QyxvQkFBb0IsMERBQXFCO0FBQ3pDLHFCQUFxQiwyREFBc0I7QUFDM0Msa0JBQWtCLHdEQUFtQjtBQUNyQyx3QkFBd0IsOERBQXlCO0FBQ2pELHFCQUFxQiwyREFBc0I7QUFDM0MseUJBQXlCLCtEQUEwQjtBQUNuRCwyQkFBMkIsaUVBQTRCO0FBQ3ZELHFCQUFxQiwyREFBc0I7QUFDM0MsbUJBQW1CLHlEQUFvQjtBQUN2QyxnQkFBZ0Isc0RBQWlCO0FBQ2pDLG9CQUFvQiwwREFBcUI7QUFDekMsbUJBQW1CLHlEQUFvQjtBQUN2QywyQkFBMkIsaUVBQTRCO0FBQ3ZELCtCQUErQixxRUFBZ0M7QUFDL0Qsc0JBQXNCLDREQUF1QjtBQUM3QyxzQkFBc0IsNERBQXVCO0FBQzdDLHFCQUFxQiwyREFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9pbmRleC5qcz9jYTc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb2RlY1BhcnNlciBmcm9tIFwiLi9zcmMvQ29kZWNQYXJzZXIuanNcIjtcbmltcG9ydCAqIGFzIGNvbnN0YW50cyBmcm9tIFwiLi9zcmMvY29uc3RhbnRzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IENvZGVjUGFyc2VyO1xuXG5leHBvcnQgY29uc3QgYWJzb2x1dGVHcmFudWxlUG9zaXRpb24gPSBjb25zdGFudHMuYWJzb2x1dGVHcmFudWxlUG9zaXRpb247XG5leHBvcnQgY29uc3QgYmFuZHdpZHRoID0gY29uc3RhbnRzLmJhbmR3aWR0aDtcbmV4cG9ydCBjb25zdCBiaXREZXB0aCA9IGNvbnN0YW50cy5iaXREZXB0aDtcbmV4cG9ydCBjb25zdCBiaXRyYXRlID0gY29uc3RhbnRzLmJpdHJhdGU7XG5leHBvcnQgY29uc3QgYml0cmF0ZU1heGltdW0gPSBjb25zdGFudHMuYml0cmF0ZU1heGltdW07XG5leHBvcnQgY29uc3QgYml0cmF0ZU1pbmltdW0gPSBjb25zdGFudHMuYml0cmF0ZU1pbmltdW07XG5leHBvcnQgY29uc3QgYml0cmF0ZU5vbWluYWwgPSBjb25zdGFudHMuYml0cmF0ZU5vbWluYWw7XG5leHBvcnQgY29uc3QgYnVmZmVyID0gY29uc3RhbnRzLmJ1ZmZlcjtcbmV4cG9ydCBjb25zdCBidWZmZXJGdWxsbmVzcyA9IGNvbnN0YW50cy5idWZmZXJGdWxsbmVzcztcbmV4cG9ydCBjb25zdCBjb2RlYyA9IGNvbnN0YW50cy5jb2RlYztcbmV4cG9ydCBjb25zdCBjb2RlY0ZyYW1lcyA9IGNvbnN0YW50cy5jb2RlY0ZyYW1lcztcbmV4cG9ydCBjb25zdCBjb3VwbGVkU3RyZWFtQ291bnQgPSBjb25zdGFudHMuY291cGxlZFN0cmVhbUNvdW50O1xuZXhwb3J0IGNvbnN0IGNyYyA9IGNvbnN0YW50cy5jcmM7XG5leHBvcnQgY29uc3QgY3JjMTYgPSBjb25zdGFudHMuY3JjMTY7XG5leHBvcnQgY29uc3QgY3JjMzIgPSBjb25zdGFudHMuY3JjMzI7XG5leHBvcnQgY29uc3QgZGF0YSA9IGNvbnN0YW50cy5kYXRhO1xuZXhwb3J0IGNvbnN0IGRlc2NyaXB0aW9uID0gY29uc3RhbnRzLmRlc2NyaXB0aW9uO1xuZXhwb3J0IGNvbnN0IGR1cmF0aW9uID0gY29uc3RhbnRzLmR1cmF0aW9uO1xuZXhwb3J0IGNvbnN0IGVtcGhhc2lzID0gY29uc3RhbnRzLmVtcGhhc2lzO1xuZXhwb3J0IGNvbnN0IGhhc09wdXNQYWRkaW5nID0gY29uc3RhbnRzLmhhc09wdXNQYWRkaW5nO1xuZXhwb3J0IGNvbnN0IGhlYWRlciA9IGNvbnN0YW50cy5oZWFkZXI7XG5leHBvcnQgY29uc3QgaXNDb250aW51ZWRQYWNrZXQgPSBjb25zdGFudHMuaXNDb250aW51ZWRQYWNrZXQ7XG5leHBvcnQgY29uc3QgaXNDb3B5cmlnaHRlZCA9IGNvbnN0YW50cy5pc0NvcHlyaWdodGVkO1xuZXhwb3J0IGNvbnN0IGlzRmlyc3RQYWdlID0gY29uc3RhbnRzLmlzRmlyc3RQYWdlO1xuZXhwb3J0IGNvbnN0IGlzSG9tZSA9IGNvbnN0YW50cy5pc0hvbWU7XG5leHBvcnQgY29uc3QgaXNMYXN0UGFnZSA9IGNvbnN0YW50cy5pc0xhc3RQYWdlO1xuZXhwb3J0IGNvbnN0IGlzT3JpZ2luYWwgPSBjb25zdGFudHMuaXNPcmlnaW5hbDtcbmV4cG9ydCBjb25zdCBpc1ByaXZhdGUgPSBjb25zdGFudHMuaXNQcml2YXRlO1xuZXhwb3J0IGNvbnN0IGlzVmJyID0gY29uc3RhbnRzLmlzVmJyO1xuZXhwb3J0IGNvbnN0IGxheWVyID0gY29uc3RhbnRzLmxheWVyO1xuZXhwb3J0IGNvbnN0IGxlbmd0aCA9IGNvbnN0YW50cy5sZW5ndGg7XG5leHBvcnQgY29uc3QgbW9kZSA9IGNvbnN0YW50cy5tb2RlO1xuZXhwb3J0IGNvbnN0IG1vZGVFeHRlbnNpb24gPSBjb25zdGFudHMubW9kZUV4dGVuc2lvbjtcbmV4cG9ydCBjb25zdCBtcGVnID0gY29uc3RhbnRzLm1wZWc7XG5leHBvcnQgY29uc3QgbXBlZ1ZlcnNpb24gPSBjb25zdGFudHMubXBlZ1ZlcnNpb247XG5leHBvcnQgY29uc3QgbnVtYmVyQUFDRnJhbWVzID0gY29uc3RhbnRzLm51bWJlckFBQ0ZyYW1lcztcbmV4cG9ydCBjb25zdCBvdXRwdXRHYWluID0gY29uc3RhbnRzLm91dHB1dEdhaW47XG5leHBvcnQgY29uc3QgcHJlU2tpcCA9IGNvbnN0YW50cy5wcmVTa2lwO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGUgPSBjb25zdGFudHMucHJvZmlsZTtcbmV4cG9ydCBjb25zdCBwcm90ZWN0aW9uID0gY29uc3RhbnRzLnByb3RlY3Rpb247XG5leHBvcnQgY29uc3QgcmF3RGF0YSA9IGNvbnN0YW50cy5yYXdEYXRhO1xuZXhwb3J0IGNvbnN0IHNlZ21lbnRzID0gY29uc3RhbnRzLnNlZ21lbnRzO1xuZXhwb3J0IGNvbnN0IHN1YmFycmF5ID0gY29uc3RhbnRzLnN1YmFycmF5O1xuZXhwb3J0IGNvbnN0IHZlcnNpb24gPSBjb25zdGFudHMudmVyc2lvbjtcbmV4cG9ydCBjb25zdCB2b3JiaXMgPSBjb25zdGFudHMudm9yYmlzO1xuZXhwb3J0IGNvbnN0IHZvcmJpc0NvbW1lbnRzID0gY29uc3RhbnRzLnZvcmJpc0NvbW1lbnRzO1xuZXhwb3J0IGNvbnN0IHZvcmJpc1NldHVwID0gY29uc3RhbnRzLnZvcmJpc1NldHVwO1xuZXhwb3J0IGNvbnN0IGJsb2NraW5nU3RyYXRlZ3kgPSBjb25zdGFudHMuYmxvY2tpbmdTdHJhdGVneTtcbmV4cG9ydCBjb25zdCBibG9ja1NpemUgPSBjb25zdGFudHMuYmxvY2tTaXplO1xuZXhwb3J0IGNvbnN0IGJsb2Nrc2l6ZTAgPSBjb25zdGFudHMuYmxvY2tzaXplMDtcbmV4cG9ydCBjb25zdCBibG9ja3NpemUxID0gY29uc3RhbnRzLmJsb2Nrc2l6ZTE7XG5leHBvcnQgY29uc3QgY2hhbm5lbE1hcHBpbmdGYW1pbHkgPSBjb25zdGFudHMuY2hhbm5lbE1hcHBpbmdGYW1pbHk7XG5leHBvcnQgY29uc3QgY2hhbm5lbE1hcHBpbmdUYWJsZSA9IGNvbnN0YW50cy5jaGFubmVsTWFwcGluZ1RhYmxlO1xuZXhwb3J0IGNvbnN0IGNoYW5uZWxNb2RlID0gY29uc3RhbnRzLmNoYW5uZWxNb2RlO1xuZXhwb3J0IGNvbnN0IGNoYW5uZWxzID0gY29uc3RhbnRzLmNoYW5uZWxzO1xuZXhwb3J0IGNvbnN0IGNvcHlyaWdodElkID0gY29uc3RhbnRzLmNvcHlyaWdodElkO1xuZXhwb3J0IGNvbnN0IGNvcHlyaWdodElkU3RhcnQgPSBjb25zdGFudHMuY29weXJpZ2h0SWRTdGFydDtcbmV4cG9ydCBjb25zdCBmcmFtZSA9IGNvbnN0YW50cy5mcmFtZTtcbmV4cG9ydCBjb25zdCBmcmFtZUNvdW50ID0gY29uc3RhbnRzLmZyYW1lQ291bnQ7XG5leHBvcnQgY29uc3QgZnJhbWVMZW5ndGggPSBjb25zdGFudHMuZnJhbWVMZW5ndGg7XG5leHBvcnQgY29uc3QgZnJhbWVOdW1iZXIgPSBjb25zdGFudHMuZnJhbWVOdW1iZXI7XG5leHBvcnQgY29uc3QgZnJhbWVQYWRkaW5nID0gY29uc3RhbnRzLmZyYW1lUGFkZGluZztcbmV4cG9ydCBjb25zdCBmcmFtZVNpemUgPSBjb25zdGFudHMuZnJhbWVTaXplO1xuZXhwb3J0IGNvbnN0IGlucHV0U2FtcGxlUmF0ZSA9IGNvbnN0YW50cy5pbnB1dFNhbXBsZVJhdGU7XG5leHBvcnQgY29uc3QgcGFnZUNoZWNrc3VtID0gY29uc3RhbnRzLnBhZ2VDaGVja3N1bTtcbmV4cG9ydCBjb25zdCBwYWdlU2VnbWVudFRhYmxlID0gY29uc3RhbnRzLnBhZ2VTZWdtZW50VGFibGU7XG5leHBvcnQgY29uc3QgcGFnZVNlcXVlbmNlTnVtYmVyID0gY29uc3RhbnRzLnBhZ2VTZXF1ZW5jZU51bWJlcjtcbmV4cG9ydCBjb25zdCBzYW1wbGVOdW1iZXIgPSBjb25zdGFudHMuc2FtcGxlTnVtYmVyO1xuZXhwb3J0IGNvbnN0IHNhbXBsZVJhdGUgPSBjb25zdGFudHMuc2FtcGxlUmF0ZTtcbmV4cG9ydCBjb25zdCBzYW1wbGVzID0gY29uc3RhbnRzLnNhbXBsZXM7XG5leHBvcnQgY29uc3Qgc3RyZWFtQ291bnQgPSBjb25zdGFudHMuc3RyZWFtQ291bnQ7XG5leHBvcnQgY29uc3Qgc3RyZWFtSW5mbyA9IGNvbnN0YW50cy5zdHJlYW1JbmZvO1xuZXhwb3J0IGNvbnN0IHN0cmVhbVNlcmlhbE51bWJlciA9IGNvbnN0YW50cy5zdHJlYW1TZXJpYWxOdW1iZXI7XG5leHBvcnQgY29uc3Qgc3RyZWFtU3RydWN0dXJlVmVyc2lvbiA9IGNvbnN0YW50cy5zdHJlYW1TdHJ1Y3R1cmVWZXJzaW9uO1xuZXhwb3J0IGNvbnN0IHRvdGFsQnl0ZXNPdXQgPSBjb25zdGFudHMudG90YWxCeXRlc091dDtcbmV4cG9ydCBjb25zdCB0b3RhbER1cmF0aW9uID0gY29uc3RhbnRzLnRvdGFsRHVyYXRpb247XG5leHBvcnQgY29uc3QgdG90YWxTYW1wbGVzID0gY29uc3RhbnRzLnRvdGFsU2FtcGxlcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/index.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/CodecParser.js":
/*!******************************************************!*\
  !*** ./node_modules/codec-parser/src/CodecParser.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CodecParser; }\n/* harmony export */ });\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _codecs_HeaderCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./codecs/HeaderCache.js */ \"./node_modules/codec-parser/src/codecs/HeaderCache.js\");\n/* harmony import */ var _codecs_mpeg_MPEGParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./codecs/mpeg/MPEGParser.js */ \"./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js\");\n/* harmony import */ var _codecs_aac_AACParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./codecs/aac/AACParser.js */ \"./node_modules/codec-parser/src/codecs/aac/AACParser.js\");\n/* harmony import */ var _codecs_flac_FLACParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./codecs/flac/FLACParser.js */ \"./node_modules/codec-parser/src/codecs/flac/FLACParser.js\");\n/* harmony import */ var _containers_ogg_OggParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./containers/ogg/OggParser.js */ \"./node_modules/codec-parser/src/containers/ogg/OggParser.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\n\n\nconst noOp = () => {};\n\nclass CodecParser {\n  constructor(\n    mimeType,\n    {\n      onCodec,\n      onCodecHeader,\n      onCodecUpdate,\n      enableLogging = false,\n      enableFrameCRC32 = true,\n    } = {},\n  ) {\n    this._inputMimeType = mimeType;\n    this._onCodec = onCodec || noOp;\n    this._onCodecHeader = onCodecHeader || noOp;\n    this._onCodecUpdate = onCodecUpdate;\n    this._enableLogging = enableLogging;\n    this._crc32 = enableFrameCRC32 ? _utilities_js__WEBPACK_IMPORTED_MODULE_0__.crc32Function : noOp;\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.reset]();\n  }\n\n  /**\n   * @public\n   * @returns The detected codec\n   */\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_1__.codec]() {\n    return this._parser ? this._parser[_constants_js__WEBPACK_IMPORTED_MODULE_1__.codec] : \"\";\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.reset]() {\n    this._headerCache = new _codecs_HeaderCache_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\n      this._onCodecHeader,\n      this._onCodecUpdate,\n    );\n\n    this._generator = this._getGenerator();\n    this._generator.next();\n  }\n\n  /**\n   * @public\n   * @description Generator function that yields any buffered CodecFrames and resets the CodecParser\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *flush() {\n    this._flushing = true;\n\n    for (let i = this._generator.next(); i.value; i = this._generator.next()) {\n      yield i.value;\n    }\n\n    this._flushing = false;\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.reset]();\n  }\n\n  /**\n   * @public\n   * @description Generator function takes in a Uint8Array of data and returns a CodecFrame from the data for each iteration\n   * @param {Uint8Array} chunk Next chunk of codec data to read\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *parseChunk(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      yield i.value;\n    }\n  }\n\n  /**\n   * @public\n   * @description Parses an entire file and returns all of the contained frames.\n   * @param {Uint8Array} fileData Coded data to read\n   * @returns {Array<CodecFrame|OggPage>} CodecFrames\n   */\n  parseAll(fileData) {\n    return [...this.parseChunk(fileData), ...this.flush()];\n  }\n\n  /**\n   * @private\n   */\n  *_getGenerator() {\n    if (this._inputMimeType.match(/aac/)) {\n      this._parser = new _codecs_aac_AACParser_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/mpeg/)) {\n      this._parser = new _codecs_mpeg_MPEGParser_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/flac/)) {\n      this._parser = new _codecs_flac_FLACParser_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/ogg/)) {\n      this._parser = new _containers_ogg_OggParser_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, this._headerCache, this._onCodec);\n    } else {\n      throw new Error(`Unsupported Codec ${mimeType}`);\n    }\n\n    this._frameNumber = 0;\n    this._currentReadPosition = 0;\n    this._totalBytesIn = 0;\n    this._totalBytesOut = 0;\n    this._totalSamples = 0;\n    this._sampleRate = undefined;\n\n    this._rawData = new Uint8Array(0);\n\n    // start parsing out frames\n    while (true) {\n      const frame = yield* this._parser[_constants_js__WEBPACK_IMPORTED_MODULE_1__.parseFrame]();\n      if (frame) yield frame;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {number} minSize Minimum bytes to have present in buffer\n   * @returns {Uint8Array} rawData\n   */\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_1__.readRawData](minSize = 0, readOffset = 0) {\n    let rawData;\n\n    while (this._rawData[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] <= minSize + readOffset) {\n      rawData = yield;\n\n      if (this._flushing) return this._rawData[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](readOffset);\n\n      if (rawData) {\n        this._totalBytesIn += rawData[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length];\n        this._rawData = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_0__.concatBuffers)(this._rawData, rawData);\n      }\n    }\n\n    return this._rawData[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](readOffset);\n  }\n\n  /**\n   * @protected\n   * @param {number} increment Bytes to increment codec data\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.incrementRawData](increment) {\n    this._currentReadPosition += increment;\n    this._rawData = this._rawData[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](increment);\n  }\n\n  /**\n   * @protected\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.mapCodecFrameStats](frame) {\n    this._sampleRate = frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.header][_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate];\n\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.header][_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrate] =\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration] > 0\n        ? Math.round(frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data][_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] / frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration]) * 8\n        : 0;\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameNumber] = this._frameNumber++;\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalBytesOut] = this._totalBytesOut;\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalSamples] = this._totalSamples;\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalDuration] = (this._totalSamples / this._sampleRate) * 1000;\n    frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc32] = this._crc32(frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data]);\n\n    this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_1__.checkCodecUpdate](\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.header][_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrate],\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalDuration],\n    );\n\n    this._totalBytesOut += frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data][_constants_js__WEBPACK_IMPORTED_MODULE_1__.length];\n    this._totalSamples += frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples];\n  }\n\n  /**\n   * @protected\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.mapFrameStats](frame) {\n    if (frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.codecFrames]) {\n      // Ogg container\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.codecFrames].forEach((codecFrame) => {\n        frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration] += codecFrame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration];\n        frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples] += codecFrame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples];\n        this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.mapCodecFrameStats](codecFrame);\n      });\n\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalSamples] = this._totalSamples;\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalDuration] =\n        (this._totalSamples / this._sampleRate) * 1000 || 0;\n      frame[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalBytesOut] = this._totalBytesOut;\n    } else {\n      this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.mapCodecFrameStats](frame);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _log(logger, messages) {\n    if (this._enableLogging) {\n      const stats = [\n        `${_constants_js__WEBPACK_IMPORTED_MODULE_1__.codec}:         ${this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.codec]}`,\n        `inputMimeType: ${this._inputMimeType}`,\n        `readPosition:  ${this._currentReadPosition}`,\n        `totalBytesIn:  ${this._totalBytesIn}`,\n        `${_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalBytesOut}: ${this._totalBytesOut}`,\n      ];\n\n      const width = Math.max(...stats.map((s) => s[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length]));\n\n      messages.push(\n        `--stats--${\"-\".repeat(width - 9)}`,\n        ...stats,\n        \"-\".repeat(width),\n      );\n\n      logger(\n        \"codec-parser\",\n        messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\"),\n      );\n    }\n  }\n\n  /**\n   * @protected\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.logWarning](...messages) {\n    this._log(console.warn, messages);\n  }\n\n  /**\n   * @protected\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_1__.logError](...messages) {\n    this._log(console.error, messages);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/CodecParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/CodecFrame.js":
/*!************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/CodecFrame.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CodecFrame; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _containers_Frame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../containers/Frame.js */ \"./node_modules/codec-parser/src/containers/Frame.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\nclass CodecFrame extends _containers_Frame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](Header, Frame, codecParser, headerCache, readOffset) {\n    const headerValue = yield* Header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getHeader](\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (headerValue) {\n      const frameLengthValue = _globals_js__WEBPACK_IMPORTED_MODULE_2__.headerStore.get(headerValue)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameLength];\n      const samplesValue = _globals_js__WEBPACK_IMPORTED_MODULE_2__.headerStore.get(headerValue)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples];\n\n      const frame = (yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_1__.readRawData](\n        frameLengthValue,\n        readOffset,\n      ))[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](0, frameLengthValue);\n\n      return new Frame(headerValue, frame, samplesValue);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(headerValue, dataValue, samplesValue) {\n    super(headerValue, dataValue);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.header] = headerValue;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples] = samplesValue;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration] = (samplesValue / headerValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate]) * 1000;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameNumber] = null;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalBytesOut] = null;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalSamples] = null;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.totalDuration] = null;\n\n    _globals_js__WEBPACK_IMPORTED_MODULE_2__.frameStore.get(this)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] = dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvQ29kZWNGcmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFd0Q7QUFnQi9CO0FBQ2tCOztBQUU1Qix5QkFBeUIsNERBQUs7QUFDN0MsV0FBVyxtREFBUTtBQUNuQixzQ0FBc0Msb0RBQVM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0Isb0RBQVcsa0JBQWtCLHNEQUFXO0FBQ3ZFLDJCQUEyQixvREFBVyxrQkFBa0Isa0RBQU87O0FBRS9ELHdDQUF3QyxzREFBVztBQUNuRDtBQUNBO0FBQ0EsU0FBUyxtREFBUTs7QUFFakI7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUyxpREFBTTtBQUNmLFNBQVMsa0RBQU87QUFDaEIsU0FBUyxtREFBUSxnQ0FBZ0MscURBQVU7QUFDM0QsU0FBUyxzREFBVztBQUNwQixTQUFTLHdEQUFhO0FBQ3RCLFNBQVMsdURBQVk7QUFDckIsU0FBUyx3REFBYTs7QUFFdEIsSUFBSSxtREFBVSxXQUFXLGlEQUFNLGNBQWMsaURBQU07QUFDbkQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvQ29kZWNGcmFtZS5qcz8xZDBkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQgeyBmcmFtZVN0b3JlLCBoZWFkZXJTdG9yZSB9IGZyb20gXCIuLi9nbG9iYWxzLmpzXCI7XG5pbXBvcnQge1xuICBzYW1wbGVSYXRlLFxuICBsZW5ndGgsXG4gIGZyYW1lTnVtYmVyLFxuICBoZWFkZXIsXG4gIHNhbXBsZXMsXG4gIGR1cmF0aW9uLFxuICB0b3RhbEJ5dGVzT3V0LFxuICB0b3RhbFNhbXBsZXMsXG4gIHRvdGFsRHVyYXRpb24sXG4gIGZyYW1lTGVuZ3RoLFxuICBzdWJhcnJheSxcbiAgcmVhZFJhd0RhdGEsXG4gIGdldEZyYW1lLFxuICBnZXRIZWFkZXIsXG59IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbmltcG9ydCBGcmFtZSBmcm9tIFwiLi4vY29udGFpbmVycy9GcmFtZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb2RlY0ZyYW1lIGV4dGVuZHMgRnJhbWUge1xuICBzdGF0aWMgKltnZXRGcmFtZV0oSGVhZGVyLCBGcmFtZSwgY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCByZWFkT2Zmc2V0KSB7XG4gICAgY29uc3QgaGVhZGVyVmFsdWUgPSB5aWVsZCogSGVhZGVyW2dldEhlYWRlcl0oXG4gICAgICBjb2RlY1BhcnNlcixcbiAgICAgIGhlYWRlckNhY2hlLFxuICAgICAgcmVhZE9mZnNldCxcbiAgICApO1xuXG4gICAgaWYgKGhlYWRlclZhbHVlKSB7XG4gICAgICBjb25zdCBmcmFtZUxlbmd0aFZhbHVlID0gaGVhZGVyU3RvcmUuZ2V0KGhlYWRlclZhbHVlKVtmcmFtZUxlbmd0aF07XG4gICAgICBjb25zdCBzYW1wbGVzVmFsdWUgPSBoZWFkZXJTdG9yZS5nZXQoaGVhZGVyVmFsdWUpW3NhbXBsZXNdO1xuXG4gICAgICBjb25zdCBmcmFtZSA9ICh5aWVsZCogY29kZWNQYXJzZXJbcmVhZFJhd0RhdGFdKFxuICAgICAgICBmcmFtZUxlbmd0aFZhbHVlLFxuICAgICAgICByZWFkT2Zmc2V0LFxuICAgICAgKSlbc3ViYXJyYXldKDAsIGZyYW1lTGVuZ3RoVmFsdWUpO1xuXG4gICAgICByZXR1cm4gbmV3IEZyYW1lKGhlYWRlclZhbHVlLCBmcmFtZSwgc2FtcGxlc1ZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoaGVhZGVyVmFsdWUsIGRhdGFWYWx1ZSwgc2FtcGxlc1ZhbHVlKSB7XG4gICAgc3VwZXIoaGVhZGVyVmFsdWUsIGRhdGFWYWx1ZSk7XG5cbiAgICB0aGlzW2hlYWRlcl0gPSBoZWFkZXJWYWx1ZTtcbiAgICB0aGlzW3NhbXBsZXNdID0gc2FtcGxlc1ZhbHVlO1xuICAgIHRoaXNbZHVyYXRpb25dID0gKHNhbXBsZXNWYWx1ZSAvIGhlYWRlclZhbHVlW3NhbXBsZVJhdGVdKSAqIDEwMDA7XG4gICAgdGhpc1tmcmFtZU51bWJlcl0gPSBudWxsO1xuICAgIHRoaXNbdG90YWxCeXRlc091dF0gPSBudWxsO1xuICAgIHRoaXNbdG90YWxTYW1wbGVzXSA9IG51bGw7XG4gICAgdGhpc1t0b3RhbER1cmF0aW9uXSA9IG51bGw7XG5cbiAgICBmcmFtZVN0b3JlLmdldCh0aGlzKVtsZW5ndGhdID0gZGF0YVZhbHVlW2xlbmd0aF07XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/CodecFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/CodecHeader.js":
/*!*************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/CodecHeader.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CodecHeader; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\nclass CodecHeader {\n  /**\n   * @private\n   */\n  constructor(header) {\n    _globals_js__WEBPACK_IMPORTED_MODULE_0__.headerStore.set(this, header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitDepth] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitDepth];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrate] = null; // set during frame mapping\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channels] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channels];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMode] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMode];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvQ29kZWNIZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFNEM7QUFPbkI7O0FBRVY7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksb0RBQVc7O0FBRWYsU0FBUyxtREFBUSxXQUFXLG1EQUFRO0FBQ3BDLFNBQVMsa0RBQU8sVUFBVTtBQUMxQixTQUFTLG1EQUFRLFdBQVcsbURBQVE7QUFDcEMsU0FBUyxzREFBVyxXQUFXLHNEQUFXO0FBQzFDLFNBQVMscURBQVUsV0FBVyxxREFBVTtBQUN4QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvZGVjcy9Db2RlY0hlYWRlci5qcz85ZDk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQgeyBoZWFkZXJTdG9yZSB9IGZyb20gXCIuLi9nbG9iYWxzLmpzXCI7XG5pbXBvcnQge1xuICBiaXREZXB0aCxcbiAgY2hhbm5lbE1vZGUsXG4gIHNhbXBsZVJhdGUsXG4gIGJpdHJhdGUsXG4gIGNoYW5uZWxzLFxufSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvZGVjSGVhZGVyIHtcbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBjb25zdHJ1Y3RvcihoZWFkZXIpIHtcbiAgICBoZWFkZXJTdG9yZS5zZXQodGhpcywgaGVhZGVyKTtcblxuICAgIHRoaXNbYml0RGVwdGhdID0gaGVhZGVyW2JpdERlcHRoXTtcbiAgICB0aGlzW2JpdHJhdGVdID0gbnVsbDsgLy8gc2V0IGR1cmluZyBmcmFtZSBtYXBwaW5nXG4gICAgdGhpc1tjaGFubmVsc10gPSBoZWFkZXJbY2hhbm5lbHNdO1xuICAgIHRoaXNbY2hhbm5lbE1vZGVdID0gaGVhZGVyW2NoYW5uZWxNb2RlXTtcbiAgICB0aGlzW3NhbXBsZVJhdGVdID0gaGVhZGVyW3NhbXBsZVJhdGVdO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/CodecHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/HeaderCache.js":
/*!*************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/HeaderCache.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HeaderCache; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\nclass HeaderCache {\n  constructor(onCodecHeader, onCodecUpdate) {\n    this._onCodecHeader = onCodecHeader;\n    this._onCodecUpdate = onCodecUpdate;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.reset]();\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_0__.enable]() {\n    this._isEnabled = true;\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_0__.reset]() {\n    this._headerCache = new Map();\n    this._codecUpdateData = new WeakMap();\n    this._codecHeaderSent = false;\n    this._codecShouldUpdate = false;\n    this._bitrate = null;\n    this._isEnabled = false;\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_0__.checkCodecUpdate](bitrate, totalDuration) {\n    if (this._onCodecUpdate) {\n      if (this._bitrate !== bitrate) {\n        this._bitrate = bitrate;\n        this._codecShouldUpdate = true;\n      }\n\n      // only update if codec data is available\n      const codecData = this._codecUpdateData.get(\n        this._headerCache.get(this._currentHeader),\n      );\n\n      if (this._codecShouldUpdate && codecData) {\n        this._onCodecUpdate(\n          {\n            bitrate,\n            ...codecData,\n          },\n          totalDuration,\n        );\n      }\n\n      this._codecShouldUpdate = false;\n    }\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](key) {\n    const header = this._headerCache.get(key);\n\n    if (header) {\n      this._updateCurrentHeader(key);\n    }\n\n    return header;\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_0__.setHeader](key, header, codecUpdateFields) {\n    if (this._isEnabled) {\n      if (!this._codecHeaderSent) {\n        this._onCodecHeader({ ...header });\n        this._codecHeaderSent = true;\n      }\n      this._updateCurrentHeader(key);\n\n      this._headerCache.set(key, header);\n      this._codecUpdateData.set(header, codecUpdateFields);\n    }\n  }\n\n  _updateCurrentHeader(key) {\n    if (this._onCodecUpdate && key !== this._currentHeader) {\n      this._codecShouldUpdate = true;\n      this._currentHeader = key;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvSGVhZGVyQ2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQVF5Qjs7QUFFVjtBQUNmO0FBQ0E7QUFDQTtBQUNBLFNBQVMsZ0RBQUs7QUFDZDs7QUFFQSxHQUFHLGlEQUFNO0FBQ1Q7QUFDQTs7QUFFQSxHQUFHLGdEQUFLO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRywyREFBZ0I7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRyxvREFBUztBQUNaOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEdBQUcsb0RBQVM7QUFDWjtBQUNBO0FBQ0EsOEJBQThCLFdBQVc7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvZGVjcy9IZWFkZXJDYWNoZS5qcz8xNWVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQge1xuICBnZXRIZWFkZXIsXG4gIHNldEhlYWRlcixcbiAgY2hlY2tDb2RlY1VwZGF0ZSxcbiAgcmVzZXQsXG4gIGVuYWJsZSxcbn0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIZWFkZXJDYWNoZSB7XG4gIGNvbnN0cnVjdG9yKG9uQ29kZWNIZWFkZXIsIG9uQ29kZWNVcGRhdGUpIHtcbiAgICB0aGlzLl9vbkNvZGVjSGVhZGVyID0gb25Db2RlY0hlYWRlcjtcbiAgICB0aGlzLl9vbkNvZGVjVXBkYXRlID0gb25Db2RlY1VwZGF0ZTtcbiAgICB0aGlzW3Jlc2V0XSgpO1xuICB9XG5cbiAgW2VuYWJsZV0oKSB7XG4gICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIFtyZXNldF0oKSB7XG4gICAgdGhpcy5faGVhZGVyQ2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgdGhpcy5fY29kZWNVcGRhdGVEYXRhID0gbmV3IFdlYWtNYXAoKTtcbiAgICB0aGlzLl9jb2RlY0hlYWRlclNlbnQgPSBmYWxzZTtcbiAgICB0aGlzLl9jb2RlY1Nob3VsZFVwZGF0ZSA9IGZhbHNlO1xuICAgIHRoaXMuX2JpdHJhdGUgPSBudWxsO1xuICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgW2NoZWNrQ29kZWNVcGRhdGVdKGJpdHJhdGUsIHRvdGFsRHVyYXRpb24pIHtcbiAgICBpZiAodGhpcy5fb25Db2RlY1VwZGF0ZSkge1xuICAgICAgaWYgKHRoaXMuX2JpdHJhdGUgIT09IGJpdHJhdGUpIHtcbiAgICAgICAgdGhpcy5fYml0cmF0ZSA9IGJpdHJhdGU7XG4gICAgICAgIHRoaXMuX2NvZGVjU2hvdWxkVXBkYXRlID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gb25seSB1cGRhdGUgaWYgY29kZWMgZGF0YSBpcyBhdmFpbGFibGVcbiAgICAgIGNvbnN0IGNvZGVjRGF0YSA9IHRoaXMuX2NvZGVjVXBkYXRlRGF0YS5nZXQoXG4gICAgICAgIHRoaXMuX2hlYWRlckNhY2hlLmdldCh0aGlzLl9jdXJyZW50SGVhZGVyKSxcbiAgICAgICk7XG5cbiAgICAgIGlmICh0aGlzLl9jb2RlY1Nob3VsZFVwZGF0ZSAmJiBjb2RlY0RhdGEpIHtcbiAgICAgICAgdGhpcy5fb25Db2RlY1VwZGF0ZShcbiAgICAgICAgICB7XG4gICAgICAgICAgICBiaXRyYXRlLFxuICAgICAgICAgICAgLi4uY29kZWNEYXRhLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgdG90YWxEdXJhdGlvbixcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fY29kZWNTaG91bGRVcGRhdGUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBbZ2V0SGVhZGVyXShrZXkpIHtcbiAgICBjb25zdCBoZWFkZXIgPSB0aGlzLl9oZWFkZXJDYWNoZS5nZXQoa2V5KTtcblxuICAgIGlmIChoZWFkZXIpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZUN1cnJlbnRIZWFkZXIoa2V5KTtcbiAgICB9XG5cbiAgICByZXR1cm4gaGVhZGVyO1xuICB9XG5cbiAgW3NldEhlYWRlcl0oa2V5LCBoZWFkZXIsIGNvZGVjVXBkYXRlRmllbGRzKSB7XG4gICAgaWYgKHRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgaWYgKCF0aGlzLl9jb2RlY0hlYWRlclNlbnQpIHtcbiAgICAgICAgdGhpcy5fb25Db2RlY0hlYWRlcih7IC4uLmhlYWRlciB9KTtcbiAgICAgICAgdGhpcy5fY29kZWNIZWFkZXJTZW50ID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHRoaXMuX3VwZGF0ZUN1cnJlbnRIZWFkZXIoa2V5KTtcblxuICAgICAgdGhpcy5faGVhZGVyQ2FjaGUuc2V0KGtleSwgaGVhZGVyKTtcbiAgICAgIHRoaXMuX2NvZGVjVXBkYXRlRGF0YS5zZXQoaGVhZGVyLCBjb2RlY1VwZGF0ZUZpZWxkcyk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUN1cnJlbnRIZWFkZXIoa2V5KSB7XG4gICAgaWYgKHRoaXMuX29uQ29kZWNVcGRhdGUgJiYga2V5ICE9PSB0aGlzLl9jdXJyZW50SGVhZGVyKSB7XG4gICAgICB0aGlzLl9jb2RlY1Nob3VsZFVwZGF0ZSA9IHRydWU7XG4gICAgICB0aGlzLl9jdXJyZW50SGVhZGVyID0ga2V5O1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/HeaderCache.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/Parser.js":
/*!********************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/Parser.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Parser; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n/**\n * @abstract\n * @description Abstract class containing methods for parsing codec frames\n */\nclass Parser {\n  constructor(codecParser, headerCache) {\n    this._codecParser = codecParser;\n    this._headerCache = headerCache;\n  }\n\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.syncFrame]() {\n    let frameData;\n\n    do {\n      frameData = yield* this.Frame[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getFrame](\n        this._codecParser,\n        this._headerCache,\n        0,\n      );\n      if (frameData) return frameData;\n      this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.incrementRawData](1); // increment to continue syncing\n    } while (true);\n  }\n\n  /**\n   * @description Searches for Frames within bytes containing a sequence of known codec frames.\n   * @param {boolean} ignoreNextFrame Set to true to return frames even if the next frame may not exist at the expected location\n   * @returns {Frame}\n   */\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fixedLengthFrameSync](ignoreNextFrame) {\n    let frameData = yield* this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.syncFrame]();\n    const frameLength = _globals_js__WEBPACK_IMPORTED_MODULE_1__.frameStore.get(frameData)[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n\n    if (\n      ignoreNextFrame ||\n      this._codecParser._flushing ||\n      // check if there is a frame right after this one\n      (yield* this.Header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](\n        this._codecParser,\n        this._headerCache,\n        frameLength,\n      ))\n    ) {\n      this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.enable](); // start caching when synced\n\n      this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.incrementRawData](frameLength); // increment to the next frame\n      this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mapFrameStats](frameData);\n      return frameData;\n    }\n\n    this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.logWarning](\n      `Missing ${_constants_js__WEBPACK_IMPORTED_MODULE_0__.frame} at ${frameLength} bytes from current position.`,\n      `Dropping current ${_constants_js__WEBPACK_IMPORTED_MODULE_0__.frame} and trying again.`,\n    );\n    this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.reset](); // frame is invalid and must re-sync and clear cache\n    this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.incrementRawData](1); // increment to invalidate the current frame\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRTJDO0FBYWxCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxvREFBUztBQUNiOztBQUVBO0FBQ0Esb0NBQW9DLG1EQUFRO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQWdCLE1BQU07QUFDOUMsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEIsZUFBZTtBQUNmO0FBQ0EsSUFBSSwrREFBb0I7QUFDeEIsZ0NBQWdDLG9EQUFTO0FBQ3pDLHdCQUF3QixtREFBVSxnQkFBZ0IsaURBQU07O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9EQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaURBQU0sS0FBSzs7QUFFbkMsd0JBQXdCLDJEQUFnQixnQkFBZ0I7QUFDeEQsd0JBQXdCLHdEQUFhO0FBQ3JDO0FBQ0E7O0FBRUEsc0JBQXNCLHFEQUFVO0FBQ2hDLGlCQUFpQixnREFBSyxFQUFFLEtBQUssYUFBYTtBQUMxQywwQkFBMEIsZ0RBQUssRUFBRTtBQUNqQztBQUNBLHNCQUFzQixnREFBSyxLQUFLO0FBQ2hDLHNCQUFzQiwyREFBZ0IsTUFBTTtBQUM1QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvZGVjcy9QYXJzZXIuanM/ZTVmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgMjAyMC0yMDIzIEV0aGFuIEhhbHNhbGxcbiAgICBcbiAgICBUaGlzIGZpbGUgaXMgcGFydCBvZiBjb2RlYy1wYXJzZXIuXG4gICAgXG4gICAgY29kZWMtcGFyc2VyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbiAgICBjb2RlYy1wYXJzZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPlxuKi9cblxuaW1wb3J0IHsgZnJhbWVTdG9yZSB9IGZyb20gXCIuLi9nbG9iYWxzLmpzXCI7XG5pbXBvcnQge1xuICBmcmFtZSxcbiAgbGVuZ3RoLFxuICBpbmNyZW1lbnRSYXdEYXRhLFxuICBtYXBGcmFtZVN0YXRzLFxuICBsb2dXYXJuaW5nLFxuICBzeW5jRnJhbWUsXG4gIGZpeGVkTGVuZ3RoRnJhbWVTeW5jLFxuICBnZXRGcmFtZSxcbiAgZ2V0SGVhZGVyLFxuICByZXNldCxcbiAgZW5hYmxlLFxufSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5cbi8qKlxuICogQGFic3RyYWN0XG4gKiBAZGVzY3JpcHRpb24gQWJzdHJhY3QgY2xhc3MgY29udGFpbmluZyBtZXRob2RzIGZvciBwYXJzaW5nIGNvZGVjIGZyYW1lc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXJzZXIge1xuICBjb25zdHJ1Y3Rvcihjb2RlY1BhcnNlciwgaGVhZGVyQ2FjaGUpIHtcbiAgICB0aGlzLl9jb2RlY1BhcnNlciA9IGNvZGVjUGFyc2VyO1xuICAgIHRoaXMuX2hlYWRlckNhY2hlID0gaGVhZGVyQ2FjaGU7XG4gIH1cblxuICAqW3N5bmNGcmFtZV0oKSB7XG4gICAgbGV0IGZyYW1lRGF0YTtcblxuICAgIGRvIHtcbiAgICAgIGZyYW1lRGF0YSA9IHlpZWxkKiB0aGlzLkZyYW1lW2dldEZyYW1lXShcbiAgICAgICAgdGhpcy5fY29kZWNQYXJzZXIsXG4gICAgICAgIHRoaXMuX2hlYWRlckNhY2hlLFxuICAgICAgICAwLFxuICAgICAgKTtcbiAgICAgIGlmIChmcmFtZURhdGEpIHJldHVybiBmcmFtZURhdGE7XG4gICAgICB0aGlzLl9jb2RlY1BhcnNlcltpbmNyZW1lbnRSYXdEYXRhXSgxKTsgLy8gaW5jcmVtZW50IHRvIGNvbnRpbnVlIHN5bmNpbmdcbiAgICB9IHdoaWxlICh0cnVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gU2VhcmNoZXMgZm9yIEZyYW1lcyB3aXRoaW4gYnl0ZXMgY29udGFpbmluZyBhIHNlcXVlbmNlIG9mIGtub3duIGNvZGVjIGZyYW1lcy5cbiAgICogQHBhcmFtIHtib29sZWFufSBpZ25vcmVOZXh0RnJhbWUgU2V0IHRvIHRydWUgdG8gcmV0dXJuIGZyYW1lcyBldmVuIGlmIHRoZSBuZXh0IGZyYW1lIG1heSBub3QgZXhpc3QgYXQgdGhlIGV4cGVjdGVkIGxvY2F0aW9uXG4gICAqIEByZXR1cm5zIHtGcmFtZX1cbiAgICovXG4gICpbZml4ZWRMZW5ndGhGcmFtZVN5bmNdKGlnbm9yZU5leHRGcmFtZSkge1xuICAgIGxldCBmcmFtZURhdGEgPSB5aWVsZCogdGhpc1tzeW5jRnJhbWVdKCk7XG4gICAgY29uc3QgZnJhbWVMZW5ndGggPSBmcmFtZVN0b3JlLmdldChmcmFtZURhdGEpW2xlbmd0aF07XG5cbiAgICBpZiAoXG4gICAgICBpZ25vcmVOZXh0RnJhbWUgfHxcbiAgICAgIHRoaXMuX2NvZGVjUGFyc2VyLl9mbHVzaGluZyB8fFxuICAgICAgLy8gY2hlY2sgaWYgdGhlcmUgaXMgYSBmcmFtZSByaWdodCBhZnRlciB0aGlzIG9uZVxuICAgICAgKHlpZWxkKiB0aGlzLkhlYWRlcltnZXRIZWFkZXJdKFxuICAgICAgICB0aGlzLl9jb2RlY1BhcnNlcixcbiAgICAgICAgdGhpcy5faGVhZGVyQ2FjaGUsXG4gICAgICAgIGZyYW1lTGVuZ3RoLFxuICAgICAgKSlcbiAgICApIHtcbiAgICAgIHRoaXMuX2hlYWRlckNhY2hlW2VuYWJsZV0oKTsgLy8gc3RhcnQgY2FjaGluZyB3aGVuIHN5bmNlZFxuXG4gICAgICB0aGlzLl9jb2RlY1BhcnNlcltpbmNyZW1lbnRSYXdEYXRhXShmcmFtZUxlbmd0aCk7IC8vIGluY3JlbWVudCB0byB0aGUgbmV4dCBmcmFtZVxuICAgICAgdGhpcy5fY29kZWNQYXJzZXJbbWFwRnJhbWVTdGF0c10oZnJhbWVEYXRhKTtcbiAgICAgIHJldHVybiBmcmFtZURhdGE7XG4gICAgfVxuXG4gICAgdGhpcy5fY29kZWNQYXJzZXJbbG9nV2FybmluZ10oXG4gICAgICBgTWlzc2luZyAke2ZyYW1lfSBhdCAke2ZyYW1lTGVuZ3RofSBieXRlcyBmcm9tIGN1cnJlbnQgcG9zaXRpb24uYCxcbiAgICAgIGBEcm9wcGluZyBjdXJyZW50ICR7ZnJhbWV9IGFuZCB0cnlpbmcgYWdhaW4uYCxcbiAgICApO1xuICAgIHRoaXMuX2hlYWRlckNhY2hlW3Jlc2V0XSgpOyAvLyBmcmFtZSBpcyBpbnZhbGlkIGFuZCBtdXN0IHJlLXN5bmMgYW5kIGNsZWFyIGNhY2hlXG4gICAgdGhpcy5fY29kZWNQYXJzZXJbaW5jcmVtZW50UmF3RGF0YV0oMSk7IC8vIGluY3JlbWVudCB0byBpbnZhbGlkYXRlIHRoZSBjdXJyZW50IGZyYW1lXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/Parser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/aac/AACFrame.js":
/*!**************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/aac/AACFrame.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AACFrame; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecFrame.js */ \"./node_modules/codec-parser/src/codecs/CodecFrame.js\");\n/* harmony import */ var _AACHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AACHeader.js */ \"./node_modules/codec-parser/src/codecs/aac/AACHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\nclass AACFrame extends _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](codecParser, headerCache, readOffset) {\n    return yield* super[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](\n      _AACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n      AACFrame,\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvYWFjL0FBQ0ZyYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUU4Qzs7QUFFSjtBQUNIOztBQUV4Qix1QkFBdUIsc0RBQVU7QUFDaEQsV0FBVyxtREFBUTtBQUNuQix3QkFBd0IsbURBQVE7QUFDaEMsTUFBTSxxREFBUztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvYWFjL0FBQ0ZyYW1lLmpzPzc0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IDIwMjAtMjAyMyBFdGhhbiBIYWxzYWxsXG4gICAgXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgY29kZWMtcGFyc2VyLlxuICAgIFxuICAgIGNvZGVjLXBhcnNlciBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAgICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG4gICAgY29kZWMtcGFyc2VyIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gICAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbiAgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAgICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz5cbiovXG5cbmltcG9ydCB7IGdldEZyYW1lIH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy5qc1wiO1xuXG5pbXBvcnQgQ29kZWNGcmFtZSBmcm9tIFwiLi4vQ29kZWNGcmFtZS5qc1wiO1xuaW1wb3J0IEFBQ0hlYWRlciBmcm9tIFwiLi9BQUNIZWFkZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQUFDRnJhbWUgZXh0ZW5kcyBDb2RlY0ZyYW1lIHtcbiAgc3RhdGljICpbZ2V0RnJhbWVdKGNvZGVjUGFyc2VyLCBoZWFkZXJDYWNoZSwgcmVhZE9mZnNldCkge1xuICAgIHJldHVybiB5aWVsZCogc3VwZXJbZ2V0RnJhbWVdKFxuICAgICAgQUFDSGVhZGVyLFxuICAgICAgQUFDRnJhbWUsXG4gICAgICBjb2RlY1BhcnNlcixcbiAgICAgIGhlYWRlckNhY2hlLFxuICAgICAgcmVhZE9mZnNldCxcbiAgICApO1xuICB9XG5cbiAgY29uc3RydWN0b3IoaGVhZGVyLCBmcmFtZSwgc2FtcGxlcykge1xuICAgIHN1cGVyKGhlYWRlciwgZnJhbWUsIHNhbXBsZXMpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/aac/AACFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/aac/AACHeader.js":
/*!***************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/aac/AACHeader.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AACHeader; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CodecHeader.js */ \"./node_modules/codec-parser/src/codecs/CodecHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://wiki.multimedia.cx/index.php/ADTS\n\nAAAAAAAA AAAABCCD EEFFFFGH HHIJKLMM MMMMMMMM MMMOOOOO OOOOOOPP (QQQQQQQQ QQQQQQQQ)\n\nAACHeader consists of 7 or 9 bytes (without or with CRC).\nLetter  Length (bits)  Description\nA  12  syncword 0xFFF, all bits must be 1\nB  1   MPEG Version: 0 for MPEG-4, 1 for MPEG-2\nC  2   Layer: always 0\nD  1   protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\nE  2   profile, the MPEG-4 Audio Object Type minus 1\nF  4   MPEG-4 Sampling Frequency Index (15 is forbidden)\nG  1   private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\nH  3   MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\nI  1   originality, set to 0 when encoding, ignore when decoding\nJ  1   home, set to 0 when encoding, ignore when decoding\nK  1   copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\nL  1   copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\nM  13  frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\nO  11  Buffer fullness // 0x7FF for VBR\nP  2   Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\nQ  16  CRC if protection absent is 0 \n*/\n\n\n\n\n\n\n\nconst mpegVersionValues = {\n  0b00000000: \"MPEG-4\",\n  0b00001000: \"MPEG-2\",\n};\n\nconst layerValues = {\n  0b00000000: \"valid\",\n  0b00000010: _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad,\n  0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad,\n  0b00000110: _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad,\n};\n\nconst protectionValues = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.sixteenBitCRC,\n  0b00000001: _constants_js__WEBPACK_IMPORTED_MODULE_0__.none,\n};\n\nconst profileValues = {\n  0b00000000: \"AAC Main\",\n  0b01000000: \"AAC LC (Low Complexity)\",\n  0b10000000: \"AAC SSR (Scalable Sample Rate)\",\n  0b11000000: \"AAC LTP (Long Term Prediction)\",\n};\n\nconst sampleRates = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate96000,\n  0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate88200,\n  0b00001000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate64000,\n  0b00001100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate48000,\n  0b00010000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate44100,\n  0b00010100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate32000,\n  0b00011000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate24000,\n  0b00011100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate22050,\n  0b00100000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate16000,\n  0b00100100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate12000,\n  0b00101000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate11025,\n  0b00101100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate8000,\n  0b00110000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate7350,\n  0b00110100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b00111000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b00111100: \"frequency is written explicitly\",\n};\n\n// prettier-ignore\nconst channelModeValues = {\n  0b000000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 0, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"Defined in AOT Specific Config\" },\n  /*\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (front center, front left, front right)'\n  'quadraphonic (front center, front left, front right, rear center)'\n  '5.0 surround (front center, front left, front right, rear left, rear right)'\n  '5.1 surround (front center, front left, front right, rear left, rear right, LFE)'\n  '7.1 surround (front center, front left, front right, side left, side right, rear left, rear right, LFE)'\n  */\n  0b001000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 1, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.monophonic },\n  0b010000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(2,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[0][0]) },\n  0b011000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 3, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(3,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][3]), },\n  0b100000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 4, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(4,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][3],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][4]), },\n  0b101000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 5, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(5,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][3],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0]), },\n  0b110000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 6, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(6,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][3],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0],_constants_js__WEBPACK_IMPORTED_MODULE_0__.lfe), },\n  0b111000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 8, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(8,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][3],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[2][0],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0],_constants_js__WEBPACK_IMPORTED_MODULE_0__.lfe), },\n};\n\nclass AACHeader extends _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least seven bytes. Out of data\n    const data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](7, readOffset);\n\n    // Check header cache\n    const key = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.bytesToString)([\n      data[0],\n      data[1],\n      data[2],\n      (data[3] & 0b11111100) | (data[6] & 0b00000011), // frame length, buffer fullness varies so don't cache it\n    ]);\n    const cachedHeader = headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](key);\n\n    if (!cachedHeader) {\n      // Frame sync (all bits must be set): `11111111|1111`:\n      if (data[0] !== 0xff || data[1] < 0xf0) return null;\n\n      // Byte (2 of 7)\n      // * `1111BCCD`\n      // * `....B...`: MPEG Version: 0 for MPEG-4, 1 for MPEG-2\n      // * `.....CC.`: Layer: always 0\n      // * `.......D`: protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion] = mpegVersionValues[data[1] & 0b00001000];\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer] = layerValues[data[1] & 0b00000110];\n      if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad) return null;\n\n      const protectionBit = data[1] & 0b00000001;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection] = protectionValues[protectionBit];\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = protectionBit ? 7 : 9;\n\n      // Byte (3 of 7)\n      // * `EEFFFFGH`\n      // * `EE......`: profile, the MPEG-4 Audio Object Type minus 1\n      // * `..FFFF..`: MPEG-4 Sampling Frequency Index (15 is forbidden)\n      // * `......G.`: private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profileBits] = data[2] & 0b11000000;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] = data[2] & 0b00111100;\n      const privateBit = data[2] & 0b00000010;\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profile] = profileValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profileBits]];\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] = sampleRates[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits]];\n      if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) return null;\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate] = !!privateBit;\n\n      // Byte (3,4 of 7)\n      // * `.......H|HH......`: MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelModeBits] = ((data[2] << 8) | data[3]) & 0b111000000;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMode] =\n        channelModeValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelModeBits]][_constants_js__WEBPACK_IMPORTED_MODULE_0__.description];\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] = channelModeValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelModeBits]][_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels];\n\n      // Byte (4 of 7)\n      // * `HHIJKLMM`\n      // * `..I.....`: originality, set to 0 when encoding, ignore when decoding\n      // * `...J....`: home, set to 0 when encoding, ignore when decoding\n      // * `....K...`: copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\n      // * `.....L..`: copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal] = !!(data[3] & 0b00100000);\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isHome] = !!(data[3] & 0b00001000);\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightId] = !!(data[3] & 0b00001000);\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightIdStart] = !!(data[3] & 0b00000100);\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitDepth] = 16;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples] = 1024;\n\n      // Byte (7 of 7)\n      // * `......PP` Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.numberAACFrames] = data[6] & 0b00000011;\n\n      {\n        const {\n          length,\n          channelModeBits,\n          profileBits,\n          sampleRateBits,\n          frameLength,\n          samples,\n          numberAACFrames,\n          ...codecUpdateFields\n        } = header;\n        headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.setHeader](key, header, codecUpdateFields);\n      }\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (4,5,6 of 7)\n    // * `.......MM|MMMMMMMM|MMM.....`: frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength] =\n      ((data[3] << 11) | (data[4] << 3) | (data[5] >> 5)) & 0x1fff;\n    if (!header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength]) return null;\n\n    // Byte (6,7 of 7)\n    // * `...OOOOO|OOOOOO..`: Buffer fullness\n    const bufferFullnessBits = ((data[5] << 6) | (data[6] >> 2)) & 0x7ff;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bufferFullness] =\n      bufferFullnessBits === 0x7ff ? \"VBR\" : bufferFullnessBits;\n\n    return new AACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call AACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightId] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightId];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightIdStart] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.copyrightIdStart];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bufferFullness] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bufferFullness];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isHome] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isHome];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.numberAACFrames] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.numberAACFrames];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profile] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profile];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection];\n  }\n\n  get audioSpecificConfig() {\n    // Audio Specific Configuration\n    // * `000EEFFF|F0HHH000`:\n    // * `000EE...|........`: Object Type (profileBit + 1)\n    // * `.....FFF|F.......`: Sample Rate\n    // * `........|.0HHH...`: Channel Configuration\n    // * `........|.....0..`: Frame Length (1024)\n    // * `........|......0.`: does not depend on core coder\n    // * `........|.......0`: Not Extension\n    const header = _globals_js__WEBPACK_IMPORTED_MODULE_3__.headerStore.get(this);\n\n    const audioSpecificConfig =\n      ((header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.profileBits] + 0x40) << 5) |\n      (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] << 5) |\n      (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelModeBits] >> 3);\n\n    const bytes = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array(2);\n    new _constants_js__WEBPACK_IMPORTED_MODULE_0__.dataView(bytes[_constants_js__WEBPACK_IMPORTED_MODULE_0__.buffer]).setUint16(0, audioSpecificConfig, false);\n    return bytes;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvYWFjL0FBQ0hlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0M7QUFDSTtBQW1EdkI7O0FBRWdCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyw4Q0FBRztBQUNqQixjQUFjLDhDQUFHO0FBQ2pCLGNBQWMsOENBQUc7QUFDakI7O0FBRUE7QUFDQSxjQUFjLHdEQUFhO0FBQzNCLGNBQWMsK0NBQUk7QUFDbEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxvREFBUztBQUN2QixjQUFjLG9EQUFTO0FBQ3ZCLGNBQWMsb0RBQVM7QUFDdkIsY0FBYyxvREFBUztBQUN2QixjQUFjLG9EQUFTO0FBQ3ZCLGNBQWMsb0RBQVM7QUFDdkIsY0FBYyxvREFBUztBQUN2QixjQUFjLG9EQUFTO0FBQ3ZCLGNBQWMsb0RBQVM7QUFDdkIsY0FBYyxvREFBUztBQUN2QixjQUFjLG9EQUFTO0FBQ3ZCLGNBQWMsbURBQVE7QUFDdEIsY0FBYyxtREFBUTtBQUN0QixjQUFjLG1EQUFRO0FBQ3RCLGNBQWMsbURBQVE7QUFDdEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLENBQUMsbURBQVEsT0FBTyxzREFBVyxxQ0FBcUM7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLENBQUMsbURBQVEsT0FBTyxzREFBVyxHQUFHLHFEQUFVLEVBQUU7QUFDM0QsaUJBQWlCLENBQUMsbURBQVEsT0FBTyxzREFBVyxHQUFHLGdFQUFpQixHQUFHLDBEQUFlLFNBQVM7QUFDM0YsaUJBQWlCLENBQUMsbURBQVEsT0FBTyxzREFBVyxHQUFHLGdFQUFpQixHQUFHLDBEQUFlLFVBQVU7QUFDNUYsaUJBQWlCLENBQUMsbURBQVEsT0FBTyxzREFBVyxHQUFHLGdFQUFpQixHQUFHLDBEQUFlLE9BQU8sMERBQWUsVUFBVTtBQUNsSCxpQkFBaUIsQ0FBQyxtREFBUSxPQUFPLHNEQUFXLEdBQUcsZ0VBQWlCLEdBQUcsMERBQWUsT0FBTywwREFBZSxVQUFVO0FBQ2xILGlCQUFpQixDQUFDLG1EQUFRLE9BQU8sc0RBQVcsR0FBRyxnRUFBaUIsR0FBRywwREFBZSxPQUFPLDBEQUFlLE9BQU8sOENBQUcsSUFBSTtBQUN0SCxpQkFBaUIsQ0FBQyxtREFBUSxPQUFPLHNEQUFXLEdBQUcsZ0VBQWlCLEdBQUcsMERBQWUsT0FBTywwREFBZSxPQUFPLDBEQUFlLE9BQU8sOENBQUcsSUFBSTtBQUM1STs7QUFFZSx3QkFBd0IsdURBQVc7QUFDbEQsV0FBVyxvREFBUztBQUNwQjs7QUFFQTtBQUNBLG9DQUFvQyxzREFBVzs7QUFFL0M7QUFDQSxnQkFBZ0IsNERBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxvREFBUzs7QUFFOUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNEQUFXOztBQUV4QixhQUFhLGdEQUFLO0FBQ2xCLGlCQUFpQixnREFBSyxNQUFNLDhDQUFHOztBQUUvQjtBQUNBLGFBQWEscURBQVU7QUFDdkIsYUFBYSxpREFBTTs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0RBQVc7QUFDeEIsYUFBYSx5REFBYztBQUMzQjs7QUFFQSxhQUFhLGtEQUFPLHlCQUF5QixzREFBVzs7QUFFeEQsYUFBYSxxREFBVSx1QkFBdUIseURBQWM7QUFDNUQsaUJBQWlCLHFEQUFVLE1BQU0sbURBQVE7O0FBRXpDLGFBQWEsb0RBQVM7O0FBRXRCO0FBQ0E7QUFDQSxhQUFhLDBEQUFlO0FBQzVCLGFBQWEsc0RBQVc7QUFDeEIsaUNBQWlDLDBEQUFlLEdBQUcsc0RBQVc7QUFDOUQsYUFBYSxtREFBUSw2QkFBNkIsMERBQWUsR0FBRyxtREFBUTs7QUFFNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBVTtBQUN2QixhQUFhLGlEQUFNO0FBQ25CLGFBQWEsc0RBQVc7QUFDeEIsYUFBYSwyREFBZ0I7QUFDN0IsYUFBYSxtREFBUTtBQUNyQixhQUFhLGtEQUFPOztBQUVwQjtBQUNBO0FBQ0EsYUFBYSwwREFBZTs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysb0JBQW9CLG9EQUFTO0FBQzdCO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsc0RBQVc7QUFDdEI7QUFDQSxnQkFBZ0Isc0RBQVc7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBLFdBQVcseURBQWM7QUFDekI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxzREFBVyxXQUFXLHNEQUFXO0FBQzFDLFNBQVMsMkRBQWdCLFdBQVcsMkRBQWdCO0FBQ3BELFNBQVMseURBQWMsV0FBVyx5REFBYztBQUNoRCxTQUFTLGlEQUFNLFdBQVcsaURBQU07QUFDaEMsU0FBUyxxREFBVSxXQUFXLHFEQUFVO0FBQ3hDLFNBQVMsb0RBQVMsV0FBVyxvREFBUztBQUN0QyxTQUFTLGdEQUFLLFdBQVcsZ0RBQUs7QUFDOUIsU0FBUyxpREFBTSxXQUFXLGlEQUFNO0FBQ2hDLFNBQVMsc0RBQVcsV0FBVyxzREFBVztBQUMxQyxTQUFTLDBEQUFlLFdBQVcsMERBQWU7QUFDbEQsU0FBUyxrREFBTyxXQUFXLGtEQUFPO0FBQ2xDLFNBQVMscURBQVUsV0FBVyxxREFBVTtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQVc7O0FBRTlCO0FBQ0EsZUFBZSxzREFBVztBQUMxQixjQUFjLHlEQUFjO0FBQzVCLGNBQWMsMERBQWU7O0FBRTdCLHNCQUFzQixxREFBVTtBQUNoQyxRQUFRLG1EQUFRLE9BQU8saURBQU07QUFDN0I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvZGVjcy9hYWMvQUFDSGVhZGVyLmpzPzg1OTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IDIwMjAtMjAyMyBFdGhhbiBIYWxzYWxsXG4gICAgXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgY29kZWMtcGFyc2VyLlxuICAgIFxuICAgIGNvZGVjLXBhcnNlciBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAgICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG4gICAgY29kZWMtcGFyc2VyIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gICAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbiAgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAgICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz5cbiovXG5cbi8qXG5odHRwczovL3dpa2kubXVsdGltZWRpYS5jeC9pbmRleC5waHAvQURUU1xuXG5BQUFBQUFBQSBBQUFBQkNDRCBFRUZGRkZHSCBISElKS0xNTSBNTU1NTU1NTSBNTU1PT09PTyBPT09PT09QUCAoUVFRUVFRUVEgUVFRUVFRUVEpXG5cbkFBQ0hlYWRlciBjb25zaXN0cyBvZiA3IG9yIDkgYnl0ZXMgKHdpdGhvdXQgb3Igd2l0aCBDUkMpLlxuTGV0dGVyICBMZW5ndGggKGJpdHMpICBEZXNjcmlwdGlvblxuQSAgMTIgIHN5bmN3b3JkIDB4RkZGLCBhbGwgYml0cyBtdXN0IGJlIDFcbkIgIDEgICBNUEVHIFZlcnNpb246IDAgZm9yIE1QRUctNCwgMSBmb3IgTVBFRy0yXG5DICAyICAgTGF5ZXI6IGFsd2F5cyAwXG5EICAxICAgcHJvdGVjdGlvbiBhYnNlbnQsIFdhcm5pbmcsIHNldCB0byAxIGlmIHRoZXJlIGlzIG5vIENSQyBhbmQgMCBpZiB0aGVyZSBpcyBDUkNcbkUgIDIgICBwcm9maWxlLCB0aGUgTVBFRy00IEF1ZGlvIE9iamVjdCBUeXBlIG1pbnVzIDFcbkYgIDQgICBNUEVHLTQgU2FtcGxpbmcgRnJlcXVlbmN5IEluZGV4ICgxNSBpcyBmb3JiaWRkZW4pXG5HICAxICAgcHJpdmF0ZSBiaXQsIGd1YXJhbnRlZWQgbmV2ZXIgdG8gYmUgdXNlZCBieSBNUEVHLCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuSCAgMyAgIE1QRUctNCBDaGFubmVsIENvbmZpZ3VyYXRpb24gKGluIHRoZSBjYXNlIG9mIDAsIHRoZSBjaGFubmVsIGNvbmZpZ3VyYXRpb24gaXMgc2VudCB2aWEgYW4gaW5iYW5kIFBDRSlcbkkgIDEgICBvcmlnaW5hbGl0eSwgc2V0IHRvIDAgd2hlbiBlbmNvZGluZywgaWdub3JlIHdoZW4gZGVjb2RpbmdcbkogIDEgICBob21lLCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuSyAgMSAgIGNvcHlyaWdodGVkIGlkIGJpdCwgdGhlIG5leHQgYml0IG9mIGEgY2VudHJhbGx5IHJlZ2lzdGVyZWQgY29weXJpZ2h0IGlkZW50aWZpZXIsIHNldCB0byAwIHdoZW4gZW5jb2RpbmcsIGlnbm9yZSB3aGVuIGRlY29kaW5nXG5MICAxICAgY29weXJpZ2h0IGlkIHN0YXJ0LCBzaWduYWxzIHRoYXQgdGhpcyBmcmFtZSdzIGNvcHlyaWdodCBpZCBiaXQgaXMgdGhlIGZpcnN0IGJpdCBvZiB0aGUgY29weXJpZ2h0IGlkLCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuTSAgMTMgIGZyYW1lIGxlbmd0aCwgdGhpcyB2YWx1ZSBtdXN0IGluY2x1ZGUgNyBvciA5IGJ5dGVzIG9mIGhlYWRlciBsZW5ndGg6IEZyYW1lTGVuZ3RoID0gKFByb3RlY3Rpb25BYnNlbnQgPT0gMSA/IDcgOiA5KSArIHNpemUoQUFDRnJhbWUpXG5PICAxMSAgQnVmZmVyIGZ1bGxuZXNzIC8vIDB4N0ZGIGZvciBWQlJcblAgIDIgICBOdW1iZXIgb2YgQUFDIGZyYW1lcyAoUkRCcykgaW4gQURUUyBmcmFtZSBtaW51cyAxLCBmb3IgbWF4aW11bSBjb21wYXRpYmlsaXR5IGFsd2F5cyB1c2UgMSBBQUMgZnJhbWUgcGVyIEFEVFMgZnJhbWVcblEgIDE2ICBDUkMgaWYgcHJvdGVjdGlvbiBhYnNlbnQgaXMgMCBcbiovXG5cbmltcG9ydCB7IGhlYWRlclN0b3JlIH0gZnJvbSBcIi4uLy4uL2dsb2JhbHMuanNcIjtcbmltcG9ydCB7IGJ5dGVzVG9TdHJpbmcgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzLmpzXCI7XG5pbXBvcnQge1xuICByZXNlcnZlZCxcbiAgYmFkLFxuICBub25lLFxuICBzaXh0ZWVuQml0Q1JDLFxuICByYXRlOTYwMDAsXG4gIHJhdGU4ODIwMCxcbiAgcmF0ZTY0MDAwLFxuICByYXRlNDgwMDAsXG4gIHJhdGU0NDEwMCxcbiAgcmF0ZTMyMDAwLFxuICByYXRlMjQwMDAsXG4gIHJhdGUyMjA1MCxcbiAgcmF0ZTE2MDAwLFxuICByYXRlMTIwMDAsXG4gIHJhdGUxMTAyNSxcbiAgcmF0ZTgwMDAsXG4gIHJhdGU3MzUwLFxuICBjaGFubmVsTWFwcGluZ3MsXG4gIGdldENoYW5uZWxNYXBwaW5nLFxuICBtb25vcGhvbmljLFxuICBsZmUsXG4gIGJpdERlcHRoLFxuICBjaGFubmVsTW9kZSxcbiAgc2FtcGxlUmF0ZSxcbiAgY2hhbm5lbHMsXG4gIGNvcHlyaWdodElkLFxuICBjb3B5cmlnaHRJZFN0YXJ0LFxuICBidWZmZXJGdWxsbmVzcyxcbiAgaXNIb21lLFxuICBpc09yaWdpbmFsLFxuICBpc1ByaXZhdGUsXG4gIGxheWVyLFxuICBsZW5ndGgsXG4gIG1wZWdWZXJzaW9uLFxuICBudW1iZXJBQUNGcmFtZXMsXG4gIHByb2ZpbGUsXG4gIHByb3RlY3Rpb24sXG4gIGZyYW1lTGVuZ3RoLFxuICBkZXNjcmlwdGlvbixcbiAgc2FtcGxlcyxcbiAgc2FtcGxlUmF0ZUJpdHMsXG4gIHByb2ZpbGVCaXRzLFxuICBjaGFubmVsTW9kZUJpdHMsXG4gIGJ1ZmZlcixcbiAgcmVhZFJhd0RhdGEsXG4gIGdldEhlYWRlcixcbiAgc2V0SGVhZGVyLFxuICB1aW50OEFycmF5LFxuICBkYXRhVmlldyxcbn0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy5qc1wiO1xuXG5pbXBvcnQgQ29kZWNIZWFkZXIgZnJvbSBcIi4uL0NvZGVjSGVhZGVyLmpzXCI7XG5cbmNvbnN0IG1wZWdWZXJzaW9uVmFsdWVzID0ge1xuICAwYjAwMDAwMDAwOiBcIk1QRUctNFwiLFxuICAwYjAwMDAxMDAwOiBcIk1QRUctMlwiLFxufTtcblxuY29uc3QgbGF5ZXJWYWx1ZXMgPSB7XG4gIDBiMDAwMDAwMDA6IFwidmFsaWRcIixcbiAgMGIwMDAwMDAxMDogYmFkLFxuICAwYjAwMDAwMTAwOiBiYWQsXG4gIDBiMDAwMDAxMTA6IGJhZCxcbn07XG5cbmNvbnN0IHByb3RlY3Rpb25WYWx1ZXMgPSB7XG4gIDBiMDAwMDAwMDA6IHNpeHRlZW5CaXRDUkMsXG4gIDBiMDAwMDAwMDE6IG5vbmUsXG59O1xuXG5jb25zdCBwcm9maWxlVmFsdWVzID0ge1xuICAwYjAwMDAwMDAwOiBcIkFBQyBNYWluXCIsXG4gIDBiMDEwMDAwMDA6IFwiQUFDIExDIChMb3cgQ29tcGxleGl0eSlcIixcbiAgMGIxMDAwMDAwMDogXCJBQUMgU1NSIChTY2FsYWJsZSBTYW1wbGUgUmF0ZSlcIixcbiAgMGIxMTAwMDAwMDogXCJBQUMgTFRQIChMb25nIFRlcm0gUHJlZGljdGlvbilcIixcbn07XG5cbmNvbnN0IHNhbXBsZVJhdGVzID0ge1xuICAwYjAwMDAwMDAwOiByYXRlOTYwMDAsXG4gIDBiMDAwMDAxMDA6IHJhdGU4ODIwMCxcbiAgMGIwMDAwMTAwMDogcmF0ZTY0MDAwLFxuICAwYjAwMDAxMTAwOiByYXRlNDgwMDAsXG4gIDBiMDAwMTAwMDA6IHJhdGU0NDEwMCxcbiAgMGIwMDAxMDEwMDogcmF0ZTMyMDAwLFxuICAwYjAwMDExMDAwOiByYXRlMjQwMDAsXG4gIDBiMDAwMTExMDA6IHJhdGUyMjA1MCxcbiAgMGIwMDEwMDAwMDogcmF0ZTE2MDAwLFxuICAwYjAwMTAwMTAwOiByYXRlMTIwMDAsXG4gIDBiMDAxMDEwMDA6IHJhdGUxMTAyNSxcbiAgMGIwMDEwMTEwMDogcmF0ZTgwMDAsXG4gIDBiMDAxMTAwMDA6IHJhdGU3MzUwLFxuICAwYjAwMTEwMTAwOiByZXNlcnZlZCxcbiAgMGIwMDExMTAwMDogcmVzZXJ2ZWQsXG4gIDBiMDAxMTExMDA6IFwiZnJlcXVlbmN5IGlzIHdyaXR0ZW4gZXhwbGljaXRseVwiLFxufTtcblxuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCBjaGFubmVsTW9kZVZhbHVlcyA9IHtcbiAgMGIwMDAwMDAwMDA6IHsgW2NoYW5uZWxzXTogMCwgW2Rlc2NyaXB0aW9uXTogXCJEZWZpbmVkIGluIEFPVCBTcGVjaWZpYyBDb25maWdcIiB9LFxuICAvKlxuICAnbW9ub3Bob25pYyAobW9ubyknXG4gICdzdGVyZW8gKGxlZnQsIHJpZ2h0KSdcbiAgJ2xpbmVhciBzdXJyb3VuZCAoZnJvbnQgY2VudGVyLCBmcm9udCBsZWZ0LCBmcm9udCByaWdodCknXG4gICdxdWFkcmFwaG9uaWMgKGZyb250IGNlbnRlciwgZnJvbnQgbGVmdCwgZnJvbnQgcmlnaHQsIHJlYXIgY2VudGVyKSdcbiAgJzUuMCBzdXJyb3VuZCAoZnJvbnQgY2VudGVyLCBmcm9udCBsZWZ0LCBmcm9udCByaWdodCwgcmVhciBsZWZ0LCByZWFyIHJpZ2h0KSdcbiAgJzUuMSBzdXJyb3VuZCAoZnJvbnQgY2VudGVyLCBmcm9udCBsZWZ0LCBmcm9udCByaWdodCwgcmVhciBsZWZ0LCByZWFyIHJpZ2h0LCBMRkUpJ1xuICAnNy4xIHN1cnJvdW5kIChmcm9udCBjZW50ZXIsIGZyb250IGxlZnQsIGZyb250IHJpZ2h0LCBzaWRlIGxlZnQsIHNpZGUgcmlnaHQsIHJlYXIgbGVmdCwgcmVhciByaWdodCwgTEZFKSdcbiAgKi9cbiAgMGIwMDEwMDAwMDA6IHsgW2NoYW5uZWxzXTogMSwgW2Rlc2NyaXB0aW9uXTogbW9ub3Bob25pYyB9LFxuICAwYjAxMDAwMDAwMDogeyBbY2hhbm5lbHNdOiAyLCBbZGVzY3JpcHRpb25dOiBnZXRDaGFubmVsTWFwcGluZygyLGNoYW5uZWxNYXBwaW5nc1swXVswXSkgfSxcbiAgMGIwMTEwMDAwMDA6IHsgW2NoYW5uZWxzXTogMywgW2Rlc2NyaXB0aW9uXTogZ2V0Q2hhbm5lbE1hcHBpbmcoMyxjaGFubmVsTWFwcGluZ3NbMV1bM10pLCB9LFxuICAwYjEwMDAwMDAwMDogeyBbY2hhbm5lbHNdOiA0LCBbZGVzY3JpcHRpb25dOiBnZXRDaGFubmVsTWFwcGluZyg0LGNoYW5uZWxNYXBwaW5nc1sxXVszXSxjaGFubmVsTWFwcGluZ3NbM11bNF0pLCB9LFxuICAwYjEwMTAwMDAwMDogeyBbY2hhbm5lbHNdOiA1LCBbZGVzY3JpcHRpb25dOiBnZXRDaGFubmVsTWFwcGluZyg1LGNoYW5uZWxNYXBwaW5nc1sxXVszXSxjaGFubmVsTWFwcGluZ3NbM11bMF0pLCB9LFxuICAwYjExMDAwMDAwMDogeyBbY2hhbm5lbHNdOiA2LCBbZGVzY3JpcHRpb25dOiBnZXRDaGFubmVsTWFwcGluZyg2LGNoYW5uZWxNYXBwaW5nc1sxXVszXSxjaGFubmVsTWFwcGluZ3NbM11bMF0sbGZlKSwgfSxcbiAgMGIxMTEwMDAwMDA6IHsgW2NoYW5uZWxzXTogOCwgW2Rlc2NyaXB0aW9uXTogZ2V0Q2hhbm5lbE1hcHBpbmcoOCxjaGFubmVsTWFwcGluZ3NbMV1bM10sY2hhbm5lbE1hcHBpbmdzWzJdWzBdLGNoYW5uZWxNYXBwaW5nc1szXVswXSxsZmUpLCB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQUFDSGVhZGVyIGV4dGVuZHMgQ29kZWNIZWFkZXIge1xuICBzdGF0aWMgKltnZXRIZWFkZXJdKGNvZGVjUGFyc2VyLCBoZWFkZXJDYWNoZSwgcmVhZE9mZnNldCkge1xuICAgIGNvbnN0IGhlYWRlciA9IHt9O1xuXG4gICAgLy8gTXVzdCBiZSBhdCBsZWFzdCBzZXZlbiBieXRlcy4gT3V0IG9mIGRhdGFcbiAgICBjb25zdCBkYXRhID0geWllbGQqIGNvZGVjUGFyc2VyW3JlYWRSYXdEYXRhXSg3LCByZWFkT2Zmc2V0KTtcblxuICAgIC8vIENoZWNrIGhlYWRlciBjYWNoZVxuICAgIGNvbnN0IGtleSA9IGJ5dGVzVG9TdHJpbmcoW1xuICAgICAgZGF0YVswXSxcbiAgICAgIGRhdGFbMV0sXG4gICAgICBkYXRhWzJdLFxuICAgICAgKGRhdGFbM10gJiAwYjExMTExMTAwKSB8IChkYXRhWzZdICYgMGIwMDAwMDAxMSksIC8vIGZyYW1lIGxlbmd0aCwgYnVmZmVyIGZ1bGxuZXNzIHZhcmllcyBzbyBkb24ndCBjYWNoZSBpdFxuICAgIF0pO1xuICAgIGNvbnN0IGNhY2hlZEhlYWRlciA9IGhlYWRlckNhY2hlW2dldEhlYWRlcl0oa2V5KTtcblxuICAgIGlmICghY2FjaGVkSGVhZGVyKSB7XG4gICAgICAvLyBGcmFtZSBzeW5jIChhbGwgYml0cyBtdXN0IGJlIHNldCk6IGAxMTExMTExMXwxMTExYDpcbiAgICAgIGlmIChkYXRhWzBdICE9PSAweGZmIHx8IGRhdGFbMV0gPCAweGYwKSByZXR1cm4gbnVsbDtcblxuICAgICAgLy8gQnl0ZSAoMiBvZiA3KVxuICAgICAgLy8gKiBgMTExMUJDQ0RgXG4gICAgICAvLyAqIGAuLi4uQi4uLmA6IE1QRUcgVmVyc2lvbjogMCBmb3IgTVBFRy00LCAxIGZvciBNUEVHLTJcbiAgICAgIC8vICogYC4uLi4uQ0MuYDogTGF5ZXI6IGFsd2F5cyAwXG4gICAgICAvLyAqIGAuLi4uLi4uRGA6IHByb3RlY3Rpb24gYWJzZW50LCBXYXJuaW5nLCBzZXQgdG8gMSBpZiB0aGVyZSBpcyBubyBDUkMgYW5kIDAgaWYgdGhlcmUgaXMgQ1JDXG4gICAgICBoZWFkZXJbbXBlZ1ZlcnNpb25dID0gbXBlZ1ZlcnNpb25WYWx1ZXNbZGF0YVsxXSAmIDBiMDAwMDEwMDBdO1xuXG4gICAgICBoZWFkZXJbbGF5ZXJdID0gbGF5ZXJWYWx1ZXNbZGF0YVsxXSAmIDBiMDAwMDAxMTBdO1xuICAgICAgaWYgKGhlYWRlcltsYXllcl0gPT09IGJhZCkgcmV0dXJuIG51bGw7XG5cbiAgICAgIGNvbnN0IHByb3RlY3Rpb25CaXQgPSBkYXRhWzFdICYgMGIwMDAwMDAwMTtcbiAgICAgIGhlYWRlcltwcm90ZWN0aW9uXSA9IHByb3RlY3Rpb25WYWx1ZXNbcHJvdGVjdGlvbkJpdF07XG4gICAgICBoZWFkZXJbbGVuZ3RoXSA9IHByb3RlY3Rpb25CaXQgPyA3IDogOTtcblxuICAgICAgLy8gQnl0ZSAoMyBvZiA3KVxuICAgICAgLy8gKiBgRUVGRkZGR0hgXG4gICAgICAvLyAqIGBFRS4uLi4uLmA6IHByb2ZpbGUsIHRoZSBNUEVHLTQgQXVkaW8gT2JqZWN0IFR5cGUgbWludXMgMVxuICAgICAgLy8gKiBgLi5GRkZGLi5gOiBNUEVHLTQgU2FtcGxpbmcgRnJlcXVlbmN5IEluZGV4ICgxNSBpcyBmb3JiaWRkZW4pXG4gICAgICAvLyAqIGAuLi4uLi5HLmA6IHByaXZhdGUgYml0LCBndWFyYW50ZWVkIG5ldmVyIHRvIGJlIHVzZWQgYnkgTVBFRywgc2V0IHRvIDAgd2hlbiBlbmNvZGluZywgaWdub3JlIHdoZW4gZGVjb2RpbmdcbiAgICAgIGhlYWRlcltwcm9maWxlQml0c10gPSBkYXRhWzJdICYgMGIxMTAwMDAwMDtcbiAgICAgIGhlYWRlcltzYW1wbGVSYXRlQml0c10gPSBkYXRhWzJdICYgMGIwMDExMTEwMDtcbiAgICAgIGNvbnN0IHByaXZhdGVCaXQgPSBkYXRhWzJdICYgMGIwMDAwMDAxMDtcblxuICAgICAgaGVhZGVyW3Byb2ZpbGVdID0gcHJvZmlsZVZhbHVlc1toZWFkZXJbcHJvZmlsZUJpdHNdXTtcblxuICAgICAgaGVhZGVyW3NhbXBsZVJhdGVdID0gc2FtcGxlUmF0ZXNbaGVhZGVyW3NhbXBsZVJhdGVCaXRzXV07XG4gICAgICBpZiAoaGVhZGVyW3NhbXBsZVJhdGVdID09PSByZXNlcnZlZCkgcmV0dXJuIG51bGw7XG5cbiAgICAgIGhlYWRlcltpc1ByaXZhdGVdID0gISFwcml2YXRlQml0O1xuXG4gICAgICAvLyBCeXRlICgzLDQgb2YgNylcbiAgICAgIC8vICogYC4uLi4uLi5IfEhILi4uLi4uYDogTVBFRy00IENoYW5uZWwgQ29uZmlndXJhdGlvbiAoaW4gdGhlIGNhc2Ugb2YgMCwgdGhlIGNoYW5uZWwgY29uZmlndXJhdGlvbiBpcyBzZW50IHZpYSBhbiBpbmJhbmQgUENFKVxuICAgICAgaGVhZGVyW2NoYW5uZWxNb2RlQml0c10gPSAoKGRhdGFbMl0gPDwgOCkgfCBkYXRhWzNdKSAmIDBiMTExMDAwMDAwO1xuICAgICAgaGVhZGVyW2NoYW5uZWxNb2RlXSA9XG4gICAgICAgIGNoYW5uZWxNb2RlVmFsdWVzW2hlYWRlcltjaGFubmVsTW9kZUJpdHNdXVtkZXNjcmlwdGlvbl07XG4gICAgICBoZWFkZXJbY2hhbm5lbHNdID0gY2hhbm5lbE1vZGVWYWx1ZXNbaGVhZGVyW2NoYW5uZWxNb2RlQml0c11dW2NoYW5uZWxzXTtcblxuICAgICAgLy8gQnl0ZSAoNCBvZiA3KVxuICAgICAgLy8gKiBgSEhJSktMTU1gXG4gICAgICAvLyAqIGAuLkkuLi4uLmA6IG9yaWdpbmFsaXR5LCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuICAgICAgLy8gKiBgLi4uSi4uLi5gOiBob21lLCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuICAgICAgLy8gKiBgLi4uLksuLi5gOiBjb3B5cmlnaHRlZCBpZCBiaXQsIHRoZSBuZXh0IGJpdCBvZiBhIGNlbnRyYWxseSByZWdpc3RlcmVkIGNvcHlyaWdodCBpZGVudGlmaWVyLCBzZXQgdG8gMCB3aGVuIGVuY29kaW5nLCBpZ25vcmUgd2hlbiBkZWNvZGluZ1xuICAgICAgLy8gKiBgLi4uLi5MLi5gOiBjb3B5cmlnaHQgaWQgc3RhcnQsIHNpZ25hbHMgdGhhdCB0aGlzIGZyYW1lJ3MgY29weXJpZ2h0IGlkIGJpdCBpcyB0aGUgZmlyc3QgYml0IG9mIHRoZSBjb3B5cmlnaHQgaWQsIHNldCB0byAwIHdoZW4gZW5jb2RpbmcsIGlnbm9yZSB3aGVuIGRlY29kaW5nXG4gICAgICBoZWFkZXJbaXNPcmlnaW5hbF0gPSAhIShkYXRhWzNdICYgMGIwMDEwMDAwMCk7XG4gICAgICBoZWFkZXJbaXNIb21lXSA9ICEhKGRhdGFbM10gJiAwYjAwMDAxMDAwKTtcbiAgICAgIGhlYWRlcltjb3B5cmlnaHRJZF0gPSAhIShkYXRhWzNdICYgMGIwMDAwMTAwMCk7XG4gICAgICBoZWFkZXJbY29weXJpZ2h0SWRTdGFydF0gPSAhIShkYXRhWzNdICYgMGIwMDAwMDEwMCk7XG4gICAgICBoZWFkZXJbYml0RGVwdGhdID0gMTY7XG4gICAgICBoZWFkZXJbc2FtcGxlc10gPSAxMDI0O1xuXG4gICAgICAvLyBCeXRlICg3IG9mIDcpXG4gICAgICAvLyAqIGAuLi4uLi5QUGAgTnVtYmVyIG9mIEFBQyBmcmFtZXMgKFJEQnMpIGluIEFEVFMgZnJhbWUgbWludXMgMSwgZm9yIG1heGltdW0gY29tcGF0aWJpbGl0eSBhbHdheXMgdXNlIDEgQUFDIGZyYW1lIHBlciBBRFRTIGZyYW1lXG4gICAgICBoZWFkZXJbbnVtYmVyQUFDRnJhbWVzXSA9IGRhdGFbNl0gJiAwYjAwMDAwMDExO1xuXG4gICAgICB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICBsZW5ndGgsXG4gICAgICAgICAgY2hhbm5lbE1vZGVCaXRzLFxuICAgICAgICAgIHByb2ZpbGVCaXRzLFxuICAgICAgICAgIHNhbXBsZVJhdGVCaXRzLFxuICAgICAgICAgIGZyYW1lTGVuZ3RoLFxuICAgICAgICAgIHNhbXBsZXMsXG4gICAgICAgICAgbnVtYmVyQUFDRnJhbWVzLFxuICAgICAgICAgIC4uLmNvZGVjVXBkYXRlRmllbGRzXG4gICAgICAgIH0gPSBoZWFkZXI7XG4gICAgICAgIGhlYWRlckNhY2hlW3NldEhlYWRlcl0oa2V5LCBoZWFkZXIsIGNvZGVjVXBkYXRlRmllbGRzKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgT2JqZWN0LmFzc2lnbihoZWFkZXIsIGNhY2hlZEhlYWRlcik7XG4gICAgfVxuXG4gICAgLy8gQnl0ZSAoNCw1LDYgb2YgNylcbiAgICAvLyAqIGAuLi4uLi4uTU18TU1NTU1NTU18TU1NLi4uLi5gOiBmcmFtZSBsZW5ndGgsIHRoaXMgdmFsdWUgbXVzdCBpbmNsdWRlIDcgb3IgOSBieXRlcyBvZiBoZWFkZXIgbGVuZ3RoOiBGcmFtZUxlbmd0aCA9IChQcm90ZWN0aW9uQWJzZW50ID09IDEgPyA3IDogOSkgKyBzaXplKEFBQ0ZyYW1lKVxuICAgIGhlYWRlcltmcmFtZUxlbmd0aF0gPVxuICAgICAgKChkYXRhWzNdIDw8IDExKSB8IChkYXRhWzRdIDw8IDMpIHwgKGRhdGFbNV0gPj4gNSkpICYgMHgxZmZmO1xuICAgIGlmICghaGVhZGVyW2ZyYW1lTGVuZ3RoXSkgcmV0dXJuIG51bGw7XG5cbiAgICAvLyBCeXRlICg2LDcgb2YgNylcbiAgICAvLyAqIGAuLi5PT09PT3xPT09PT08uLmA6IEJ1ZmZlciBmdWxsbmVzc1xuICAgIGNvbnN0IGJ1ZmZlckZ1bGxuZXNzQml0cyA9ICgoZGF0YVs1XSA8PCA2KSB8IChkYXRhWzZdID4+IDIpKSAmIDB4N2ZmO1xuICAgIGhlYWRlcltidWZmZXJGdWxsbmVzc10gPVxuICAgICAgYnVmZmVyRnVsbG5lc3NCaXRzID09PSAweDdmZiA/IFwiVkJSXCIgOiBidWZmZXJGdWxsbmVzc0JpdHM7XG5cbiAgICByZXR1cm4gbmV3IEFBQ0hlYWRlcihoZWFkZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcml2YXRlXG4gICAqIENhbGwgQUFDSGVhZGVyLmdldEhlYWRlcihBcnJheTxVaW50OD4pIHRvIGdldCBpbnN0YW5jZVxuICAgKi9cbiAgY29uc3RydWN0b3IoaGVhZGVyKSB7XG4gICAgc3VwZXIoaGVhZGVyKTtcblxuICAgIHRoaXNbY29weXJpZ2h0SWRdID0gaGVhZGVyW2NvcHlyaWdodElkXTtcbiAgICB0aGlzW2NvcHlyaWdodElkU3RhcnRdID0gaGVhZGVyW2NvcHlyaWdodElkU3RhcnRdO1xuICAgIHRoaXNbYnVmZmVyRnVsbG5lc3NdID0gaGVhZGVyW2J1ZmZlckZ1bGxuZXNzXTtcbiAgICB0aGlzW2lzSG9tZV0gPSBoZWFkZXJbaXNIb21lXTtcbiAgICB0aGlzW2lzT3JpZ2luYWxdID0gaGVhZGVyW2lzT3JpZ2luYWxdO1xuICAgIHRoaXNbaXNQcml2YXRlXSA9IGhlYWRlcltpc1ByaXZhdGVdO1xuICAgIHRoaXNbbGF5ZXJdID0gaGVhZGVyW2xheWVyXTtcbiAgICB0aGlzW2xlbmd0aF0gPSBoZWFkZXJbbGVuZ3RoXTtcbiAgICB0aGlzW21wZWdWZXJzaW9uXSA9IGhlYWRlclttcGVnVmVyc2lvbl07XG4gICAgdGhpc1tudW1iZXJBQUNGcmFtZXNdID0gaGVhZGVyW251bWJlckFBQ0ZyYW1lc107XG4gICAgdGhpc1twcm9maWxlXSA9IGhlYWRlcltwcm9maWxlXTtcbiAgICB0aGlzW3Byb3RlY3Rpb25dID0gaGVhZGVyW3Byb3RlY3Rpb25dO1xuICB9XG5cbiAgZ2V0IGF1ZGlvU3BlY2lmaWNDb25maWcoKSB7XG4gICAgLy8gQXVkaW8gU3BlY2lmaWMgQ29uZmlndXJhdGlvblxuICAgIC8vICogYDAwMEVFRkZGfEYwSEhIMDAwYDpcbiAgICAvLyAqIGAwMDBFRS4uLnwuLi4uLi4uLmA6IE9iamVjdCBUeXBlIChwcm9maWxlQml0ICsgMSlcbiAgICAvLyAqIGAuLi4uLkZGRnxGLi4uLi4uLmA6IFNhbXBsZSBSYXRlXG4gICAgLy8gKiBgLi4uLi4uLi58LjBISEguLi5gOiBDaGFubmVsIENvbmZpZ3VyYXRpb25cbiAgICAvLyAqIGAuLi4uLi4uLnwuLi4uLjAuLmA6IEZyYW1lIExlbmd0aCAoMTAyNClcbiAgICAvLyAqIGAuLi4uLi4uLnwuLi4uLi4wLmA6IGRvZXMgbm90IGRlcGVuZCBvbiBjb3JlIGNvZGVyXG4gICAgLy8gKiBgLi4uLi4uLi58Li4uLi4uLjBgOiBOb3QgRXh0ZW5zaW9uXG4gICAgY29uc3QgaGVhZGVyID0gaGVhZGVyU3RvcmUuZ2V0KHRoaXMpO1xuXG4gICAgY29uc3QgYXVkaW9TcGVjaWZpY0NvbmZpZyA9XG4gICAgICAoKGhlYWRlcltwcm9maWxlQml0c10gKyAweDQwKSA8PCA1KSB8XG4gICAgICAoaGVhZGVyW3NhbXBsZVJhdGVCaXRzXSA8PCA1KSB8XG4gICAgICAoaGVhZGVyW2NoYW5uZWxNb2RlQml0c10gPj4gMyk7XG5cbiAgICBjb25zdCBieXRlcyA9IG5ldyB1aW50OEFycmF5KDIpO1xuICAgIG5ldyBkYXRhVmlldyhieXRlc1tidWZmZXJdKS5zZXRVaW50MTYoMCwgYXVkaW9TcGVjaWZpY0NvbmZpZywgZmFsc2UpO1xuICAgIHJldHVybiBieXRlcztcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/aac/AACHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/aac/AACParser.js":
/*!***************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/aac/AACParser.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AACParser; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _AACFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AACFrame.js */ \"./node_modules/codec-parser/src/codecs/aac/AACFrame.js\");\n/* harmony import */ var _AACHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AACHeader.js */ \"./node_modules/codec-parser/src/codecs/aac/AACHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\nclass AACParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = _AACFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.Header = _AACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n    onCodec(this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]);\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]() {\n    return \"aac\";\n  }\n\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_3__.parseFrame]() {\n    return yield* this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.fixedLengthFrameSync]();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvYWFjL0FBQ1BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRTZFOztBQUUzQztBQUNHO0FBQ0U7O0FBRXhCLHdCQUF3QixrREFBTTtBQUM3QztBQUNBO0FBQ0EsaUJBQWlCLG9EQUFRO0FBQ3pCLGtCQUFrQixxREFBUzs7QUFFM0IsaUJBQWlCLGdEQUFLO0FBQ3RCOztBQUVBLE9BQU8sZ0RBQUs7QUFDWjtBQUNBOztBQUVBLElBQUkscURBQVU7QUFDZCx1QkFBdUIsK0RBQW9CO0FBQzNDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9zcmMvY29kZWNzL2FhYy9BQUNQYXJzZXIuanM/MzA3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgMjAyMC0yMDIzIEV0aGFuIEhhbHNhbGxcbiAgICBcbiAgICBUaGlzIGZpbGUgaXMgcGFydCBvZiBjb2RlYy1wYXJzZXIuXG4gICAgXG4gICAgY29kZWMtcGFyc2VyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbiAgICBjb2RlYy1wYXJzZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPlxuKi9cblxuaW1wb3J0IHsgY29kZWMsIGZpeGVkTGVuZ3RoRnJhbWVTeW5jLCBwYXJzZUZyYW1lIH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy5qc1wiO1xuXG5pbXBvcnQgUGFyc2VyIGZyb20gXCIuLi9QYXJzZXIuanNcIjtcbmltcG9ydCBBQUNGcmFtZSBmcm9tIFwiLi9BQUNGcmFtZS5qc1wiO1xuaW1wb3J0IEFBQ0hlYWRlciBmcm9tIFwiLi9BQUNIZWFkZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQUFDUGFyc2VyIGV4dGVuZHMgUGFyc2VyIHtcbiAgY29uc3RydWN0b3IoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCBvbkNvZGVjKSB7XG4gICAgc3VwZXIoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlKTtcbiAgICB0aGlzLkZyYW1lID0gQUFDRnJhbWU7XG4gICAgdGhpcy5IZWFkZXIgPSBBQUNIZWFkZXI7XG5cbiAgICBvbkNvZGVjKHRoaXNbY29kZWNdKTtcbiAgfVxuXG4gIGdldCBbY29kZWNdKCkge1xuICAgIHJldHVybiBcImFhY1wiO1xuICB9XG5cbiAgKltwYXJzZUZyYW1lXSgpIHtcbiAgICByZXR1cm4geWllbGQqIHRoaXNbZml4ZWRMZW5ndGhGcmFtZVN5bmNdKCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/aac/AACParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/flac/FLACFrame.js":
/*!****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/flac/FLACFrame.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FLACFrame; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecFrame.js */ \"./node_modules/codec-parser/src/codecs/CodecFrame.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\nclass FLACFrame extends _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static _getFrameFooterCrc16(data) {\n    return (data[data[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] - 2] << 8) + data[data[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] - 1];\n  }\n\n  // check frame footer crc\n  // https://xiph.org/flac/format.html#frame_footer\n  static [_constants_js__WEBPACK_IMPORTED_MODULE_1__.checkFrameFooterCrc16](data) {\n    const expectedCrc16 = FLACFrame._getFrameFooterCrc16(data);\n    const actualCrc16 = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.flacCrc16)(data[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](0, -2));\n\n    return expectedCrc16 === actualCrc16;\n  }\n\n  constructor(data, header, streamInfoValue) {\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamInfo] = streamInfoValue;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc16] = FLACFrame._getFrameFooterCrc16(data);\n\n    super(header, data, _globals_js__WEBPACK_IMPORTED_MODULE_3__.headerStore.get(header)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples]);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvZmxhYy9GTEFDRnJhbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUUrQztBQUNBO0FBUW5CO0FBQ2M7O0FBRTNCLHdCQUF3QixzREFBVTtBQUNqRDtBQUNBLHNCQUFzQixpREFBTSx5QkFBeUIsaURBQU07QUFDM0Q7O0FBRUE7QUFDQTtBQUNBLFVBQVUsZ0VBQXFCO0FBQy9CO0FBQ0Esd0JBQXdCLHdEQUFTLE1BQU0sbURBQVE7O0FBRS9DO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHFEQUFVO0FBQ3JCLFdBQVcsZ0RBQUs7O0FBRWhCLHdCQUF3QixvREFBVyxhQUFhLGtEQUFPO0FBQ3ZEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9zcmMvY29kZWNzL2ZsYWMvRkxBQ0ZyYW1lLmpzP2YwYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IDIwMjAtMjAyMyBFdGhhbiBIYWxzYWxsXG4gICAgXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgY29kZWMtcGFyc2VyLlxuICAgIFxuICAgIGNvZGVjLXBhcnNlciBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAgICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG4gICAgY29kZWMtcGFyc2VyIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gICAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbiAgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAgICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz5cbiovXG5cbmltcG9ydCB7IGhlYWRlclN0b3JlIH0gZnJvbSBcIi4uLy4uL2dsb2JhbHMuanNcIjtcbmltcG9ydCB7IGZsYWNDcmMxNiB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMuanNcIjtcbmltcG9ydCB7XG4gIGxlbmd0aCxcbiAgc3RyZWFtSW5mbyxcbiAgY3JjMTYsXG4gIHNhbXBsZXMsXG4gIHN1YmFycmF5LFxuICBjaGVja0ZyYW1lRm9vdGVyQ3JjMTYsXG59IGZyb20gXCIuLi8uLi9jb25zdGFudHMuanNcIjtcbmltcG9ydCBDb2RlY0ZyYW1lIGZyb20gXCIuLi9Db2RlY0ZyYW1lLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZMQUNGcmFtZSBleHRlbmRzIENvZGVjRnJhbWUge1xuICBzdGF0aWMgX2dldEZyYW1lRm9vdGVyQ3JjMTYoZGF0YSkge1xuICAgIHJldHVybiAoZGF0YVtkYXRhW2xlbmd0aF0gLSAyXSA8PCA4KSArIGRhdGFbZGF0YVtsZW5ndGhdIC0gMV07XG4gIH1cblxuICAvLyBjaGVjayBmcmFtZSBmb290ZXIgY3JjXG4gIC8vIGh0dHBzOi8veGlwaC5vcmcvZmxhYy9mb3JtYXQuaHRtbCNmcmFtZV9mb290ZXJcbiAgc3RhdGljIFtjaGVja0ZyYW1lRm9vdGVyQ3JjMTZdKGRhdGEpIHtcbiAgICBjb25zdCBleHBlY3RlZENyYzE2ID0gRkxBQ0ZyYW1lLl9nZXRGcmFtZUZvb3RlckNyYzE2KGRhdGEpO1xuICAgIGNvbnN0IGFjdHVhbENyYzE2ID0gZmxhY0NyYzE2KGRhdGFbc3ViYXJyYXldKDAsIC0yKSk7XG5cbiAgICByZXR1cm4gZXhwZWN0ZWRDcmMxNiA9PT0gYWN0dWFsQ3JjMTY7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihkYXRhLCBoZWFkZXIsIHN0cmVhbUluZm9WYWx1ZSkge1xuICAgIGhlYWRlcltzdHJlYW1JbmZvXSA9IHN0cmVhbUluZm9WYWx1ZTtcbiAgICBoZWFkZXJbY3JjMTZdID0gRkxBQ0ZyYW1lLl9nZXRGcmFtZUZvb3RlckNyYzE2KGRhdGEpO1xuXG4gICAgc3VwZXIoaGVhZGVyLCBkYXRhLCBoZWFkZXJTdG9yZS5nZXQoaGVhZGVyKVtzYW1wbGVzXSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/flac/FLACFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/flac/FLACHeader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/flac/FLACHeader.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FLACHeader; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CodecHeader.js */ \"./node_modules/codec-parser/src/codecs/CodecHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/flac/format.html\n\nAAAAAAAA AAAAAABC DDDDEEEE FFFFGGGH \n(IIIIIIII...)\n(JJJJJJJJ|JJJJJJJJ)\n(KKKKKKKK|KKKKKKKK)\nLLLLLLLLL\n\nFLAC Frame Header\nLetter  Length (bits)  Description\nA   13  11111111|11111\nB   1   Reserved 0 - mandatory, 1 - reserved\nC   1   Blocking strategy, 0 - fixed, 1 - variable\nD   4   Block size in inter-channel samples\nE   4   Sample rate\nF   4   Channel assignment\nG   3   Sample size in bits\nH   1   Reserved 0 - mandatory, 1 - reserved\nI   ?   if(variable blocksize)\n           <8-56>:\"UTF-8\" coded sample number (decoded number is 36 bits) [4]\n        else\n           <8-48>:\"UTF-8\" coded frame number (decoded number is 31 bits) [4]\nJ   ?   if(blocksize bits == 011x)\n            8/16 bit (blocksize-1)\nK   ?   if(sample rate bits == 11xx)\n            8/16 bit sample rate\nL   8   CRC-8 (polynomial = x^8 + x^2 + x^1 + x^0, initialized with 0) of everything before the crc, including the sync code\n        \n*/\n\n\n\n\n\nconst getFromStreamInfo = \"get from STREAMINFO metadata block\";\n\nconst blockingStrategyValues = {\n  0b00000000: \"Fixed\",\n  0b00000001: \"Variable\",\n};\n\nconst blockSizeValues = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b00010000: 192,\n  // 0b00100000: 576,\n  // 0b00110000: 1152,\n  // 0b01000000: 2304,\n  // 0b01010000: 4608,\n  // 0b01100000: \"8-bit (blocksize-1) from end of header\",\n  // 0b01110000: \"16-bit (blocksize-1) from end of header\",\n  // 0b10000000: 256,\n  // 0b10010000: 512,\n  // 0b10100000: 1024,\n  // 0b10110000: 2048,\n  // 0b11000000: 4096,\n  // 0b11010000: 8192,\n  // 0b11100000: 16384,\n  // 0b11110000: 32768,\n};\nfor (let i = 2; i < 16; i++)\n  blockSizeValues[i << 4] = i < 6 ? 576 * 2 ** (i - 2) : 2 ** i;\n\nconst sampleRateValues = {\n  0b00000000: getFromStreamInfo,\n  0b00000001: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate88200,\n  0b00000010: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate176400,\n  0b00000011: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate192000,\n  0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate8000,\n  0b00000101: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate16000,\n  0b00000110: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate22050,\n  0b00000111: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate24000,\n  0b00001000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate32000,\n  0b00001001: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate44100,\n  0b00001010: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate48000,\n  0b00001011: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate96000,\n  // 0b00001100: \"8-bit sample rate (in kHz) from end of header\",\n  // 0b00001101: \"16-bit sample rate (in Hz) from end of header\",\n  // 0b00001110: \"16-bit sample rate (in tens of Hz) from end of header\",\n  0b00001111: _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad,\n};\n\n/* prettier-ignore */\nconst channelAssignments = {\n  /*'\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (left, right, center)'\n  'quadraphonic (front left, front right, rear left, rear right)'\n  '5.0 surround (front left, front right, front center, rear left, rear right)'\n  '5.1 surround (front left, front right, front center, LFE, rear left, rear right)'\n  '6.1 surround (front left, front right, front center, LFE, rear center, side left, side right)'\n  '7.1 surround (front left, front right, front center, LFE, rear left, rear right, side left, side right)'\n  */\n  0b00000000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 1, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.monophonic},\n  0b00010000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(2,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[0][0])},\n  0b00100000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 3, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(3,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[0][1])},\n  0b00110000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 4, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(4,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][0],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0])},\n  0b01000000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 5, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(5,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][1],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0])},\n  0b01010000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 6, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(6,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][1],_constants_js__WEBPACK_IMPORTED_MODULE_0__.lfe,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0])},\n  0b01100000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 7, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(7,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][1],_constants_js__WEBPACK_IMPORTED_MODULE_0__.lfe,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][4],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[2][0])},\n  0b01110000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 8, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: (0,_constants_js__WEBPACK_IMPORTED_MODULE_0__.getChannelMapping)(8,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[1][1],_constants_js__WEBPACK_IMPORTED_MODULE_0__.lfe,_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[3][0],_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappings[2][0])},\n  0b10000000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${_constants_js__WEBPACK_IMPORTED_MODULE_0__.stereo} (left, diff)`},\n  0b10010000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${_constants_js__WEBPACK_IMPORTED_MODULE_0__.stereo} (diff, right)`},\n  0b10100000: {[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${_constants_js__WEBPACK_IMPORTED_MODULE_0__.stereo} (avg, diff)`},\n  0b10110000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b11000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b11010000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b11100000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b11110000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n}\n\nconst bitDepthValues = {\n  0b00000000: getFromStreamInfo,\n  0b00000010: 8,\n  0b00000100: 12,\n  0b00000110: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b00001000: 16,\n  0b00001010: 20,\n  0b00001100: 24,\n  0b00001110: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n};\n\nclass FLACHeader extends _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  // https://datatracker.ietf.org/doc/html/rfc3629#section-3\n  //    Char. number range  |        UTF-8 octet sequence\n  //    (hexadecimal)    |              (binary)\n  // --------------------+---------------------------------------------\n  // 0000 0000-0000 007F | 0xxxxxxx\n  // 0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n  // 0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n  // 0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n  static _decodeUTF8Int(data) {\n    if (data[0] > 0xfe) {\n      return null; // length byte must have at least one zero as the lsb\n    }\n\n    if (data[0] < 0x80) return { value: data[0], length: 1 };\n\n    // get length by counting the number of msb that are set to 1\n    let length = 1;\n    for (let zeroMask = 0x40; zeroMask & data[0]; zeroMask >>= 1) length++;\n\n    let idx = length - 1,\n      value = 0,\n      shift = 0;\n\n    // sum together the encoded bits in bytes 2 to length\n    // 1110xxxx 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    //    value = [cccccc] | [bbbbbb] | [aaaaaa]\n    for (; idx > 0; shift += 6, idx--) {\n      if ((data[idx] & 0xc0) !== 0x80) {\n        return null; // each byte should have leading 10xxxxxx\n      }\n      value |= (data[idx] & 0x3f) << shift; // add the encoded bits\n    }\n\n    // read the final encoded bits in byte 1\n    //     1110[dddd] 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    // value = [dddd] | [cccccc] | [bbbbbb] | [aaaaaa]\n    value |= (data[idx] & (0x7f >> length)) << shift;\n\n    return { value, length };\n  }\n\n  static [_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderFromUint8Array](data, headerCache) {\n    const codecParserStub = {\n      [_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData]: function* () {\n        return data;\n      },\n    };\n\n    return FLACHeader[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](codecParserStub, headerCache, 0).next().value;\n  }\n\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](codecParser, headerCache, readOffset) {\n    // Must be at least 6 bytes.\n    let data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](6, readOffset);\n\n    // Bytes (1-2 of 6)\n    // * `11111111|111110..`: Frame sync\n    // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n    if (data[0] !== 0xff || !(data[1] === 0xf8 || data[1] === 0xf9)) {\n      return null;\n    }\n\n    const header = {};\n\n    // Check header cache\n    const key = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.bytesToString)(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, 4));\n    const cachedHeader = headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](key);\n\n    if (!cachedHeader) {\n      // Byte (2 of 6)\n      // * `.......C`: Blocking strategy, 0 - fixed, 1 - variable\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategyBits] = data[1] & 0b00000001;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategy] =\n        blockingStrategyValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategyBits]];\n\n      // Byte (3 of 6)\n      // * `DDDD....`: Block size in inter-channel samples\n      // * `....EEEE`: Sample rate\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSizeBits] = data[2] & 0b11110000;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] = data[2] & 0b00001111;\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize] = blockSizeValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSizeBits]];\n      if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) {\n        return null;\n      }\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] = sampleRateValues[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits]];\n      if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad) {\n        return null;\n      }\n\n      // Byte (4 of 6)\n      // * `FFFF....`: Channel assignment\n      // * `....GGG.`: Sample size in bits\n      // * `.......H`: Reserved 0 - mandatory, 1 - reserved\n      if (data[3] & 0b00000001) {\n        return null;\n      }\n\n      const channelAssignment = channelAssignments[data[3] & 0b11110000];\n      if (channelAssignment === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) {\n        return null;\n      }\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] = channelAssignment[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels];\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMode] = channelAssignment[_constants_js__WEBPACK_IMPORTED_MODULE_0__.description];\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitDepth] = bitDepthValues[data[3] & 0b00001110];\n      if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitDepth] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) {\n        return null;\n      }\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (5...)\n    // * `IIIIIIII|...`: VBR block size ? sample number : frame number\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = 5;\n\n    // check if there is enough data to parse UTF8\n    data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] + 8, readOffset);\n\n    const decodedUtf8 = FLACHeader._decodeUTF8Int(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](4));\n    if (!decodedUtf8) {\n      return null;\n    }\n\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategyBits]) {\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleNumber] = decodedUtf8.value;\n    } else {\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameNumber] = decodedUtf8.value;\n    }\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += decodedUtf8[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n\n    // Byte (...)\n    // * `JJJJJJJJ|(JJJJJJJJ)`: Blocksize (8/16bit custom value)\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSizeBits] === 0b01100000) {\n      // 8 bit\n      if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n        data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize] = data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] + 1;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += 1;\n    } else if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSizeBits] === 0b01110000) {\n      // 16 bit\n      if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n        data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize] =\n        (data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] << 8) + data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]] + 1;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += 2;\n    }\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize];\n\n    // Byte (...)\n    // * `KKKKKKKK|(KKKKKKKK)`: Sample rate (8/16bit custom value)\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] === 0b00001100) {\n      // 8 bit\n      if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n        data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] = data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] * 1000;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += 1;\n    } else if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] === 0b00001101) {\n      // 16 bit\n      if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n        data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] =\n        (data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] << 8) + data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]];\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += 2;\n    } else if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRateBits] === 0b00001110) {\n      // 16 bit\n      if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n        data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] =\n        ((data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] << 8) + data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]]) * 10;\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] += 2;\n    }\n\n    // Byte (...)\n    // * `LLLLLLLL`: CRC-8\n    if (data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n      data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.crc] = data[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1];\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.crc] !== (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.crc8)(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1))) {\n      return null;\n    }\n\n    {\n      if (!cachedHeader) {\n        const {\n          blockingStrategyBits,\n          frameNumber,\n          sampleNumber,\n          samples,\n          sampleRateBits,\n          blockSizeBits,\n          crc,\n          length,\n          ...codecUpdateFields\n        } = header;\n        headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.setHeader](key, header, codecUpdateFields);\n      }\n    }\n    return new FLACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call FLACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.crc16] = null; // set in FLACFrame\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategy] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockingStrategy];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.blockSize];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameNumber];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleNumber];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamInfo] = null; // set during ogg parsing\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/flac/FLACHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/flac/FLACParser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/flac/FLACParser.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FLACParser; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _FLACFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FLACFrame.js */ \"./node_modules/codec-parser/src/codecs/flac/FLACFrame.js\");\n/* harmony import */ var _FLACHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FLACHeader.js */ \"./node_modules/codec-parser/src/codecs/flac/FLACHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\nconst MIN_FLAC_FRAME_SIZE = 2;\nconst MAX_FLAC_FRAME_SIZE = 512 * 1024;\n\nclass FLACParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = _FLACFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.Header = _FLACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n    onCodec(this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]);\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]() {\n    return \"flac\";\n  }\n\n  *_getNextFrameSyncOffset(offset) {\n    const data = yield* this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.readRawData](2, 0);\n    const dataLength = data[_constants_js__WEBPACK_IMPORTED_MODULE_3__.length] - 2;\n\n    while (offset < dataLength) {\n      // * `11111111|111110..`: Frame sync\n      // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n      const firstByte = data[offset];\n      if (firstByte === 0xff) {\n        const secondByte = data[offset + 1];\n        if (secondByte === 0xf8 || secondByte === 0xf9) break;\n        if (secondByte !== 0xff) offset++; // might as well check for the next sync byte\n      }\n      offset++;\n    }\n\n    return offset;\n  }\n\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_3__.parseFrame]() {\n    // find the first valid frame header\n    do {\n      const header = yield* _FLACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_3__.getHeader](\n        this._codecParser,\n        this._headerCache,\n        0,\n      );\n\n      if (header) {\n        // found a valid frame header\n        // find the next valid frame header\n        let nextHeaderOffset =\n          _globals_js__WEBPACK_IMPORTED_MODULE_4__.headerStore.get(header)[_constants_js__WEBPACK_IMPORTED_MODULE_3__.length] + MIN_FLAC_FRAME_SIZE;\n\n        while (nextHeaderOffset <= MAX_FLAC_FRAME_SIZE) {\n          if (\n            this._codecParser._flushing ||\n            (yield* _FLACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_3__.getHeader](\n              this._codecParser,\n              this._headerCache,\n              nextHeaderOffset,\n            ))\n          ) {\n            // found a valid next frame header\n            let frameData = yield* this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.readRawData](\n              nextHeaderOffset,\n            );\n\n            if (!this._codecParser._flushing)\n              frameData = frameData[_constants_js__WEBPACK_IMPORTED_MODULE_3__.subarray](0, nextHeaderOffset);\n\n            // check that this is actually the next header by validating the frame footer crc16\n            if (_FLACFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_3__.checkFrameFooterCrc16](frameData)) {\n              // both frame headers, and frame footer crc16 are valid, we are synced (odds are pretty low of a false positive)\n              const frame = new _FLACFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](frameData, header);\n\n              this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_3__.enable](); // start caching when synced\n              this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.incrementRawData](nextHeaderOffset); // increment to the next frame\n              this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.mapFrameStats](frame);\n\n              return frame;\n            }\n          }\n\n          nextHeaderOffset = yield* this._getNextFrameSyncOffset(\n            nextHeaderOffset + 1,\n          );\n        }\n\n        this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.logWarning](\n          `Unable to sync FLAC frame after searching ${nextHeaderOffset} bytes.`,\n        );\n        this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.incrementRawData](nextHeaderOffset);\n      } else {\n        // not synced, increment data to continue syncing\n        this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.incrementRawData](\n          yield* this._getNextFrameSyncOffset(1),\n        );\n      }\n    } while (true);\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_3__.parseOggPage](oggPage) {\n    if (oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.pageSequenceNumber] === 0) {\n      // Identification header\n\n      this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_3__.enable]();\n      this._streamInfo = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.data][_constants_js__WEBPACK_IMPORTED_MODULE_3__.subarray](13);\n    } else if (oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.pageSequenceNumber] === 1) {\n      // Vorbis comments\n    } else {\n      oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codecFrames] = _globals_js__WEBPACK_IMPORTED_MODULE_4__.frameStore\n        .get(oggPage)\n        [_constants_js__WEBPACK_IMPORTED_MODULE_3__.segments].map((segment) => {\n          const header = _FLACHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_3__.getHeaderFromUint8Array](\n            segment,\n            this._headerCache,\n          );\n\n          if (header) {\n            return new _FLACFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](segment, header, this._streamInfo);\n          } else {\n            this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.logWarning](\n              \"Failed to parse Ogg FLAC frame\",\n              \"Skipping invalid FLAC frame\",\n            );\n          }\n        })\n        .filter((frame) => !!frame);\n    }\n\n    return oggPage;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/flac/FLACParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js":
/*!****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MPEGFrame; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecFrame.js */ \"./node_modules/codec-parser/src/codecs/CodecFrame.js\");\n/* harmony import */ var _MPEGHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MPEGHeader.js */ \"./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\nclass MPEGFrame extends _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](codecParser, headerCache, readOffset) {\n    return yield* super[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](\n      _MPEGHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n      MPEGFrame,\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvbXBlZy9NUEVHRnJhbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRThDOztBQUVKO0FBQ0Q7O0FBRTFCLHdCQUF3QixzREFBVTtBQUNqRCxXQUFXLG1EQUFRO0FBQ25CLHdCQUF3QixtREFBUTtBQUNoQyxNQUFNLHNEQUFVO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvbXBlZy9NUEVHRnJhbWUuanM/YzViOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgMjAyMC0yMDIzIEV0aGFuIEhhbHNhbGxcbiAgICBcbiAgICBUaGlzIGZpbGUgaXMgcGFydCBvZiBjb2RlYy1wYXJzZXIuXG4gICAgXG4gICAgY29kZWMtcGFyc2VyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbiAgICBjb2RlYy1wYXJzZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPlxuKi9cblxuaW1wb3J0IHsgZ2V0RnJhbWUgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzLmpzXCI7XG5cbmltcG9ydCBDb2RlY0ZyYW1lIGZyb20gXCIuLi9Db2RlY0ZyYW1lLmpzXCI7XG5pbXBvcnQgTVBFR0hlYWRlciBmcm9tIFwiLi9NUEVHSGVhZGVyLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1QRUdGcmFtZSBleHRlbmRzIENvZGVjRnJhbWUge1xuICBzdGF0aWMgKltnZXRGcmFtZV0oY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCByZWFkT2Zmc2V0KSB7XG4gICAgcmV0dXJuIHlpZWxkKiBzdXBlcltnZXRGcmFtZV0oXG4gICAgICBNUEVHSGVhZGVyLFxuICAgICAgTVBFR0ZyYW1lLFxuICAgICAgY29kZWNQYXJzZXIsXG4gICAgICBoZWFkZXJDYWNoZSxcbiAgICAgIHJlYWRPZmZzZXQsXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGhlYWRlciwgZnJhbWUsIHNhbXBsZXMpIHtcbiAgICBzdXBlcihoZWFkZXIsIGZyYW1lLCBzYW1wbGVzKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MPEGHeader; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _metadata_ID3v2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../metadata/ID3v2.js */ \"./node_modules/codec-parser/src/metadata/ID3v2.js\");\n/* harmony import */ var _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CodecHeader.js */ \"./node_modules/codec-parser/src/codecs/CodecHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\n// http://www.mp3-tech.org/programmer/frame_header.html\n\nconst bitrateMatrix = {\n  // bits | V1,L1 | V1,L2 | V1,L3 | V2,L1 | V2,L2 & L3\n  0b00000000: [_constants_js__WEBPACK_IMPORTED_MODULE_0__.free, _constants_js__WEBPACK_IMPORTED_MODULE_0__.free, _constants_js__WEBPACK_IMPORTED_MODULE_0__.free, _constants_js__WEBPACK_IMPORTED_MODULE_0__.free, _constants_js__WEBPACK_IMPORTED_MODULE_0__.free],\n  0b00010000: [32, 32, 32, 32, 8],\n  // 0b00100000: [64,   48,  40,  48,  16,],\n  // 0b00110000: [96,   56,  48,  56,  24,],\n  // 0b01000000: [128,  64,  56,  64,  32,],\n  // 0b01010000: [160,  80,  64,  80,  40,],\n  // 0b01100000: [192,  96,  80,  96,  48,],\n  // 0b01110000: [224, 112,  96, 112,  56,],\n  // 0b10000000: [256, 128, 112, 128,  64,],\n  // 0b10010000: [288, 160, 128, 144,  80,],\n  // 0b10100000: [320, 192, 160, 160,  96,],\n  // 0b10110000: [352, 224, 192, 176, 112,],\n  // 0b11000000: [384, 256, 224, 192, 128,],\n  // 0b11010000: [416, 320, 256, 224, 144,],\n  // 0b11100000: [448, 384, 320, 256, 160,],\n  0b11110000: [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bad, _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad, _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad, _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad, _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad],\n};\n\nconst calcBitrate = (idx, interval, intervalOffset) =>\n  8 *\n    (((idx + intervalOffset) % interval) + interval) *\n    (1 << ((idx + intervalOffset) / interval)) -\n  8 * interval * ((interval / 8) | 0);\n\n// generate bitrate matrix\nfor (let i = 2; i < 15; i++)\n  bitrateMatrix[i << 4] = [\n    i * 32, //                V1,L1\n    calcBitrate(i, 4, 0), //  V1,L2\n    calcBitrate(i, 4, -1), // V1,L3\n    calcBitrate(i, 8, 4), //  V2,L1\n    calcBitrate(i, 8, 0), //  V2,L2 & L3\n  ];\n\nconst v1Layer1 = 0;\nconst v1Layer2 = 1;\nconst v1Layer3 = 2;\nconst v2Layer1 = 3;\nconst v2Layer23 = 4;\n\nconst bands = \"bands \";\nconst to31 = \" to 31\";\nconst layer12ModeExtensions = {\n  0b00000000: bands + 4 + to31,\n  0b00010000: bands + 8 + to31,\n  0b00100000: bands + 12 + to31,\n  0b00110000: bands + 16 + to31,\n};\n\nconst bitrateIndex = \"bitrateIndex\";\nconst v2 = \"v2\";\nconst v1 = \"v1\";\n\nconst intensityStereo = \"Intensity stereo \";\nconst msStereo = \", MS stereo \";\nconst on = \"on\";\nconst off = \"off\";\nconst layer3ModeExtensions = {\n  0b00000000: intensityStereo + off + msStereo + off,\n  0b00010000: intensityStereo + on + msStereo + off,\n  0b00100000: intensityStereo + off + msStereo + on,\n  0b00110000: intensityStereo + on + msStereo + on,\n};\n\nconst layersValues = {\n  0b00000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved },\n  0b00000010: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"Layer III\",\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding]: 1,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension]: layer3ModeExtensions,\n    [v1]: {\n      [bitrateIndex]: v1Layer3,\n      [_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples]: 1152,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer23,\n      [_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples]: 576,\n    },\n  },\n  0b00000100: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"Layer II\",\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding]: 1,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension]: layer12ModeExtensions,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples]: 1152,\n    [v1]: {\n      [bitrateIndex]: v1Layer2,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer23,\n    },\n  },\n  0b00000110: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"Layer I\",\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding]: 4,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension]: layer12ModeExtensions,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples]: 384,\n    [v1]: {\n      [bitrateIndex]: v1Layer1,\n    },\n    [v2]: {\n      [bitrateIndex]: v2Layer1,\n    },\n  },\n};\n\nconst mpegVersionDescription = \"MPEG Version \";\nconst isoIec = \"ISO/IEC \";\nconst mpegVersions = {\n  0b00000000: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${mpegVersionDescription}2.5 (later extension of MPEG 2)`,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer]: v2,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate]: {\n      0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate11025,\n      0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate12000,\n      0b00001000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate8000,\n      0b00001100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n    },\n  },\n  0b00001000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved },\n  0b00010000: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${mpegVersionDescription}2 (${isoIec}13818-3)`,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer]: v2,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate]: {\n      0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate22050,\n      0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate24000,\n      0b00001000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate16000,\n      0b00001100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n    },\n  },\n  0b00011000: {\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: `${mpegVersionDescription}1 (${isoIec}11172-3)`,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer]: v1,\n    [_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate]: {\n      0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate44100,\n      0b00000100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate48000,\n      0b00001000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate32000,\n      0b00001100: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n    },\n  },\n  length: _constants_js__WEBPACK_IMPORTED_MODULE_0__.length,\n};\n\nconst protectionValues = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.sixteenBitCRC,\n  0b00000001: _constants_js__WEBPACK_IMPORTED_MODULE_0__.none,\n};\n\nconst emphasisValues = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.none,\n  0b00000001: \"50/15 ms\",\n  0b00000010: _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved,\n  0b00000011: \"CCIT J.17\",\n};\n\nconst channelModes = {\n  0b00000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.stereo },\n  0b01000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"joint \" + _constants_js__WEBPACK_IMPORTED_MODULE_0__.stereo },\n  0b10000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 2, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: \"dual channel\" },\n  0b11000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels]: 1, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.description]: _constants_js__WEBPACK_IMPORTED_MODULE_0__.monophonic },\n};\n\nclass MPEGHeader extends _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // check for id3 header\n    const id3v2Header = yield* _metadata_ID3v2_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getID3v2Header(\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (id3v2Header) {\n      // throw away the data. id3 parsing is not implemented yet.\n      yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](id3v2Header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset);\n      codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.incrementRawData](id3v2Header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]);\n    }\n\n    // Must be at least four bytes.\n    const data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](4, readOffset);\n\n    // Check header cache\n    const key = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_3__.bytesToString)(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, 4));\n    const cachedHeader = headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](key);\n    if (cachedHeader) return new MPEGHeader(cachedHeader);\n\n    // Frame sync (all bits must be set): `11111111|111`:\n    if (data[0] !== 0xff || data[1] < 0xe0) return null;\n\n    // Byte (2 of 4)\n    // * `111BBCCD`\n    // * `...BB...`: MPEG Audio version ID\n    // * `.....CC.`: Layer description\n    // * `.......D`: Protection bit (0 - Protected by CRC (16bit CRC follows header), 1 = Not protected)\n\n    // Mpeg version (1, 2, 2.5)\n    const mpegVersionValues = mpegVersions[data[1] & 0b00011000];\n    if (mpegVersionValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.description] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) return null;\n\n    // Layer (I, II, III)\n    const layerBits = data[1] & 0b00000110;\n    if (layersValues[layerBits][_constants_js__WEBPACK_IMPORTED_MODULE_0__.description] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) return null;\n    const layerValues = {\n      ...layersValues[layerBits],\n      ...layersValues[layerBits][mpegVersionValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer]],\n    };\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion] = mpegVersionValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.description];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer] = layerValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.description];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples] = layerValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection] = protectionValues[data[1] & 0b00000001];\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = 4;\n\n    // Byte (3 of 4)\n    // * `EEEEFFGH`\n    // * `EEEE....`: Bitrate index. 1111 is invalid, everything else is accepted\n    // * `....FF..`: Sample rate\n    // * `......G.`: Padding bit, 0=frame not padded, 1=frame padded\n    // * `.......H`: Private bit.\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitrate] =\n      bitrateMatrix[data[2] & 0b11110000][layerValues[bitrateIndex]];\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitrate] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.bad) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] = mpegVersionValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate][data[2] & 0b00001100];\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding] = data[2] & 0b00000010 && layerValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate] = !!(data[2] & 0b00000001);\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength] = Math.floor(\n      (125 * header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitrate] * header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.samples]) / header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] +\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding],\n    );\n    if (!header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength]) return null;\n\n    // Byte (4 of 4)\n    // * `IIJJKLMM`\n    // * `II......`: Channel mode\n    // * `..JJ....`: Mode extension (only if joint stereo)\n    // * `....K...`: Copyright\n    // * `.....L..`: Original\n    // * `......MM`: Emphasis\n    const channelModeBits = data[3] & 0b11000000;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMode] = channelModes[channelModeBits][_constants_js__WEBPACK_IMPORTED_MODULE_0__.description];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] = channelModes[channelModeBits][_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels];\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension] = layerValues[_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension][data[3] & 0b00110000];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isCopyrighted] = !!(data[3] & 0b00001000);\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal] = !!(data[3] & 0b00000100);\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.emphasis] = emphasisValues[data[3] & 0b00000011];\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.emphasis] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.reserved) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitDepth] = 16;\n\n    // set header cache\n    {\n      const { length, frameLength, samples, ...codecUpdateFields } = header;\n\n      headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.setHeader](key, header, codecUpdateFields);\n    }\n    return new MPEGHeader(header);\n  }\n\n  /**\n   * @private\n   * Call MPEGHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitrate] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitrate];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.emphasis] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.emphasis];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.framePadding];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isCopyrighted] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isCopyrighted];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isOriginal];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isPrivate];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.layer];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.modeExtension];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mpegVersion];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.protection];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MPEGParser; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _MPEGFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MPEGFrame.js */ \"./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js\");\n/* harmony import */ var _MPEGHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MPEGHeader.js */ \"./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\nclass MPEGParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = _MPEGFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.Header = _MPEGHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n    onCodec(this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]);\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]() {\n    return _constants_js__WEBPACK_IMPORTED_MODULE_3__.mpeg;\n  }\n\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_3__.parseFrame]() {\n    return yield* this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.fixedLengthFrameSync]();\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3MvbXBlZy9NUEVHUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFPNEI7O0FBRU07QUFDSztBQUNFOztBQUUxQix5QkFBeUIsa0RBQU07QUFDOUM7QUFDQTtBQUNBLGlCQUFpQixxREFBUztBQUMxQixrQkFBa0Isc0RBQVU7O0FBRTVCLGlCQUFpQixnREFBSztBQUN0Qjs7QUFFQSxPQUFPLGdEQUFLO0FBQ1osV0FBVywrQ0FBSTtBQUNmOztBQUVBLElBQUkscURBQVU7QUFDZCx1QkFBdUIsK0RBQW9CO0FBQzNDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9zcmMvY29kZWNzL21wZWcvTVBFR1BhcnNlci5qcz9lNWJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQge1xuICBjb2RlYyxcbiAgbXBlZyxcbiAgZml4ZWRMZW5ndGhGcmFtZVN5bmMsXG4gIHBhcnNlRnJhbWUsXG59IGZyb20gXCIuLi8uLi9jb25zdGFudHMuanNcIjtcblxuaW1wb3J0IFBhcnNlciBmcm9tIFwiLi4vUGFyc2VyLmpzXCI7XG5pbXBvcnQgTVBFR0ZyYW1lIGZyb20gXCIuL01QRUdGcmFtZS5qc1wiO1xuaW1wb3J0IE1QRUdIZWFkZXIgZnJvbSBcIi4vTVBFR0hlYWRlci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNUEVHUGFyc2VyIGV4dGVuZHMgUGFyc2VyIHtcbiAgY29uc3RydWN0b3IoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCBvbkNvZGVjKSB7XG4gICAgc3VwZXIoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlKTtcbiAgICB0aGlzLkZyYW1lID0gTVBFR0ZyYW1lO1xuICAgIHRoaXMuSGVhZGVyID0gTVBFR0hlYWRlcjtcblxuICAgIG9uQ29kZWModGhpc1tjb2RlY10pO1xuICB9XG5cbiAgZ2V0IFtjb2RlY10oKSB7XG4gICAgcmV0dXJuIG1wZWc7XG4gIH1cblxuICAqW3BhcnNlRnJhbWVdKCkge1xuICAgIHJldHVybiB5aWVsZCogdGhpc1tmaXhlZExlbmd0aEZyYW1lU3luY10oKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/opus/OpusFrame.js":
/*!****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/opus/OpusFrame.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OpusFrame; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecFrame.js */ \"./node_modules/codec-parser/src/codecs/CodecFrame.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\nclass OpusFrame extends _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(data, header) {\n    super(\n      header,\n      data,\n      ((header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameSize] * header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameCount]) / 1000) * header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate],\n    );\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3Mvb3B1cy9PcHVzRnJhbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFdUU7QUFDN0I7O0FBRTNCLHdCQUF3QixzREFBVTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVMsV0FBVyxxREFBVSxvQkFBb0IscURBQVU7QUFDM0U7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvZGVjcy9vcHVzL09wdXNGcmFtZS5qcz8wNGExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQgeyBzYW1wbGVSYXRlLCBmcmFtZUNvdW50LCBmcmFtZVNpemUgfSBmcm9tIFwiLi4vLi4vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgQ29kZWNGcmFtZSBmcm9tIFwiLi4vQ29kZWNGcmFtZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHVzRnJhbWUgZXh0ZW5kcyBDb2RlY0ZyYW1lIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgaGVhZGVyKSB7XG4gICAgc3VwZXIoXG4gICAgICBoZWFkZXIsXG4gICAgICBkYXRhLFxuICAgICAgKChoZWFkZXJbZnJhbWVTaXplXSAqIGhlYWRlcltmcmFtZUNvdW50XSkgLyAxMDAwKSAqIGhlYWRlcltzYW1wbGVSYXRlXSxcbiAgICApO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/opus/OpusFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/opus/OpusHeader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/opus/OpusHeader.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OpusHeader; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../CodecHeader.js */ \"./node_modules/codec-parser/src/codecs/CodecHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://tools.ietf.org/html/rfc7845.html\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'O'      |      'p'      |      'u'      |      's'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'H'      |      'e'      |      'a'      |      'd'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Version = 1  | Channel Count |           Pre-skip            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Input Sample Rate (Hz)                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Output Gain (Q7.8 in dB)    | Mapping Family|               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               :\n|                                                               |\n:               Optional Channel Mapping Table...               :\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLetter  Length (bits)  Description\nA  64  Magic Signature - OpusHead\nB  8   Version number - 00000001\nC  8   Output channel count (unsigned)\nD  16  Pre-skip (unsigned, little endian)\nE  32  Sample rate (unsigned, little endian)\nF  16  Output Gain (signed, little endian)\nG  8   Channel Mapping family (unsigned)\n\n// if(channel mapping !== 0)\nH  8   Stream count (unsigned)\nI  8   Coupled Stream Count (unsigned)\nJ  8*C Channel Mapping\n*/\n\n\n\n\n\n\n/* prettier-ignore */\nconst channelMappingFamilies = {\n  0b00000000: _constants_js__WEBPACK_IMPORTED_MODULE_0__.vorbisOpusChannelMapping.slice(0,2),\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    */\n  0b00000001: _constants_js__WEBPACK_IMPORTED_MODULE_0__.vorbisOpusChannelMapping\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    2: \"linear surround (left, center, right)\"\n    3: \"quadraphonic (front left, front right, rear left, rear right)\"\n    4: \"5.0 surround (front left, front center, front right, rear left, rear right)\"\n    5: \"5.1 surround (front left, front center, front right, rear left, rear right, LFE)\"\n    6: \"6.1 surround (front left, front center, front right, side left, side right, rear center, LFE)\"\n    7: \"7.1 surround (front left, front center, front right, side left, side right, rear left, rear right, LFE)\"\n    */\n  // additional channel mappings are user defined\n};\n\nconst silkOnly = \"SILK-only\";\nconst celtOnly = \"CELT-only\";\nconst hybrid = \"Hybrid\";\n\nconst narrowBand = \"narrowband\";\nconst mediumBand = \"medium-band\";\nconst wideBand = \"wideband\";\nconst superWideBand = \"super-wideband\";\nconst fullBand = \"fullband\";\n\n//  0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// | config  |s| c |\n// +-+-+-+-+-+-+-+-+\n// prettier-ignore\nconst configTable = {\n  0b00000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b00001000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b00010000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 40 },\n  0b00011000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 60 },\n  0b00100000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: mediumBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b00101000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: mediumBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b00110000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: mediumBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 40 },\n  0b00111000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: mediumBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 60 },\n  0b01000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b01001000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b01010000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 40 },\n  0b01011000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: silkOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 60 },\n  0b01100000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: hybrid, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b01101000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: hybrid, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b01110000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: hybrid, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b01111000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: hybrid, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b10000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 2.5 },\n  0b10001000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 5 },\n  0b10010000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b10011000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: narrowBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b10100000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 2.5 },\n  0b10101000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 5 },\n  0b10110000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b10111000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: wideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b11000000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 2.5 },\n  0b11001000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 5 },\n  0b11010000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b11011000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: superWideBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n  0b11100000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 2.5 },\n  0b11101000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 5 },\n  0b11110000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 10 },\n  0b11111000: { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode]: celtOnly, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth]: fullBand, [_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize]: 20 },\n};\n\nclass OpusHeader extends _CodecHeader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  static [_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderFromUint8Array](dataValue, packetData, headerCache) {\n    const header = {};\n\n    // get length of header\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] = dataValue[9];\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily] = dataValue[18];\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] =\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily] !== 0 ? 21 + header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] : 19;\n\n    if (dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] < header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Page Segment Bytes (1-2)\n    // * `AAAAA...`: Packet config\n    // * `.....B..`:\n    // * `......CC`: Packet code\n    const packetMode = packetData[0] & 0b00000011;\n    const packetLength = packetMode === 3 ? 2 : 1;\n\n    // Check header cache\n    const key =\n      (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.bytesToString)(dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length])) +\n      (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.bytesToString)(packetData[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, packetLength));\n    const cachedHeader = headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](key);\n\n    if (cachedHeader) return new OpusHeader(cachedHeader);\n\n    // Bytes (1-8 of 19): OpusHead - Magic Signature\n    if (key.substr(0, 8) !== \"OpusHead\") {\n      return null;\n    }\n\n    // Byte (9 of 19)\n    // * `00000001`: Version number\n    if (dataValue[8] !== 1) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.data] = _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array.from(dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]));\n\n    const view = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.dataView(header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.data][_constants_js__WEBPACK_IMPORTED_MODULE_0__.buffer]);\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bitDepth] = 16;\n\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    // set earlier to determine length\n\n    // Byte (11-12 of 19)\n    // * `DDDDDDDD|DDDDDDDD`: Pre skip\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.preSkip] = view.getUint16(10, true);\n\n    // Byte (13-16 of 19)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.inputSampleRate] = view.getUint32(12, true);\n    // Opus is always decoded at 48kHz\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.sampleRate] = _constants_js__WEBPACK_IMPORTED_MODULE_0__.rate48000;\n\n    // Byte (17-18 of 19)\n    // * `FFFFFFFF|FFFFFFFF`: Output Gain\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.outputGain] = view.getInt16(16, true);\n\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    // set earlier to determine length\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily] in channelMappingFamilies) {\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMode] =\n        channelMappingFamilies[header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily]][\n          header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] - 1\n        ];\n      if (!header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMode]) return null;\n    }\n\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily] !== 0) {\n      // * `HHHHHHHH`: Stream count\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamCount] = dataValue[19];\n\n      // * `IIIIIIII`: Coupled Stream count\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.coupledStreamCount] = dataValue[20];\n\n      // * `JJJJJJJJ|...` Channel Mapping table\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingTable] = [\n        ...dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](21, header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channels] + 21),\n      ];\n    }\n\n    const packetConfig = configTable[0b11111000 & packetData[0]];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode] = packetConfig[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth] = packetConfig[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize] = packetConfig[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize];\n\n    // https://tools.ietf.org/html/rfc6716#appendix-B\n    switch (packetMode) {\n      case 0:\n        // 0: 1 frame in the packet\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameCount] = 1;\n        break;\n      case 1:\n      // 1: 2 frames in the packet, each with equal compressed size\n      case 2:\n        // 2: 2 frames in the packet, with different compressed sizes\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameCount] = 2;\n        break;\n      case 3:\n        // 3: an arbitrary number of frames in the packet\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isVbr] = !!(0b10000000 & packetData[1]);\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.hasOpusPadding] = !!(0b01000000 & packetData[1]);\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameCount] = 0b00111111 & packetData[1];\n        break;\n      default:\n        return null;\n    }\n\n    // set header cache\n    {\n      const {\n        length,\n        data: headerData,\n        channelMappingFamily,\n        ...codecUpdateFields\n      } = header;\n\n      headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.setHeader](key, header, codecUpdateFields);\n    }\n\n    return new OpusHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OpusHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.data] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.data];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.bandwidth];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingFamily];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingTable] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.channelMappingTable];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.coupledStreamCount] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.coupledStreamCount];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameCount] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameCount];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameSize];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.hasOpusPadding] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.hasOpusPadding];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.inputSampleRate] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.inputSampleRate];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isVbr] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isVbr];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mode];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.outputGain] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.outputGain];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.preSkip] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.preSkip];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamCount] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamCount];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/opus/OpusHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/opus/OpusParser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/opus/OpusParser.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OpusParser; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _OpusFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OpusFrame.js */ \"./node_modules/codec-parser/src/codecs/opus/OpusFrame.js\");\n/* harmony import */ var _OpusHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OpusHeader.js */ \"./node_modules/codec-parser/src/codecs/opus/OpusHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\nclass OpusParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = _OpusFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.Header = _OpusHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n    onCodec(this[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]);\n    this._identificationHeader = null;\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_3__.codec]() {\n    return \"opus\";\n  }\n\n  /**\n   * @todo implement continued page support\n   */\n  [_constants_js__WEBPACK_IMPORTED_MODULE_3__.parseOggPage](oggPage) {\n    if (oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.pageSequenceNumber] === 0) {\n      // Identification header\n\n      this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_3__.enable]();\n      this._identificationHeader = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.data];\n    } else if (oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.pageSequenceNumber] === 1) {\n      // OpusTags\n    } else {\n      oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_3__.codecFrames] = _globals_js__WEBPACK_IMPORTED_MODULE_4__.frameStore\n        .get(oggPage)\n        [_constants_js__WEBPACK_IMPORTED_MODULE_3__.segments].map((segment) => {\n          const header = _OpusHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_3__.getHeaderFromUint8Array](\n            this._identificationHeader,\n            segment,\n            this._headerCache,\n          );\n\n          if (header) return new _OpusFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](segment, header);\n\n          this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_3__.logError](\n            \"Failed to parse Ogg Opus Header\",\n            \"Not a valid Ogg Opus file\",\n          );\n        });\n    }\n\n    return oggPage;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3Mvb3B1cy9PcHVzUGFyc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRThDO0FBV2xCO0FBQ007QUFDSztBQUNFOztBQUUxQix5QkFBeUIsa0RBQU07QUFDOUM7QUFDQTtBQUNBLGlCQUFpQixxREFBUztBQUMxQixrQkFBa0Isc0RBQVU7O0FBRTVCLGlCQUFpQixnREFBSztBQUN0QjtBQUNBOztBQUVBLE9BQU8sZ0RBQUs7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsdURBQVk7QUFDZixnQkFBZ0IsNkRBQWtCO0FBQ2xDOztBQUVBLHdCQUF3QixpREFBTTtBQUM5QiwyQ0FBMkMsK0NBQUk7QUFDL0MsTUFBTSxpQkFBaUIsNkRBQWtCO0FBQ3pDO0FBQ0EsTUFBTTtBQUNOLGNBQWMsc0RBQVcsSUFBSSxtREFBVTtBQUN2QztBQUNBLFNBQVMsbURBQVE7QUFDakIseUJBQXlCLHNEQUFVLENBQUMsa0VBQXVCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyxxREFBUzs7QUFFMUMsNEJBQTRCLG1EQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9zcmMvY29kZWNzL29wdXMvT3B1c1BhcnNlci5qcz84NjhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQgeyBmcmFtZVN0b3JlIH0gZnJvbSBcIi4uLy4uL2dsb2JhbHMuanNcIjtcbmltcG9ydCB7XG4gIGNvZGVjRnJhbWVzLFxuICBkYXRhLFxuICBwYWdlU2VxdWVuY2VOdW1iZXIsXG4gIGNvZGVjLFxuICBzZWdtZW50cyxcbiAgbG9nRXJyb3IsXG4gIHBhcnNlT2dnUGFnZSxcbiAgZW5hYmxlLFxuICBnZXRIZWFkZXJGcm9tVWludDhBcnJheSxcbn0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFBhcnNlciBmcm9tIFwiLi4vUGFyc2VyLmpzXCI7XG5pbXBvcnQgT3B1c0ZyYW1lIGZyb20gXCIuL09wdXNGcmFtZS5qc1wiO1xuaW1wb3J0IE9wdXNIZWFkZXIgZnJvbSBcIi4vT3B1c0hlYWRlci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHVzUGFyc2VyIGV4dGVuZHMgUGFyc2VyIHtcbiAgY29uc3RydWN0b3IoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCBvbkNvZGVjKSB7XG4gICAgc3VwZXIoY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlKTtcbiAgICB0aGlzLkZyYW1lID0gT3B1c0ZyYW1lO1xuICAgIHRoaXMuSGVhZGVyID0gT3B1c0hlYWRlcjtcblxuICAgIG9uQ29kZWModGhpc1tjb2RlY10pO1xuICAgIHRoaXMuX2lkZW50aWZpY2F0aW9uSGVhZGVyID0gbnVsbDtcbiAgfVxuXG4gIGdldCBbY29kZWNdKCkge1xuICAgIHJldHVybiBcIm9wdXNcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAdG9kbyBpbXBsZW1lbnQgY29udGludWVkIHBhZ2Ugc3VwcG9ydFxuICAgKi9cbiAgW3BhcnNlT2dnUGFnZV0ob2dnUGFnZSkge1xuICAgIGlmIChvZ2dQYWdlW3BhZ2VTZXF1ZW5jZU51bWJlcl0gPT09IDApIHtcbiAgICAgIC8vIElkZW50aWZpY2F0aW9uIGhlYWRlclxuXG4gICAgICB0aGlzLl9oZWFkZXJDYWNoZVtlbmFibGVdKCk7XG4gICAgICB0aGlzLl9pZGVudGlmaWNhdGlvbkhlYWRlciA9IG9nZ1BhZ2VbZGF0YV07XG4gICAgfSBlbHNlIGlmIChvZ2dQYWdlW3BhZ2VTZXF1ZW5jZU51bWJlcl0gPT09IDEpIHtcbiAgICAgIC8vIE9wdXNUYWdzXG4gICAgfSBlbHNlIHtcbiAgICAgIG9nZ1BhZ2VbY29kZWNGcmFtZXNdID0gZnJhbWVTdG9yZVxuICAgICAgICAuZ2V0KG9nZ1BhZ2UpXG4gICAgICAgIFtzZWdtZW50c10ubWFwKChzZWdtZW50KSA9PiB7XG4gICAgICAgICAgY29uc3QgaGVhZGVyID0gT3B1c0hlYWRlcltnZXRIZWFkZXJGcm9tVWludDhBcnJheV0oXG4gICAgICAgICAgICB0aGlzLl9pZGVudGlmaWNhdGlvbkhlYWRlcixcbiAgICAgICAgICAgIHNlZ21lbnQsXG4gICAgICAgICAgICB0aGlzLl9oZWFkZXJDYWNoZSxcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgaWYgKGhlYWRlcikgcmV0dXJuIG5ldyBPcHVzRnJhbWUoc2VnbWVudCwgaGVhZGVyKTtcblxuICAgICAgICAgIHRoaXMuX2NvZGVjUGFyc2VyW2xvZ0Vycm9yXShcbiAgICAgICAgICAgIFwiRmFpbGVkIHRvIHBhcnNlIE9nZyBPcHVzIEhlYWRlclwiLFxuICAgICAgICAgICAgXCJOb3QgYSB2YWxpZCBPZ2cgT3B1cyBmaWxlXCIsXG4gICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9nZ1BhZ2U7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/opus/OpusParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js":
/*!********************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ VorbisFrame; }\n/* harmony export */ });\n/* harmony import */ var _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecFrame.js */ \"./node_modules/codec-parser/src/codecs/CodecFrame.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\nclass VorbisFrame extends _CodecFrame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(data, header, samples) {\n    super(header, data, samples);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3Mvdm9yYmlzL1ZvcmJpc0ZyYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFMEM7O0FBRTNCLDBCQUEwQixzREFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb2RlY3Mvdm9yYmlzL1ZvcmJpc0ZyYW1lLmpzPzQ5ODYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29weXJpZ2h0IDIwMjAtMjAyMyBFdGhhbiBIYWxzYWxsXG4gICAgXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2YgY29kZWMtcGFyc2VyLlxuICAgIFxuICAgIGNvZGVjLXBhcnNlciBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gICAgaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAgICAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG4gICAgY29kZWMtcGFyc2VyIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gICAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbiAgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAgICBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz5cbiovXG5cbmltcG9ydCBDb2RlY0ZyYW1lIGZyb20gXCIuLi9Db2RlY0ZyYW1lLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZvcmJpc0ZyYW1lIGV4dGVuZHMgQ29kZWNGcmFtZSB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGhlYWRlciwgc2FtcGxlcykge1xuICAgIHN1cGVyKGhlYWRlciwgZGF0YSwgc2FtcGxlcyk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js":
/*!*********************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ VorbisHeader; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _CodecHeader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../CodecHeader.js */ \"./node_modules/codec-parser/src/codecs/CodecHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\n\n1  1) [packet_type] : 8 bit value\n2  2) 0x76, 0x6f, 0x72, 0x62, 0x69, 0x73: the characters ’v’,’o’,’r’,’b’,’i’,’s’ as six octets\n\nLetter bits Description\nA      8    Packet type\nB      48   Magic signature (vorbis)\nC      32   Version number\nD      8    Channels\nE      32   Sample rate\nF      32   Bitrate Maximum (signed)\nG      32   Bitrate Nominal (signed)\nH      32   Bitrate Minimum (signed)\nI      4    blocksize 1\nJ      4    blocksize 0\nK      1    Framing flag\n*/\n\n\n\n\n\n\nconst blockSizes = {\n  // 0b0110: 64,\n  // 0b0111: 128,\n  // 0b1000: 256,\n  // 0b1001: 512,\n  // 0b1010: 1024,\n  // 0b1011: 2048,\n  // 0b1100: 4096,\n  // 0b1101: 8192\n};\nfor (let i = 0; i < 8; i++) blockSizes[i + 6] = 2 ** (6 + i);\n\nclass VorbisHeader extends _CodecHeader_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static [_constants_js__WEBPACK_IMPORTED_MODULE_1__.getHeaderFromUint8Array](\n    dataValue,\n    headerCache,\n    vorbisCommentsData,\n    vorbisSetupData,\n  ) {\n    // Must be at least 30 bytes.\n    if (dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] < 30)\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Check header cache\n    const key = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_2__.bytesToString)(dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](0, 30));\n    const cachedHeader = headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getHeader](key);\n    if (cachedHeader) return new VorbisHeader(cachedHeader);\n\n    const header = { [_constants_js__WEBPACK_IMPORTED_MODULE_1__.length]: 30 };\n\n    // Bytes (1-7 of 30): /01vorbis - Magic Signature\n    if (key.substr(0, 7) !== \"\\x01vorbis\") {\n      return null;\n    }\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data] = _constants_js__WEBPACK_IMPORTED_MODULE_1__.uint8Array.from(dataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](0, 30));\n    const view = new _constants_js__WEBPACK_IMPORTED_MODULE_1__.dataView(header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data][_constants_js__WEBPACK_IMPORTED_MODULE_1__.buffer]);\n\n    // Byte (8-11 of 30)\n    // * `CCCCCCCC|CCCCCCCC|CCCCCCCC|CCCCCCCC`: Version number\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.version] = view.getUint32(7, true);\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.version] !== 0) return null;\n\n    // Byte (12 of 30)\n    // * `DDDDDDDD`: Channel Count\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channels] = dataValue[11];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channelMode] =\n      _constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisOpusChannelMapping[header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.channels] - 1] || \"application defined\";\n\n    // Byte (13-16 of 30)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.sampleRate] = view.getUint32(12, true);\n\n    // Byte (17-20 of 30)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`: Bitrate Maximum\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMaximum] = view.getInt32(16, true);\n\n    // Byte (21-24 of 30)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`: Bitrate Nominal\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateNominal] = view.getInt32(20, true);\n\n    // Byte (25-28 of 30)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`: Bitrate Minimum\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMinimum] = view.getInt32(24, true);\n\n    // Byte (29 of 30)\n    // * `IIII....` Blocksize 1\n    // * `....JJJJ` Blocksize 0\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize1] = blockSizes[(dataValue[28] & 0b11110000) >> 4];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize0] = blockSizes[dataValue[28] & 0b00001111];\n    if (header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize0] > header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize1]) return null;\n\n    // Byte (29 of 30)\n    // * `00000001` Framing bit\n    if (dataValue[29] !== 0x01) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitDepth] = 32;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisSetup] = vorbisSetupData;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisComments] = vorbisCommentsData;\n\n    {\n      // set header cache\n      const {\n        length,\n        data,\n        version,\n        vorbisSetup,\n        vorbisComments,\n        ...codecUpdateFields\n      } = header;\n      headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_1__.setHeader](key, header, codecUpdateFields);\n    }\n\n    return new VorbisHeader(header);\n  }\n\n  /**\n   * @private\n   * Call VorbisHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMaximum] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMaximum];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMinimum] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateMinimum];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateNominal] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.bitrateNominal];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize0] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize0];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize1] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.blocksize1];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisComments] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisComments];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisSetup] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.vorbisSetup];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ VorbisParser; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _VorbisFrame_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VorbisFrame.js */ \"./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js\");\n/* harmony import */ var _VorbisHeader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./VorbisHeader.js */ \"./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\n\n\nclass VorbisParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = _VorbisFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n\n    onCodec(this[_constants_js__WEBPACK_IMPORTED_MODULE_2__.codec]);\n\n    this._identificationHeader = null;\n    this._setupComplete = false;\n\n    this._prevBlockSize = null;\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_2__.codec]() {\n    return _constants_js__WEBPACK_IMPORTED_MODULE_2__.vorbis;\n  }\n\n  [_constants_js__WEBPACK_IMPORTED_MODULE_2__.parseOggPage](oggPage) {\n    oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_2__.codecFrames] = [];\n\n    for (const oggPageSegment of _globals_js__WEBPACK_IMPORTED_MODULE_3__.frameStore.get(oggPage)[_constants_js__WEBPACK_IMPORTED_MODULE_2__.segments]) {\n      if (oggPageSegment[0] === 1) {\n        // Identification header\n\n        this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_2__.enable]();\n        this._identificationHeader = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_2__.data];\n        this._setupComplete = false;\n      } else if (oggPageSegment[0] === 3) {\n        // comment header\n\n        this._vorbisComments = oggPageSegment;\n      } else if (oggPageSegment[0] === 5) {\n        // setup header\n\n        this._vorbisSetup = oggPageSegment;\n        this._mode = this._parseSetupHeader(oggPageSegment);\n        this._setupComplete = true;\n      } else if (this._setupComplete) {\n        const header = _VorbisHeader_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_2__.getHeaderFromUint8Array](\n          this._identificationHeader,\n          this._headerCache,\n          this._vorbisComments,\n          this._vorbisSetup,\n        );\n\n        if (header) {\n          oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_2__.codecFrames].push(\n            new _VorbisFrame_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n              oggPageSegment,\n              header,\n              this._getSamples(oggPageSegment, header),\n            ),\n          );\n        } else {\n          this._codecParser[logError](\n            \"Failed to parse Ogg Vorbis Header\",\n            \"Not a valid Ogg Vorbis file\",\n          );\n        }\n      }\n    }\n\n    return oggPage;\n  }\n\n  _getSamples(segment, header) {\n    const blockFlag =\n      this._mode.blockFlags[(segment[0] >> 1) & this._mode.mask];\n\n    const currentBlockSize = blockFlag\n      ? header[_constants_js__WEBPACK_IMPORTED_MODULE_2__.blocksize1]\n      : header[_constants_js__WEBPACK_IMPORTED_MODULE_2__.blocksize0];\n\n    // data is not returned on the first frame, but is used to prime the decoder\n    // https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-590004\n    const samplesValue =\n      this._prevBlockSize === null\n        ? 0\n        : (this._prevBlockSize + currentBlockSize) / 4;\n\n    this._prevBlockSize = currentBlockSize;\n\n    return samplesValue;\n  }\n\n  // https://gitlab.xiph.org/xiph/liboggz/-/blob/master/src/liboggz/oggz_auto.c#L911\n  // https://github.com/FFmpeg/FFmpeg/blob/master/libavcodec/vorbis_parser.c\n  /*\n   * This is the format of the mode data at the end of the packet for all\n   * Vorbis Version 1 :\n   *\n   * [ 6:number_of_modes ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:framing(1) ]\n   *\n   * e.g.:\n   *\n   * MsB         LsB\n   *              <-\n   * 0 0 0 0 0 1 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1|0 0 0 0 0\n   * 0 0 0 0|0|0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0|1|0 0 0 0 |\n   * 0 0 0 0 0 0 0 0 V\n   * 0 0 0|0 0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0|1 0 0 0 0 0\n   *\n   * The simplest way to approach this is to start at the end\n   * and read backwards to determine the mode configuration.\n   *\n   * liboggz and ffmpeg both use this method.\n   */\n  _parseSetupHeader(setup) {\n    const bitReader = new _utilities_js__WEBPACK_IMPORTED_MODULE_5__.BitReader(setup);\n    const mode = {\n      count: 0,\n      blockFlags: [],\n    };\n\n    // sync with the framing bit\n    while ((bitReader.read(1) & 0x01) !== 1) {}\n\n    let modeBits;\n    // search in reverse to parse out the mode entries\n    // limit mode count to 63 so previous block flag will be in first packet byte\n    while (mode.count < 64 && bitReader.position > 0) {\n      (0,_utilities_js__WEBPACK_IMPORTED_MODULE_5__.reverse)(bitReader.read(8)); // read mapping\n\n      // 16 bits transform type, 16 bits window type, all values must be zero\n      let currentByte = 0;\n      while (bitReader.read(8) === 0x00 && currentByte++ < 3) {} // a non-zero value may indicate the end of the mode entries, or invalid data\n\n      if (currentByte === 4) {\n        // transform type and window type were all zeros\n        modeBits = bitReader.read(7); // modeBits may need to be used in the next iteration if this is the last mode entry\n        mode.blockFlags.unshift(modeBits & 0x01); // read and store mode number -> block flag\n        bitReader.position += 6; // go back 6 bits so next iteration starts right after the block flag\n        mode.count++;\n      } else {\n        // transform type and window type were not all zeros\n        // check for mode count using previous iteration modeBits\n        if ((((0,_utilities_js__WEBPACK_IMPORTED_MODULE_5__.reverse)(modeBits) & 0b01111110) >> 1) + 1 !== mode.count) {\n          this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_2__.logWarning](\n            \"vorbis derived mode count did not match actual mode count\",\n          );\n        }\n\n        break;\n      }\n    }\n\n    // xxxxxxxa packet type\n    // xxxxxxbx mode count (number of mode count bits)\n    // xxxxxcxx previous window flag\n    // xxxxdxxx next window flag\n    mode.mask = (1 << Math.log2(mode.count)) - 1;\n\n    return mode;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/codec-parser/src/constants.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   absoluteGranulePosition: function() { return /* binding */ absoluteGranulePosition; },\n/* harmony export */   bad: function() { return /* binding */ bad; },\n/* harmony export */   bandwidth: function() { return /* binding */ bandwidth; },\n/* harmony export */   bitDepth: function() { return /* binding */ bitDepth; },\n/* harmony export */   bitrate: function() { return /* binding */ bitrate; },\n/* harmony export */   bitrateMaximum: function() { return /* binding */ bitrateMaximum; },\n/* harmony export */   bitrateMinimum: function() { return /* binding */ bitrateMinimum; },\n/* harmony export */   bitrateNominal: function() { return /* binding */ bitrateNominal; },\n/* harmony export */   blockSize: function() { return /* binding */ blockSize; },\n/* harmony export */   blockSizeBits: function() { return /* binding */ blockSizeBits; },\n/* harmony export */   blockingStrategy: function() { return /* binding */ blockingStrategy; },\n/* harmony export */   blockingStrategyBits: function() { return /* binding */ blockingStrategyBits; },\n/* harmony export */   blocksize0: function() { return /* binding */ blocksize0; },\n/* harmony export */   blocksize1: function() { return /* binding */ blocksize1; },\n/* harmony export */   buffer: function() { return /* binding */ buffer; },\n/* harmony export */   bufferFullness: function() { return /* binding */ bufferFullness; },\n/* harmony export */   channelMappingFamily: function() { return /* binding */ channelMappingFamily; },\n/* harmony export */   channelMappingTable: function() { return /* binding */ channelMappingTable; },\n/* harmony export */   channelMappings: function() { return /* binding */ channelMappings; },\n/* harmony export */   channelMode: function() { return /* binding */ channelMode; },\n/* harmony export */   channelModeBits: function() { return /* binding */ channelModeBits; },\n/* harmony export */   channels: function() { return /* binding */ channels; },\n/* harmony export */   checkCodecUpdate: function() { return /* binding */ checkCodecUpdate; },\n/* harmony export */   checkFrameFooterCrc16: function() { return /* binding */ checkFrameFooterCrc16; },\n/* harmony export */   codec: function() { return /* binding */ codec; },\n/* harmony export */   codecFrames: function() { return /* binding */ codecFrames; },\n/* harmony export */   copyrightId: function() { return /* binding */ copyrightId; },\n/* harmony export */   copyrightIdStart: function() { return /* binding */ copyrightIdStart; },\n/* harmony export */   coupledStreamCount: function() { return /* binding */ coupledStreamCount; },\n/* harmony export */   crc: function() { return /* binding */ crc; },\n/* harmony export */   crc16: function() { return /* binding */ crc16; },\n/* harmony export */   crc32: function() { return /* binding */ crc32; },\n/* harmony export */   data: function() { return /* binding */ data; },\n/* harmony export */   dataView: function() { return /* binding */ dataView; },\n/* harmony export */   description: function() { return /* binding */ description; },\n/* harmony export */   duration: function() { return /* binding */ duration; },\n/* harmony export */   emphasis: function() { return /* binding */ emphasis; },\n/* harmony export */   enable: function() { return /* binding */ enable; },\n/* harmony export */   fixedLengthFrameSync: function() { return /* binding */ fixedLengthFrameSync; },\n/* harmony export */   frame: function() { return /* binding */ frame; },\n/* harmony export */   frameCount: function() { return /* binding */ frameCount; },\n/* harmony export */   frameLength: function() { return /* binding */ frameLength; },\n/* harmony export */   frameNumber: function() { return /* binding */ frameNumber; },\n/* harmony export */   framePadding: function() { return /* binding */ framePadding; },\n/* harmony export */   frameSize: function() { return /* binding */ frameSize; },\n/* harmony export */   free: function() { return /* binding */ free; },\n/* harmony export */   getChannelMapping: function() { return /* binding */ getChannelMapping; },\n/* harmony export */   getFrame: function() { return /* binding */ getFrame; },\n/* harmony export */   getHeader: function() { return /* binding */ getHeader; },\n/* harmony export */   getHeaderFromUint8Array: function() { return /* binding */ getHeaderFromUint8Array; },\n/* harmony export */   hasOpusPadding: function() { return /* binding */ hasOpusPadding; },\n/* harmony export */   header: function() { return /* binding */ header; },\n/* harmony export */   incrementRawData: function() { return /* binding */ incrementRawData; },\n/* harmony export */   inputSampleRate: function() { return /* binding */ inputSampleRate; },\n/* harmony export */   isContinuedPacket: function() { return /* binding */ isContinuedPacket; },\n/* harmony export */   isCopyrighted: function() { return /* binding */ isCopyrighted; },\n/* harmony export */   isFirstPage: function() { return /* binding */ isFirstPage; },\n/* harmony export */   isHome: function() { return /* binding */ isHome; },\n/* harmony export */   isLastPage: function() { return /* binding */ isLastPage; },\n/* harmony export */   isOriginal: function() { return /* binding */ isOriginal; },\n/* harmony export */   isPrivate: function() { return /* binding */ isPrivate; },\n/* harmony export */   isVbr: function() { return /* binding */ isVbr; },\n/* harmony export */   layer: function() { return /* binding */ layer; },\n/* harmony export */   length: function() { return /* binding */ length; },\n/* harmony export */   lfe: function() { return /* binding */ lfe; },\n/* harmony export */   logError: function() { return /* binding */ logError; },\n/* harmony export */   logWarning: function() { return /* binding */ logWarning; },\n/* harmony export */   mapCodecFrameStats: function() { return /* binding */ mapCodecFrameStats; },\n/* harmony export */   mapFrameStats: function() { return /* binding */ mapFrameStats; },\n/* harmony export */   mode: function() { return /* binding */ mode; },\n/* harmony export */   modeExtension: function() { return /* binding */ modeExtension; },\n/* harmony export */   monophonic: function() { return /* binding */ monophonic; },\n/* harmony export */   mpeg: function() { return /* binding */ mpeg; },\n/* harmony export */   mpegVersion: function() { return /* binding */ mpegVersion; },\n/* harmony export */   none: function() { return /* binding */ none; },\n/* harmony export */   numberAACFrames: function() { return /* binding */ numberAACFrames; },\n/* harmony export */   outputGain: function() { return /* binding */ outputGain; },\n/* harmony export */   pageChecksum: function() { return /* binding */ pageChecksum; },\n/* harmony export */   pageSegmentBytes: function() { return /* binding */ pageSegmentBytes; },\n/* harmony export */   pageSegmentTable: function() { return /* binding */ pageSegmentTable; },\n/* harmony export */   pageSequenceNumber: function() { return /* binding */ pageSequenceNumber; },\n/* harmony export */   parseFrame: function() { return /* binding */ parseFrame; },\n/* harmony export */   parseOggPage: function() { return /* binding */ parseOggPage; },\n/* harmony export */   preSkip: function() { return /* binding */ preSkip; },\n/* harmony export */   profile: function() { return /* binding */ profile; },\n/* harmony export */   profileBits: function() { return /* binding */ profileBits; },\n/* harmony export */   protection: function() { return /* binding */ protection; },\n/* harmony export */   rate11025: function() { return /* binding */ rate11025; },\n/* harmony export */   rate12000: function() { return /* binding */ rate12000; },\n/* harmony export */   rate16000: function() { return /* binding */ rate16000; },\n/* harmony export */   rate176400: function() { return /* binding */ rate176400; },\n/* harmony export */   rate192000: function() { return /* binding */ rate192000; },\n/* harmony export */   rate22050: function() { return /* binding */ rate22050; },\n/* harmony export */   rate24000: function() { return /* binding */ rate24000; },\n/* harmony export */   rate32000: function() { return /* binding */ rate32000; },\n/* harmony export */   rate44100: function() { return /* binding */ rate44100; },\n/* harmony export */   rate48000: function() { return /* binding */ rate48000; },\n/* harmony export */   rate64000: function() { return /* binding */ rate64000; },\n/* harmony export */   rate7350: function() { return /* binding */ rate7350; },\n/* harmony export */   rate8000: function() { return /* binding */ rate8000; },\n/* harmony export */   rate88200: function() { return /* binding */ rate88200; },\n/* harmony export */   rate96000: function() { return /* binding */ rate96000; },\n/* harmony export */   rawData: function() { return /* binding */ rawData; },\n/* harmony export */   readRawData: function() { return /* binding */ readRawData; },\n/* harmony export */   reserved: function() { return /* binding */ reserved; },\n/* harmony export */   reset: function() { return /* binding */ reset; },\n/* harmony export */   sampleNumber: function() { return /* binding */ sampleNumber; },\n/* harmony export */   sampleRate: function() { return /* binding */ sampleRate; },\n/* harmony export */   sampleRateBits: function() { return /* binding */ sampleRateBits; },\n/* harmony export */   samples: function() { return /* binding */ samples; },\n/* harmony export */   segments: function() { return /* binding */ segments; },\n/* harmony export */   setHeader: function() { return /* binding */ setHeader; },\n/* harmony export */   sixteenBitCRC: function() { return /* binding */ sixteenBitCRC; },\n/* harmony export */   stereo: function() { return /* binding */ stereo; },\n/* harmony export */   streamCount: function() { return /* binding */ streamCount; },\n/* harmony export */   streamInfo: function() { return /* binding */ streamInfo; },\n/* harmony export */   streamSerialNumber: function() { return /* binding */ streamSerialNumber; },\n/* harmony export */   streamStructureVersion: function() { return /* binding */ streamStructureVersion; },\n/* harmony export */   subarray: function() { return /* binding */ subarray; },\n/* harmony export */   syncFrame: function() { return /* binding */ syncFrame; },\n/* harmony export */   totalBytesOut: function() { return /* binding */ totalBytesOut; },\n/* harmony export */   totalDuration: function() { return /* binding */ totalDuration; },\n/* harmony export */   totalSamples: function() { return /* binding */ totalSamples; },\n/* harmony export */   uint8Array: function() { return /* binding */ uint8Array; },\n/* harmony export */   version: function() { return /* binding */ version; },\n/* harmony export */   vorbis: function() { return /* binding */ vorbis; },\n/* harmony export */   vorbisComments: function() { return /* binding */ vorbisComments; },\n/* harmony export */   vorbisOpusChannelMapping: function() { return /* binding */ vorbisOpusChannelMapping; },\n/* harmony export */   vorbisSetup: function() { return /* binding */ vorbisSetup; }\n/* harmony export */ });\nconst symbol = Symbol;\n\n// prettier-ignore\n/*\n[\n  [\n    \"left, right\",\n    \"left, right, center\",\n    \"left, center, right\",\n    \"center, left, right\",\n    \"center\"\n  ],\n  [\n    \"front left, front right\",\n    \"front left, front right, front center\",\n    \"front left, front center, front right\",\n    \"front center, front left, front right\",\n    \"front center\"\n  ],\n  [\n    \"side left, side right\",\n    \"side left, side right, side center\",\n    \"side left, side center, side right\",\n    \"side center, side left, side right\",\n    \"side center\"\n  ],\n  [\n    \"rear left, rear right\",\n    \"rear left, rear right, rear center\",\n    \"rear left, rear center, rear right\",\n    \"rear center, rear left, rear right\",\n    \"rear center\"\n  ]\n]\n*/\n\nconst mappingJoin = \", \";\n\nconst channelMappings = (() => {\n  const front = \"front\";\n  const side = \"side\";\n  const rear = \"rear\";\n  const left = \"left\";\n  const center = \"center\";\n  const right = \"right\";\n\n  return [\"\", front + \" \", side + \" \", rear + \" \"].map((x) =>\n    [\n      [left, right],\n      [left, right, center],\n      [left, center, right],\n      [center, left, right],\n      [center],\n    ].flatMap((y) => y.map((z) => x + z).join(mappingJoin)),\n  );\n})();\n\nconst lfe = \"LFE\";\nconst monophonic = \"monophonic (mono)\";\nconst stereo = \"stereo\";\nconst surround = \"surround\";\n\nconst getChannelMapping = (channelCount, ...mappings) =>\n  `${\n    [\n      monophonic,\n      stereo,\n      `linear ${surround}`,\n      \"quadraphonic\",\n      `5.0 ${surround}`,\n      `5.1 ${surround}`,\n      `6.1 ${surround}`,\n      `7.1 ${surround}`,\n    ][channelCount - 1]\n  } (${mappings.join(mappingJoin)})`;\n\n// prettier-ignore\nconst vorbisOpusChannelMapping = [\n  monophonic,\n  getChannelMapping(2,channelMappings[0][0]),\n  getChannelMapping(3,channelMappings[0][2]),\n  getChannelMapping(4,channelMappings[1][0],channelMappings[3][0]),\n  getChannelMapping(5,channelMappings[1][2],channelMappings[3][0]),\n  getChannelMapping(6,channelMappings[1][2],channelMappings[3][0],lfe),\n  getChannelMapping(7,channelMappings[1][2],channelMappings[2][0],channelMappings[3][4],lfe),\n  getChannelMapping(8,channelMappings[1][2],channelMappings[2][0],channelMappings[3][0],lfe),\n]\n\n// sampleRates\nconst rate192000 = 192000;\nconst rate176400 = 176400;\nconst rate96000 = 96000;\nconst rate88200 = 88200;\nconst rate64000 = 64000;\nconst rate48000 = 48000;\nconst rate44100 = 44100;\nconst rate32000 = 32000;\nconst rate24000 = 24000;\nconst rate22050 = 22050;\nconst rate16000 = 16000;\nconst rate12000 = 12000;\nconst rate11025 = 11025;\nconst rate8000 = 8000;\nconst rate7350 = 7350;\n\n// header key constants\nconst absoluteGranulePosition = \"absoluteGranulePosition\";\nconst bandwidth = \"bandwidth\";\nconst bitDepth = \"bitDepth\";\nconst bitrate = \"bitrate\";\nconst bitrateMaximum = bitrate + \"Maximum\";\nconst bitrateMinimum = bitrate + \"Minimum\";\nconst bitrateNominal = bitrate + \"Nominal\";\nconst buffer = \"buffer\";\nconst bufferFullness = buffer + \"Fullness\";\nconst codec = \"codec\";\nconst codecFrames = codec + \"Frames\";\nconst coupledStreamCount = \"coupledStreamCount\";\nconst crc = \"crc\";\nconst crc16 = crc + \"16\";\nconst crc32 = crc + \"32\";\nconst data = \"data\";\nconst description = \"description\";\nconst duration = \"duration\";\nconst emphasis = \"emphasis\";\nconst hasOpusPadding = \"hasOpusPadding\";\nconst header = \"header\";\nconst isContinuedPacket = \"isContinuedPacket\";\nconst isCopyrighted = \"isCopyrighted\";\nconst isFirstPage = \"isFirstPage\";\nconst isHome = \"isHome\";\nconst isLastPage = \"isLastPage\";\nconst isOriginal = \"isOriginal\";\nconst isPrivate = \"isPrivate\";\nconst isVbr = \"isVbr\";\nconst layer = \"layer\";\nconst length = \"length\";\nconst mode = \"mode\";\nconst modeExtension = mode + \"Extension\";\nconst mpeg = \"mpeg\";\nconst mpegVersion = mpeg + \"Version\";\nconst numberAACFrames = \"numberAAC\" + \"Frames\";\nconst outputGain = \"outputGain\";\nconst preSkip = \"preSkip\";\nconst profile = \"profile\";\nconst profileBits = symbol();\nconst protection = \"protection\";\nconst rawData = \"rawData\";\nconst segments = \"segments\";\nconst subarray = \"subarray\";\nconst version = \"version\";\nconst vorbis = \"vorbis\";\nconst vorbisComments = vorbis + \"Comments\";\nconst vorbisSetup = vorbis + \"Setup\";\n\nconst block = \"block\";\nconst blockingStrategy = block + \"ingStrategy\";\nconst blockingStrategyBits = symbol();\nconst blockSize = block + \"Size\";\nconst blocksize0 = block + \"size0\";\nconst blocksize1 = block + \"size1\";\nconst blockSizeBits = symbol();\n\nconst channel = \"channel\";\nconst channelMappingFamily = channel + \"MappingFamily\";\nconst channelMappingTable = channel + \"MappingTable\";\nconst channelMode = channel + \"Mode\";\nconst channelModeBits = symbol();\nconst channels = channel + \"s\";\n\nconst copyright = \"copyright\";\nconst copyrightId = copyright + \"Id\";\nconst copyrightIdStart = copyright + \"IdStart\";\n\nconst frame = \"frame\";\nconst frameCount = frame + \"Count\";\nconst frameLength = frame + \"Length\";\n\nconst Number = \"Number\";\nconst frameNumber = frame + Number;\nconst framePadding = frame + \"Padding\";\nconst frameSize = frame + \"Size\";\n\nconst Rate = \"Rate\";\nconst inputSampleRate = \"inputSample\" + Rate;\n\nconst page = \"page\";\nconst pageChecksum = page + \"Checksum\";\nconst pageSegmentBytes = symbol();\nconst pageSegmentTable = page + \"SegmentTable\";\nconst pageSequenceNumber = page + \"Sequence\" + Number;\n\nconst sample = \"sample\";\nconst sampleNumber = sample + Number;\nconst sampleRate = sample + Rate;\nconst sampleRateBits = symbol();\nconst samples = sample + \"s\";\n\nconst stream = \"stream\";\nconst streamCount = stream + \"Count\";\nconst streamInfo = stream + \"Info\";\nconst streamSerialNumber = stream + \"Serial\" + Number;\nconst streamStructureVersion = stream + \"StructureVersion\";\n\nconst total = \"total\";\nconst totalBytesOut = total + \"BytesOut\";\nconst totalDuration = total + \"Duration\";\nconst totalSamples = total + \"Samples\";\n\n// private methods\nconst readRawData = symbol();\nconst incrementRawData = symbol();\nconst mapCodecFrameStats = symbol();\nconst mapFrameStats = symbol();\nconst logWarning = symbol();\nconst logError = symbol();\nconst syncFrame = symbol();\nconst fixedLengthFrameSync = symbol();\nconst getHeader = symbol();\nconst setHeader = symbol();\nconst getFrame = symbol();\nconst parseFrame = symbol();\nconst parseOggPage = symbol();\nconst checkCodecUpdate = symbol();\nconst reset = symbol();\nconst enable = symbol();\nconst getHeaderFromUint8Array = symbol();\nconst checkFrameFooterCrc16 = symbol();\n\nconst uint8Array = Uint8Array;\nconst dataView = DataView;\n\nconst reserved = \"reserved\";\nconst bad = \"bad\";\nconst free = \"free\";\nconst none = \"none\";\nconst sixteenBitCRC = \"16bit CRC\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/constants.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/containers/Frame.js":
/*!***********************************************************!*\
  !*** ./node_modules/codec-parser/src/containers/Frame.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Frame; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n/**\n * @abstract\n */\nclass Frame {\n  constructor(headerValue, dataValue) {\n    _globals_js__WEBPACK_IMPORTED_MODULE_0__.frameStore.set(this, { [_constants_js__WEBPACK_IMPORTED_MODULE_1__.header]: headerValue });\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.data] = dataValue;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb250YWluZXJzL0ZyYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRTJDO0FBQ0k7O0FBRS9DO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQSxJQUFJLG1EQUFVLGFBQWEsQ0FBQyxpREFBTSxnQkFBZ0I7O0FBRWxELFNBQVMsK0NBQUk7QUFDYjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jb2RlYy1wYXJzZXIvc3JjL2NvbnRhaW5lcnMvRnJhbWUuanM/MTI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBDb3B5cmlnaHQgMjAyMC0yMDIzIEV0aGFuIEhhbHNhbGxcbiAgICBcbiAgICBUaGlzIGZpbGUgaXMgcGFydCBvZiBjb2RlYy1wYXJzZXIuXG4gICAgXG4gICAgY29kZWMtcGFyc2VyIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbiAgICBjb2RlYy1wYXJzZXIgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICAgIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAgICBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPlxuKi9cblxuaW1wb3J0IHsgZnJhbWVTdG9yZSB9IGZyb20gXCIuLi9nbG9iYWxzLmpzXCI7XG5pbXBvcnQgeyBkYXRhLCBoZWFkZXIgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5cbi8qKlxuICogQGFic3RyYWN0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZyYW1lIHtcbiAgY29uc3RydWN0b3IoaGVhZGVyVmFsdWUsIGRhdGFWYWx1ZSkge1xuICAgIGZyYW1lU3RvcmUuc2V0KHRoaXMsIHsgW2hlYWRlcl06IGhlYWRlclZhbHVlIH0pO1xuXG4gICAgdGhpc1tkYXRhXSA9IGRhdGFWYWx1ZTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/containers/Frame.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/containers/ogg/OggPage.js":
/*!*****************************************************************!*\
  !*** ./node_modules/codec-parser/src/containers/ogg/OggPage.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OggPage; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _Frame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Frame.js */ \"./node_modules/codec-parser/src/containers/Frame.js\");\n/* harmony import */ var _OggPageHeader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OggPageHeader.js */ \"./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\nclass OggPage extends _Frame_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_1__.getFrame](codecParser, headerCache, readOffset) {\n    const header = yield* _OggPageHeader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][_constants_js__WEBPACK_IMPORTED_MODULE_1__.getHeader](\n      codecParser,\n      headerCache,\n      readOffset,\n    );\n\n    if (header) {\n      const frameLengthValue = _globals_js__WEBPACK_IMPORTED_MODULE_3__.headerStore.get(header)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.frameLength];\n      const headerLength = _globals_js__WEBPACK_IMPORTED_MODULE_3__.headerStore.get(header)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length];\n      const totalLength = headerLength + frameLengthValue;\n\n      const rawDataValue = (yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_1__.readRawData](totalLength, 0))[\n        _constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray\n      ](0, totalLength);\n\n      const frame = rawDataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.subarray](headerLength, totalLength);\n\n      return new OggPage(header, frame, rawDataValue);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(header, frame, rawDataValue) {\n    super(header, frame);\n\n    _globals_js__WEBPACK_IMPORTED_MODULE_3__.frameStore.get(this)[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length] = rawDataValue[_constants_js__WEBPACK_IMPORTED_MODULE_1__.length];\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.codecFrames] = [];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.rawData] = rawDataValue;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.absoluteGranulePosition] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.absoluteGranulePosition];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.crc32] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageChecksum];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.duration] = 0;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isContinuedPacket] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isContinuedPacket];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isFirstPage] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isFirstPage];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isLastPage] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.isLastPage];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageSequenceNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.pageSequenceNumber];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.samples] = 0;\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamSerialNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_1__.streamSerialNumber];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9jb250YWluZXJzL29nZy9PZ2dQYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFMkQ7QUFvQi9COztBQUVJO0FBQ2U7O0FBRWhDLHNCQUFzQixpREFBSztBQUMxQyxXQUFXLG1EQUFRO0FBQ25CLDBCQUEwQix5REFBYSxDQUFDLG9EQUFTO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCLG9EQUFXLGFBQWEsc0RBQVc7QUFDbEUsMkJBQTJCLG9EQUFXLGFBQWEsaURBQU07QUFDekQ7O0FBRUEsK0NBQStDLHNEQUFXO0FBQzFELFFBQVEsbURBQVE7QUFDaEI7O0FBRUEsaUNBQWlDLG1EQUFROztBQUV6QztBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxJQUFJLG1EQUFVLFdBQVcsaURBQU0saUJBQWlCLGlEQUFNOztBQUV0RCxTQUFTLHNEQUFXO0FBQ3BCLFNBQVMsa0RBQU87QUFDaEIsU0FBUyxrRUFBdUIsV0FBVyxrRUFBdUI7QUFDbEUsU0FBUyxnREFBSyxXQUFXLHVEQUFZO0FBQ3JDLFNBQVMsbURBQVE7QUFDakIsU0FBUyw0REFBaUIsV0FBVyw0REFBaUI7QUFDdEQsU0FBUyxzREFBVyxXQUFXLHNEQUFXO0FBQzFDLFNBQVMscURBQVUsV0FBVyxxREFBVTtBQUN4QyxTQUFTLDZEQUFrQixXQUFXLDZEQUFrQjtBQUN4RCxTQUFTLGtEQUFPO0FBQ2hCLFNBQVMsNkRBQWtCLFdBQVcsNkRBQWtCO0FBQ3hEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2NvZGVjLXBhcnNlci9zcmMvY29udGFpbmVycy9vZ2cvT2dnUGFnZS5qcz82ZGJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG5pbXBvcnQgeyBoZWFkZXJTdG9yZSwgZnJhbWVTdG9yZSB9IGZyb20gXCIuLi8uLi9nbG9iYWxzLmpzXCI7XG5pbXBvcnQge1xuICBjb2RlY0ZyYW1lcyxcbiAgcmF3RGF0YSxcbiAgYWJzb2x1dGVHcmFudWxlUG9zaXRpb24sXG4gIGNyYzMyLFxuICBkdXJhdGlvbixcbiAgaXNDb250aW51ZWRQYWNrZXQsXG4gIGlzRmlyc3RQYWdlLFxuICBpc0xhc3RQYWdlLFxuICBwYWdlU2VxdWVuY2VOdW1iZXIsXG4gIHNhbXBsZXMsXG4gIHN0cmVhbVNlcmlhbE51bWJlcixcbiAgbGVuZ3RoLFxuICBwYWdlQ2hlY2tzdW0sXG4gIGZyYW1lTGVuZ3RoLFxuICBzdWJhcnJheSxcbiAgcmVhZFJhd0RhdGEsXG4gIGdldEZyYW1lLFxuICBnZXRIZWFkZXIsXG59IGZyb20gXCIuLi8uLi9jb25zdGFudHMuanNcIjtcblxuaW1wb3J0IEZyYW1lIGZyb20gXCIuLi9GcmFtZS5qc1wiO1xuaW1wb3J0IE9nZ1BhZ2VIZWFkZXIgZnJvbSBcIi4vT2dnUGFnZUhlYWRlci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPZ2dQYWdlIGV4dGVuZHMgRnJhbWUge1xuICBzdGF0aWMgKltnZXRGcmFtZV0oY29kZWNQYXJzZXIsIGhlYWRlckNhY2hlLCByZWFkT2Zmc2V0KSB7XG4gICAgY29uc3QgaGVhZGVyID0geWllbGQqIE9nZ1BhZ2VIZWFkZXJbZ2V0SGVhZGVyXShcbiAgICAgIGNvZGVjUGFyc2VyLFxuICAgICAgaGVhZGVyQ2FjaGUsXG4gICAgICByZWFkT2Zmc2V0LFxuICAgICk7XG5cbiAgICBpZiAoaGVhZGVyKSB7XG4gICAgICBjb25zdCBmcmFtZUxlbmd0aFZhbHVlID0gaGVhZGVyU3RvcmUuZ2V0KGhlYWRlcilbZnJhbWVMZW5ndGhdO1xuICAgICAgY29uc3QgaGVhZGVyTGVuZ3RoID0gaGVhZGVyU3RvcmUuZ2V0KGhlYWRlcilbbGVuZ3RoXTtcbiAgICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gaGVhZGVyTGVuZ3RoICsgZnJhbWVMZW5ndGhWYWx1ZTtcblxuICAgICAgY29uc3QgcmF3RGF0YVZhbHVlID0gKHlpZWxkKiBjb2RlY1BhcnNlcltyZWFkUmF3RGF0YV0odG90YWxMZW5ndGgsIDApKVtcbiAgICAgICAgc3ViYXJyYXlcbiAgICAgIF0oMCwgdG90YWxMZW5ndGgpO1xuXG4gICAgICBjb25zdCBmcmFtZSA9IHJhd0RhdGFWYWx1ZVtzdWJhcnJheV0oaGVhZGVyTGVuZ3RoLCB0b3RhbExlbmd0aCk7XG5cbiAgICAgIHJldHVybiBuZXcgT2dnUGFnZShoZWFkZXIsIGZyYW1lLCByYXdEYXRhVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcihoZWFkZXIsIGZyYW1lLCByYXdEYXRhVmFsdWUpIHtcbiAgICBzdXBlcihoZWFkZXIsIGZyYW1lKTtcblxuICAgIGZyYW1lU3RvcmUuZ2V0KHRoaXMpW2xlbmd0aF0gPSByYXdEYXRhVmFsdWVbbGVuZ3RoXTtcblxuICAgIHRoaXNbY29kZWNGcmFtZXNdID0gW107XG4gICAgdGhpc1tyYXdEYXRhXSA9IHJhd0RhdGFWYWx1ZTtcbiAgICB0aGlzW2Fic29sdXRlR3JhbnVsZVBvc2l0aW9uXSA9IGhlYWRlclthYnNvbHV0ZUdyYW51bGVQb3NpdGlvbl07XG4gICAgdGhpc1tjcmMzMl0gPSBoZWFkZXJbcGFnZUNoZWNrc3VtXTtcbiAgICB0aGlzW2R1cmF0aW9uXSA9IDA7XG4gICAgdGhpc1tpc0NvbnRpbnVlZFBhY2tldF0gPSBoZWFkZXJbaXNDb250aW51ZWRQYWNrZXRdO1xuICAgIHRoaXNbaXNGaXJzdFBhZ2VdID0gaGVhZGVyW2lzRmlyc3RQYWdlXTtcbiAgICB0aGlzW2lzTGFzdFBhZ2VdID0gaGVhZGVyW2lzTGFzdFBhZ2VdO1xuICAgIHRoaXNbcGFnZVNlcXVlbmNlTnVtYmVyXSA9IGhlYWRlcltwYWdlU2VxdWVuY2VOdW1iZXJdO1xuICAgIHRoaXNbc2FtcGxlc10gPSAwO1xuICAgIHRoaXNbc3RyZWFtU2VyaWFsTnVtYmVyXSA9IGhlYWRlcltzdHJlYW1TZXJpYWxOdW1iZXJdO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/containers/ogg/OggPage.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js":
/*!***********************************************************************!*\
  !*** ./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OggPageHeader; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/ogg/doc/framing.html\n\nAAAAAAAA AAAAAAAA AAAAAAAA AAAAAAAA BBBBBBBB 00000CDE\n\n(LSB)                                                             (MSB)\nFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF\nGGGGGGGG GGGGGGGG GGGGGGGG GGGGGGGG\nHHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\nIIIIIIII IIIIIIII IIIIIIII IIIIIIII\n\nJJJJJJJJ\nLLLLLLLL...\n\nOgg Page Header\nLetter  Length (bits)  Description\nA   32  0x4f676753, \"OggS\"\nB   8   stream_structure_version\nC   1   (0 no, 1 yes) last page of logical bitstream (eos)\nD   1   (0 no, 1 yes) first page of logical bitstream (bos)\nE   1   (0 no, 1 yes) continued packet\n\nF   64  absolute granule position\nG   32  stream serial number\nH   32  page sequence no\nI   32  page checksum\nJ   8   Number of page segments in the segment table\nL   n   Segment table (n=page_segments+26).\n        Segment table values sum to the total length of the packet.\n        Last value is always < 0xFF. Last lacing value will be 0x00 if evenly divisible by 0xFF.\n        \n*/\n\n\n\n\nclass OggPageHeader {\n  static *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.getHeader](codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least 28 bytes.\n    let data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](28, readOffset);\n\n    // Bytes (1-4 of 28)\n    // Frame sync (must equal OggS): `AAAAAAAA|AAAAAAAA|AAAAAAAA|AAAAAAAA`:\n    if (\n      data[0] !== 0x4f || // O\n      data[1] !== 0x67 || // g\n      data[2] !== 0x67 || // g\n      data[3] !== 0x53 //    S\n    ) {\n      return null;\n    }\n\n    // Byte (5 of 28)\n    // * `BBBBBBBB`: stream_structure_version\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamStructureVersion] = data[4];\n\n    // Byte (6 of 28)\n    // * `00000CDE`\n    // * `00000...`: All zeros\n    // * `.....C..`: (0 no, 1 yes) last page of logical bitstream (eos)\n    // * `......D.`: (0 no, 1 yes) first page of logical bitstream (bos)\n    // * `.......E`: (0 no, 1 yes) continued packet\n    const zeros = data[5] & 0b11111000;\n    if (zeros) return null;\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isLastPage] = !!(data[5] & 0b00000100);\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isFirstPage] = !!(data[5] & 0b00000010);\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isContinuedPacket] = !!(data[5] & 0b00000001);\n\n    const view = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.dataView(_constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array.from(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, 28))[_constants_js__WEBPACK_IMPORTED_MODULE_0__.buffer]);\n\n    // Byte (7-14 of 28)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`\n    // * Absolute Granule Position\n\n    /**\n     * @todo Safari does not support getBigInt64, but it also doesn't support Ogg\n     */\n    try {\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.absoluteGranulePosition] = view.getBigInt64(6, true);\n    } catch {}\n\n    // Byte (15-18 of 28)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`\n    // * Stream Serial Number\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamSerialNumber] = view.getInt32(14, true);\n\n    // Byte (19-22 of 28)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`\n    // * Page Sequence Number\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber] = view.getInt32(18, true);\n\n    // Byte (23-26 of 28)\n    // * `IIIIIIII|IIIIIIII|IIIIIIII|IIIIIIII`\n    // * Page Checksum\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageChecksum] = view.getInt32(22, true);\n\n    // Byte (27 of 28)\n    // * `JJJJJJJJ`: Number of page segments in the segment table\n    const pageSegmentTableLength = data[26];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = pageSegmentTableLength + 27;\n\n    data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], readOffset); // read in the page segment table\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength] = 0;\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentTable] = [];\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentBytes] = _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array.from(\n      data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](27, header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]),\n    );\n\n    for (let i = 0, segmentLength = 0; i < pageSegmentTableLength; i++) {\n      const segmentByte = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentBytes][i];\n\n      header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.frameLength] += segmentByte;\n      segmentLength += segmentByte;\n\n      if (segmentByte !== 0xff || i === pageSegmentTableLength - 1) {\n        header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentTable].push(segmentLength);\n        segmentLength = 0;\n      }\n    }\n\n    return new OggPageHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OggPageHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    _globals_js__WEBPACK_IMPORTED_MODULE_1__.headerStore.set(this, header);\n\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.absoluteGranulePosition] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.absoluteGranulePosition];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isContinuedPacket] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isContinuedPacket];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isFirstPage] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isFirstPage];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isLastPage] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isLastPage];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentTable] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentTable];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageChecksum] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageChecksum];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamSerialNumber] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamSerialNumber];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/containers/ogg/OggParser.js":
/*!*******************************************************************!*\
  !*** ./node_modules/codec-parser/src/containers/ogg/OggParser.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OggParser; }\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../globals.js */ \"./node_modules/codec-parser/src/globals.js\");\n/* harmony import */ var _utilities_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities.js */ \"./node_modules/codec-parser/src/utilities.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* harmony import */ var _codecs_Parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../codecs/Parser.js */ \"./node_modules/codec-parser/src/codecs/Parser.js\");\n/* harmony import */ var _OggPage_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OggPage.js */ \"./node_modules/codec-parser/src/containers/ogg/OggPage.js\");\n/* harmony import */ var _OggPageHeader_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./OggPageHeader.js */ \"./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js\");\n/* harmony import */ var _codecs_flac_FLACParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../codecs/flac/FLACParser.js */ \"./node_modules/codec-parser/src/codecs/flac/FLACParser.js\");\n/* harmony import */ var _codecs_opus_OpusParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../codecs/opus/OpusParser.js */ \"./node_modules/codec-parser/src/codecs/opus/OpusParser.js\");\n/* harmony import */ var _codecs_vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../codecs/vorbis/VorbisParser.js */ \"./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass OggStream {\n  constructor(codecParser, headerCache, onCodec) {\n    this._codecParser = codecParser;\n    this._headerCache = headerCache;\n    this._onCodec = onCodec;\n\n    this._continuedPacket = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array();\n    this._codec = null;\n    this._isSupported = null;\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_0__.codec]() {\n    return this._codec || \"\";\n  }\n\n  _updateCodec(codec, Parser) {\n    if (this._codec !== codec) {\n      this._headerCache[_constants_js__WEBPACK_IMPORTED_MODULE_0__.reset]();\n      this._parser = new Parser(\n        this._codecParser,\n        this._headerCache,\n        this._onCodec,\n      );\n      this._codec = codec;\n    }\n  }\n\n  _checkCodecSupport({ data }) {\n    const idString = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.bytesToString)(data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](0, 8));\n\n    switch (idString) {\n      case \"fishead\\0\":\n        return false; // ignore ogg skeleton packets\n      case \"OpusHead\":\n        this._updateCodec(\"opus\", _codecs_opus_OpusParser_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        return true;\n      case /^\\x7fFLAC/.test(idString) && idString:\n        this._updateCodec(\"flac\", _codecs_flac_FLACParser_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n        return true;\n      case /^\\x01vorbis/.test(idString) && idString:\n        this._updateCodec(_constants_js__WEBPACK_IMPORTED_MODULE_0__.vorbis, _codecs_vorbis_VorbisParser_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  _checkPageSequenceNumber(oggPage) {\n    if (\n      oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber] !== this._pageSequenceNumber + 1 &&\n      this._pageSequenceNumber > 1 &&\n      oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber] > 1\n    ) {\n      this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.logWarning](\n        \"Unexpected gap in Ogg Page Sequence Number.\",\n        `Expected: ${this._pageSequenceNumber + 1}, Got: ${\n          oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber]\n        }`,\n      );\n    }\n\n    this._pageSequenceNumber = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber];\n  }\n\n  _parsePage(oggPage) {\n    if (this._isSupported === null) {\n      this._pageSequenceNumber = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSequenceNumber];\n      this._isSupported = this._checkCodecSupport(oggPage);\n    }\n\n    this._checkPageSequenceNumber(oggPage);\n\n    const oggPageStore = _globals_js__WEBPACK_IMPORTED_MODULE_5__.frameStore.get(oggPage);\n    const headerData = _globals_js__WEBPACK_IMPORTED_MODULE_5__.headerStore.get(oggPageStore[_constants_js__WEBPACK_IMPORTED_MODULE_0__.header]);\n\n    let offset = 0;\n    oggPageStore[_constants_js__WEBPACK_IMPORTED_MODULE_0__.segments] = headerData[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentTable].map((segmentLength) =>\n      oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.data][_constants_js__WEBPACK_IMPORTED_MODULE_0__.subarray](offset, (offset += segmentLength)),\n    );\n\n    // prepend any existing continued packet data\n    if (this._continuedPacket[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]) {\n      oggPageStore[_constants_js__WEBPACK_IMPORTED_MODULE_0__.segments][0] = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.concatBuffers)(\n        this._continuedPacket,\n        oggPageStore[_constants_js__WEBPACK_IMPORTED_MODULE_0__.segments][0],\n      );\n\n      this._continuedPacket = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array();\n    }\n\n    // save any new continued packet data\n    if (\n      headerData[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentBytes][headerData[_constants_js__WEBPACK_IMPORTED_MODULE_0__.pageSegmentBytes][_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] - 1] ===\n      0xff\n    ) {\n      this._continuedPacket = (0,_utilities_js__WEBPACK_IMPORTED_MODULE_1__.concatBuffers)(\n        this._continuedPacket,\n        oggPageStore[_constants_js__WEBPACK_IMPORTED_MODULE_0__.segments].pop(),\n      );\n    }\n\n    if (this._isSupported) {\n      const frame = this._parser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.parseOggPage](oggPage);\n      this._codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.mapFrameStats](frame);\n\n      return frame;\n    } else {\n      return oggPage;\n    }\n  }\n}\n\nclass OggParser extends _codecs_Parser_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"] {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n\n    this._onCodec = onCodec;\n    this.Frame = _OggPage_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\n    this.Header = _OggPageHeader_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\n\n    this._streams = new Map();\n    this._currentSerialNumber = null;\n  }\n\n  get [_constants_js__WEBPACK_IMPORTED_MODULE_0__.codec]() {\n    const oggStream = this._streams.get(this._currentSerialNumber);\n\n    return oggStream ? oggStream.codec : \"\";\n  }\n\n  *[_constants_js__WEBPACK_IMPORTED_MODULE_0__.parseFrame]() {\n    const oggPage = yield* this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.fixedLengthFrameSync](true);\n    this._currentSerialNumber = oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.streamSerialNumber];\n\n    let oggStream = this._streams.get(this._currentSerialNumber);\n    if (!oggStream) {\n      oggStream = new OggStream(\n        this._codecParser,\n        this._headerCache,\n        this._onCodec,\n      );\n      this._streams.set(this._currentSerialNumber, oggStream);\n    }\n\n    if (oggPage[_constants_js__WEBPACK_IMPORTED_MODULE_0__.isLastPage]) this._streams.delete(this._currentSerialNumber);\n\n    return oggStream._parsePage(oggPage);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/containers/ogg/OggParser.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/globals.js":
/*!**************************************************!*\
  !*** ./node_modules/codec-parser/src/globals.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   frameStore: function() { return /* binding */ frameStore; },\n/* harmony export */   headerStore: function() { return /* binding */ headerStore; }\n/* harmony export */ });\nconst headerStore = new WeakMap();\nconst frameStore = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9nbG9iYWxzLmpzPzUzYmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGhlYWRlclN0b3JlID0gbmV3IFdlYWtNYXAoKTtcbmV4cG9ydCBjb25zdCBmcmFtZVN0b3JlID0gbmV3IFdlYWtNYXAoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/globals.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/metadata/ID3v2.js":
/*!*********************************************************!*\
  !*** ./node_modules/codec-parser/src/metadata/ID3v2.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ID3v2; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n// https://id3.org/Developer%20Information\n\n\n\nconst unsynchronizationFlag = \"unsynchronizationFlag\";\nconst extendedHeaderFlag = \"extendedHeaderFlag\";\nconst experimentalFlag = \"experimentalFlag\";\nconst footerPresent = \"footerPresent\";\n\nclass ID3v2 {\n  static *getID3v2Header(codecParser, headerCache, readOffset) {\n    const headerLength = 10;\n    const header = {};\n\n    let data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](3, readOffset);\n    // Byte (0-2 of 9)\n    // ID3\n    if (data[0] !== 0x49 || data[1] !== 0x44 || data[2] !== 0x33) return null;\n\n    data = yield* codecParser[_constants_js__WEBPACK_IMPORTED_MODULE_0__.readRawData](headerLength, readOffset);\n\n    // Byte (3-4 of 9)\n    // * `BBBBBBBB|........`: Major version\n    // * `........|BBBBBBBB`: Minor version\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.version] = `id3v2.${data[3]}.${data[4]}`;\n\n    // Byte (5 of 9)\n    // * `....0000.: Zeros (flags not implemented yet)\n    if (data[5] & 0b00001111) return null;\n\n    // Byte (5 of 9)\n    // * `CDEF0000`: Flags\n    // * `C.......`: Unsynchronisation (indicates whether or not unsynchronisation is used)\n    // * `.D......`: Extended header (indicates whether or not the header is followed by an extended header)\n    // * `..E.....`: Experimental indicator (indicates whether or not the tag is in an experimental stage)\n    // * `...F....`: Footer present (indicates that a footer is present at the very end of the tag)\n    header[unsynchronizationFlag] = !!(data[5] & 0b10000000);\n    header[extendedHeaderFlag] = !!(data[5] & 0b01000000);\n    header[experimentalFlag] = !!(data[5] & 0b00100000);\n    header[footerPresent] = !!(data[5] & 0b00010000);\n\n    // Byte (6-9 of 9)\n    // * `0.......|0.......|0.......|0.......`: Zeros\n    if (\n      data[6] & 0b10000000 ||\n      data[7] & 0b10000000 ||\n      data[8] & 0b10000000 ||\n      data[9] & 0b10000000\n    )\n      return null;\n\n    // Byte (6-9 of 9)\n    // * `.FFFFFFF|.FFFFFFF|.FFFFFFF|.FFFFFFF`: Tag Length\n    // The ID3v2 tag size is encoded with four bytes where the most significant bit (bit 7)\n    // is set to zero in every byte, making a total of 28 bits. The zeroed bits are ignored,\n    // so a 257 bytes long tag is represented as $00 00 02 01.\n    const dataLength =\n      (data[6] << 21) | (data[7] << 14) | (data[8] << 7) | data[9];\n\n    header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = headerLength + dataLength;\n\n    return new ID3v2(header);\n  }\n\n  constructor(header) {\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.version] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.version];\n    this[unsynchronizationFlag] = header[unsynchronizationFlag];\n    this[extendedHeaderFlag] = header[extendedHeaderFlag];\n    this[experimentalFlag] = header[experimentalFlag];\n    this[footerPresent] = header[footerPresent];\n    this[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] = header[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9tZXRhZGF0YS9JRDN2Mi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRStEOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTs7QUFFZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0Msc0RBQVc7QUFDN0M7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixzREFBVzs7QUFFekM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrREFBTyxhQUFhLFFBQVEsR0FBRyxRQUFROztBQUVsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFdBQVcsaURBQU07O0FBRWpCO0FBQ0E7O0FBRUE7QUFDQSxTQUFTLGtEQUFPLFdBQVcsa0RBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlEQUFNLFdBQVcsaURBQU07QUFDaEM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY29kZWMtcGFyc2VyL3NyYy9tZXRhZGF0YS9JRDN2Mi5qcz80YzRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIENvcHlyaWdodCAyMDIwLTIwMjMgRXRoYW4gSGFsc2FsbFxuICAgIFxuICAgIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIGNvZGVjLXBhcnNlci5cbiAgICBcbiAgICBjb2RlYy1wYXJzZXIgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxuICAgIGNvZGVjLXBhcnNlciBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+XG4qL1xuXG4vLyBodHRwczovL2lkMy5vcmcvRGV2ZWxvcGVyJTIwSW5mb3JtYXRpb25cblxuaW1wb3J0IHsgbGVuZ3RoLCB2ZXJzaW9uLCByZWFkUmF3RGF0YSB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcblxuY29uc3QgdW5zeW5jaHJvbml6YXRpb25GbGFnID0gXCJ1bnN5bmNocm9uaXphdGlvbkZsYWdcIjtcbmNvbnN0IGV4dGVuZGVkSGVhZGVyRmxhZyA9IFwiZXh0ZW5kZWRIZWFkZXJGbGFnXCI7XG5jb25zdCBleHBlcmltZW50YWxGbGFnID0gXCJleHBlcmltZW50YWxGbGFnXCI7XG5jb25zdCBmb290ZXJQcmVzZW50ID0gXCJmb290ZXJQcmVzZW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElEM3YyIHtcbiAgc3RhdGljICpnZXRJRDN2MkhlYWRlcihjb2RlY1BhcnNlciwgaGVhZGVyQ2FjaGUsIHJlYWRPZmZzZXQpIHtcbiAgICBjb25zdCBoZWFkZXJMZW5ndGggPSAxMDtcbiAgICBjb25zdCBoZWFkZXIgPSB7fTtcblxuICAgIGxldCBkYXRhID0geWllbGQqIGNvZGVjUGFyc2VyW3JlYWRSYXdEYXRhXSgzLCByZWFkT2Zmc2V0KTtcbiAgICAvLyBCeXRlICgwLTIgb2YgOSlcbiAgICAvLyBJRDNcbiAgICBpZiAoZGF0YVswXSAhPT0gMHg0OSB8fCBkYXRhWzFdICE9PSAweDQ0IHx8IGRhdGFbMl0gIT09IDB4MzMpIHJldHVybiBudWxsO1xuXG4gICAgZGF0YSA9IHlpZWxkKiBjb2RlY1BhcnNlcltyZWFkUmF3RGF0YV0oaGVhZGVyTGVuZ3RoLCByZWFkT2Zmc2V0KTtcblxuICAgIC8vIEJ5dGUgKDMtNCBvZiA5KVxuICAgIC8vICogYEJCQkJCQkJCfC4uLi4uLi4uYDogTWFqb3IgdmVyc2lvblxuICAgIC8vICogYC4uLi4uLi4ufEJCQkJCQkJCYDogTWlub3IgdmVyc2lvblxuICAgIGhlYWRlclt2ZXJzaW9uXSA9IGBpZDN2Mi4ke2RhdGFbM119LiR7ZGF0YVs0XX1gO1xuXG4gICAgLy8gQnl0ZSAoNSBvZiA5KVxuICAgIC8vICogYC4uLi4wMDAwLjogWmVyb3MgKGZsYWdzIG5vdCBpbXBsZW1lbnRlZCB5ZXQpXG4gICAgaWYgKGRhdGFbNV0gJiAwYjAwMDAxMTExKSByZXR1cm4gbnVsbDtcblxuICAgIC8vIEJ5dGUgKDUgb2YgOSlcbiAgICAvLyAqIGBDREVGMDAwMGA6IEZsYWdzXG4gICAgLy8gKiBgQy4uLi4uLi5gOiBVbnN5bmNocm9uaXNhdGlvbiAoaW5kaWNhdGVzIHdoZXRoZXIgb3Igbm90IHVuc3luY2hyb25pc2F0aW9uIGlzIHVzZWQpXG4gICAgLy8gKiBgLkQuLi4uLi5gOiBFeHRlbmRlZCBoZWFkZXIgKGluZGljYXRlcyB3aGV0aGVyIG9yIG5vdCB0aGUgaGVhZGVyIGlzIGZvbGxvd2VkIGJ5IGFuIGV4dGVuZGVkIGhlYWRlcilcbiAgICAvLyAqIGAuLkUuLi4uLmA6IEV4cGVyaW1lbnRhbCBpbmRpY2F0b3IgKGluZGljYXRlcyB3aGV0aGVyIG9yIG5vdCB0aGUgdGFnIGlzIGluIGFuIGV4cGVyaW1lbnRhbCBzdGFnZSlcbiAgICAvLyAqIGAuLi5GLi4uLmA6IEZvb3RlciBwcmVzZW50IChpbmRpY2F0ZXMgdGhhdCBhIGZvb3RlciBpcyBwcmVzZW50IGF0IHRoZSB2ZXJ5IGVuZCBvZiB0aGUgdGFnKVxuICAgIGhlYWRlclt1bnN5bmNocm9uaXphdGlvbkZsYWddID0gISEoZGF0YVs1XSAmIDBiMTAwMDAwMDApO1xuICAgIGhlYWRlcltleHRlbmRlZEhlYWRlckZsYWddID0gISEoZGF0YVs1XSAmIDBiMDEwMDAwMDApO1xuICAgIGhlYWRlcltleHBlcmltZW50YWxGbGFnXSA9ICEhKGRhdGFbNV0gJiAwYjAwMTAwMDAwKTtcbiAgICBoZWFkZXJbZm9vdGVyUHJlc2VudF0gPSAhIShkYXRhWzVdICYgMGIwMDAxMDAwMCk7XG5cbiAgICAvLyBCeXRlICg2LTkgb2YgOSlcbiAgICAvLyAqIGAwLi4uLi4uLnwwLi4uLi4uLnwwLi4uLi4uLnwwLi4uLi4uLmA6IFplcm9zXG4gICAgaWYgKFxuICAgICAgZGF0YVs2XSAmIDBiMTAwMDAwMDAgfHxcbiAgICAgIGRhdGFbN10gJiAwYjEwMDAwMDAwIHx8XG4gICAgICBkYXRhWzhdICYgMGIxMDAwMDAwMCB8fFxuICAgICAgZGF0YVs5XSAmIDBiMTAwMDAwMDBcbiAgICApXG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIC8vIEJ5dGUgKDYtOSBvZiA5KVxuICAgIC8vICogYC5GRkZGRkZGfC5GRkZGRkZGfC5GRkZGRkZGfC5GRkZGRkZGYDogVGFnIExlbmd0aFxuICAgIC8vIFRoZSBJRDN2MiB0YWcgc2l6ZSBpcyBlbmNvZGVkIHdpdGggZm91ciBieXRlcyB3aGVyZSB0aGUgbW9zdCBzaWduaWZpY2FudCBiaXQgKGJpdCA3KVxuICAgIC8vIGlzIHNldCB0byB6ZXJvIGluIGV2ZXJ5IGJ5dGUsIG1ha2luZyBhIHRvdGFsIG9mIDI4IGJpdHMuIFRoZSB6ZXJvZWQgYml0cyBhcmUgaWdub3JlZCxcbiAgICAvLyBzbyBhIDI1NyBieXRlcyBsb25nIHRhZyBpcyByZXByZXNlbnRlZCBhcyAkMDAgMDAgMDIgMDEuXG4gICAgY29uc3QgZGF0YUxlbmd0aCA9XG4gICAgICAoZGF0YVs2XSA8PCAyMSkgfCAoZGF0YVs3XSA8PCAxNCkgfCAoZGF0YVs4XSA8PCA3KSB8IGRhdGFbOV07XG5cbiAgICBoZWFkZXJbbGVuZ3RoXSA9IGhlYWRlckxlbmd0aCArIGRhdGFMZW5ndGg7XG5cbiAgICByZXR1cm4gbmV3IElEM3YyKGhlYWRlcik7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihoZWFkZXIpIHtcbiAgICB0aGlzW3ZlcnNpb25dID0gaGVhZGVyW3ZlcnNpb25dO1xuICAgIHRoaXNbdW5zeW5jaHJvbml6YXRpb25GbGFnXSA9IGhlYWRlclt1bnN5bmNocm9uaXphdGlvbkZsYWddO1xuICAgIHRoaXNbZXh0ZW5kZWRIZWFkZXJGbGFnXSA9IGhlYWRlcltleHRlbmRlZEhlYWRlckZsYWddO1xuICAgIHRoaXNbZXhwZXJpbWVudGFsRmxhZ10gPSBoZWFkZXJbZXhwZXJpbWVudGFsRmxhZ107XG4gICAgdGhpc1tmb290ZXJQcmVzZW50XSA9IGhlYWRlcltmb290ZXJQcmVzZW50XTtcbiAgICB0aGlzW2xlbmd0aF0gPSBoZWFkZXJbbGVuZ3RoXTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/metadata/ID3v2.js\n"));

/***/ }),

/***/ "./node_modules/codec-parser/src/utilities.js":
/*!****************************************************!*\
  !*** ./node_modules/codec-parser/src/utilities.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BitReader: function() { return /* binding */ BitReader; },\n/* harmony export */   bytesToString: function() { return /* binding */ bytesToString; },\n/* harmony export */   concatBuffers: function() { return /* binding */ concatBuffers; },\n/* harmony export */   crc32Function: function() { return /* binding */ crc32Function; },\n/* harmony export */   crc8: function() { return /* binding */ crc8; },\n/* harmony export */   flacCrc16: function() { return /* binding */ flacCrc16; },\n/* harmony export */   reverse: function() { return /* binding */ reverse; }\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/codec-parser/src/constants.js\");\n/* Copyright 2020-2023 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n\n\nconst getCrcTable = (crcTable, crcInitialValueFunction, crcFunction) => {\n  for (let byte = 0; byte < crcTable[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length]; byte++) {\n    let crc = crcInitialValueFunction(byte);\n\n    for (let bit = 8; bit > 0; bit--) crc = crcFunction(crc);\n\n    crcTable[byte] = crc;\n  }\n  return crcTable;\n};\n\nconst crc8Table = getCrcTable(\n  new _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array(256),\n  (b) => b,\n  (crc) => (crc & 0x80 ? 0x07 ^ (crc << 1) : crc << 1),\n);\n\nconst flacCrc16Table = [\n  getCrcTable(\n    new Uint16Array(256),\n    (b) => b << 8,\n    (crc) => (crc << 1) ^ (crc & (1 << 15) ? 0x8005 : 0),\n  ),\n];\n\nconst crc32Table = [\n  getCrcTable(\n    new Uint32Array(256),\n    (b) => b,\n    (crc) => (crc >>> 1) ^ ((crc & 1) * 0xedb88320),\n  ),\n];\n\n// build crc tables\nfor (let i = 0; i < 15; i++) {\n  flacCrc16Table.push(new Uint16Array(256));\n  crc32Table.push(new Uint32Array(256));\n\n  for (let j = 0; j <= 0xff; j++) {\n    flacCrc16Table[i + 1][j] =\n      flacCrc16Table[0][flacCrc16Table[i][j] >>> 8] ^\n      (flacCrc16Table[i][j] << 8);\n\n    crc32Table[i + 1][j] =\n      (crc32Table[i][j] >>> 8) ^ crc32Table[0][crc32Table[i][j] & 0xff];\n  }\n}\n\nconst crc8 = (data) => {\n  let crc = 0;\n  const dataLength = data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n\n  for (let i = 0; i !== dataLength; i++) crc = crc8Table[crc ^ data[i]];\n\n  return crc;\n};\n\nconst flacCrc16 = (data) => {\n  const dataLength = data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize) {\n    crc ^= (data[i++] << 8) | data[i++];\n    crc =\n      flacCrc16Table[15][crc >> 8] ^\n      flacCrc16Table[14][crc & 0xff] ^\n      flacCrc16Table[13][data[i++]] ^\n      flacCrc16Table[12][data[i++]] ^\n      flacCrc16Table[11][data[i++]] ^\n      flacCrc16Table[10][data[i++]] ^\n      flacCrc16Table[9][data[i++]] ^\n      flacCrc16Table[8][data[i++]] ^\n      flacCrc16Table[7][data[i++]] ^\n      flacCrc16Table[6][data[i++]] ^\n      flacCrc16Table[5][data[i++]] ^\n      flacCrc16Table[4][data[i++]] ^\n      flacCrc16Table[3][data[i++]] ^\n      flacCrc16Table[2][data[i++]] ^\n      flacCrc16Table[1][data[i++]] ^\n      flacCrc16Table[0][data[i++]];\n  }\n\n  while (i !== dataLength)\n    crc = ((crc & 0xff) << 8) ^ flacCrc16Table[0][(crc >> 8) ^ data[i++]];\n\n  return crc;\n};\n\nconst crc32Function = (data) => {\n  const dataLength = data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize)\n    crc =\n      crc32Table[15][(data[i++] ^ crc) & 0xff] ^\n      crc32Table[14][(data[i++] ^ (crc >>> 8)) & 0xff] ^\n      crc32Table[13][(data[i++] ^ (crc >>> 16)) & 0xff] ^\n      crc32Table[12][data[i++] ^ (crc >>> 24)] ^\n      crc32Table[11][data[i++]] ^\n      crc32Table[10][data[i++]] ^\n      crc32Table[9][data[i++]] ^\n      crc32Table[8][data[i++]] ^\n      crc32Table[7][data[i++]] ^\n      crc32Table[6][data[i++]] ^\n      crc32Table[5][data[i++]] ^\n      crc32Table[4][data[i++]] ^\n      crc32Table[3][data[i++]] ^\n      crc32Table[2][data[i++]] ^\n      crc32Table[1][data[i++]] ^\n      crc32Table[0][data[i++]];\n\n  while (i !== dataLength)\n    crc = crc32Table[0][(crc ^ data[i++]) & 0xff] ^ (crc >>> 8);\n\n  return crc ^ -1;\n};\n\nconst concatBuffers = (...buffers) => {\n  const buffer = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.uint8Array(\n    buffers.reduce((acc, buf) => acc + buf[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length], 0),\n  );\n\n  buffers.reduce((offset, buf) => {\n    buffer.set(buf, offset);\n    return offset + buf[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length];\n  }, 0);\n\n  return buffer;\n};\n\nconst bytesToString = (bytes) => String.fromCharCode(...bytes);\n\n// prettier-ignore\nconst reverseTable = [0x0,0x8,0x4,0xc,0x2,0xa,0x6,0xe,0x1,0x9,0x5,0xd,0x3,0xb,0x7,0xf];\nconst reverse = (val) =>\n  (reverseTable[val & 0b1111] << 4) | reverseTable[val >> 4];\n\nclass BitReader {\n  constructor(data) {\n    this._data = data;\n    this._pos = data[_constants_js__WEBPACK_IMPORTED_MODULE_0__.length] * 8;\n  }\n\n  set position(position) {\n    this._pos = position;\n  }\n\n  get position() {\n    return this._pos;\n  }\n\n  read(bits) {\n    const byte = Math.floor(this._pos / 8);\n    const bit = this._pos % 8;\n    this._pos -= bits;\n\n    const window =\n      (reverse(this._data[byte - 1]) << 8) + reverse(this._data[byte]);\n\n    return (window >> (7 - bit)) & 0xff;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/codec-parser/src/utilities.js\n"));

/***/ }),

/***/ "./node_modules/simple-yenc/dist/esm.js":
/*!**********************************************!*\
  !*** ./node_modules/simple-yenc/dist/esm.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crc32: function() { return /* binding */ t; },\n/* harmony export */   decode: function() { return /* binding */ e; },\n/* harmony export */   dynamicEncode: function() { return /* binding */ r; },\n/* harmony export */   encode: function() { return /* binding */ n; },\n/* harmony export */   stringify: function() { return /* binding */ o; }\n/* harmony export */ });\nconst t=(t,n=4294967295,e=79764919)=>{const r=new Int32Array(256);let o,s,i,c=n;for(o=0;o<256;o++){for(i=o<<24,s=8;s>0;--s)i=2147483648&i?i<<1^e:i<<1;r[o]=i}for(o=0;o<t.length;o++)c=c<<8^r[255&(c>>24^t[o])];return c},n=t=>{const n=[];for(const e of t){let t=(e+42)%256;0===t||10===t||13===t||61===t?n.push(\"=\"+String.fromCharCode((t+64)%256)):n.push(String.fromCharCode(t))}return n.join(\"\")},e=(n,e=t)=>{const r=t=>new Uint8Array(t.length/2).map(((n,e)=>parseInt(t.substring(2*e,2*(e+1)),16))),o=t=>r(t)[0],s=new Map;[,8364,,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,,381,,,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,,382,376].forEach(((t,n)=>s.set(t,n)));const i=new Uint8Array(n.length);let c,a,l,f=!1,g=0,h=42,p=n.length>13&&\"dynEncode\"===n.substring(0,9),u=0;p&&(u=11,a=o(n.substring(9,u)),a<=1&&(u+=2,h=o(n.substring(11,u))),1===a&&(u+=8,l=(t=>new DataView(r(t).buffer).getInt32(0,!0))(n.substring(13,u))));const d=256-h;for(let t=u;t<n.length;t++)if(c=n.charCodeAt(t),61!==c||f){if(92===c&&t<n.length-5&&p){const e=n.charCodeAt(t+1);117!==e&&85!==e||(c=parseInt(n.substring(t+2,t+6),16),t+=5)}if(c>255){const t=s.get(c);t&&(c=t+127)}f&&(f=!1,c-=64),i[g++]=c<h&&c>0?c+d:c-h}else f=!0;const m=i.subarray(0,g);if(p&&1===a){const t=e(m);if(t!==l){const n=\"Decode failed crc32 validation\";throw console.error(\"`simple-yenc`\\n\",n+\"\\n\",\"Expected: \"+l+\"; Got: \"+t+\"\\n\",\"Visit https://github.com/eshaz/simple-yenc for more information\"),Error(n)}}return m},r=(n,e='\"',r=t,o)=>{const s=(t,n)=>(t%n+n)%n,i=(t,n)=>n.push(String.fromCharCode(61,(t+64)%256)),c=t=>t.map((t=>t.toString(16).padStart(2,\"0\")));let a,l,f=[],g=1/0,h=Array(256).fill(0);if('\"'===e?(l=[0,8,9,10,11,12,13,34,92,61],a=t=>0===t||8===t||9===t||10===t||11===t||12===t||13===t||34===t||92===t||61===t):\"'\"===e?(l=[0,8,9,10,11,12,13,39,92,61],a=t=>0===t||8===t||9===t||10===t||11===t||12===t||13===t||39===t||92===t||61===t):\"`\"===e&&(l=[13,61,96],f=[7,205,231],a=(t,n)=>13===t||36===t&&123===n||61===t||92===t&&(85===n||117===n)||96===t),void 0===o){o=0;for(let t=0;t<n.length;t++){const e=0|n[t];h[e]++;for(let r=0;r<f.length;r++){const o=f[r];s(e-n[t+1]|0,256)===o&&h[e]++}}for(let t=0;t<256;t++){let n=0;for(let e=0;e<l.length;e++)n+=h[s(l[e]-t,256)];n<g&&(g=n,o=t)}}const p=[\"dynEncode\",\"01\",c([o]),...c((t=>{const n=new Uint8Array(4);return new DataView(n.buffer).setInt32(0,t,!0),[...n]})(r(n)))];for(let t=0;t<n.length;t++){const e=(n[t]+o)%256;a(e,(n[t+1]+o)%256)?i(e,p):p.push(String.fromCharCode(e))}return\"\\\\\"===p[p.length-1]&&(p.pop(),i(92,p)),p.join(\"\")},o=t=>t.replace(/[\\\\]/g,\"\\\\\\\\\").replace(/[`]/g,\"\\\\`\").replace(/\\${/g,\"\\\\${\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2ltcGxlLXllbmMvZGlzdC9lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzQ0FBc0MsNEJBQTRCLGNBQWMsUUFBUSxNQUFNLEtBQUssZ0JBQWdCLElBQUksK0JBQStCLE9BQU8sUUFBUSxXQUFXLCtCQUErQixTQUFTLE9BQU8sV0FBVyxrQkFBa0IsaUJBQWlCLHlHQUF5RyxrQkFBa0IsYUFBYSxpSEFBaUgsa0tBQWtLLGlDQUFpQywwRUFBMEUscUpBQXFKLGNBQWMsWUFBWSxXQUFXLG9DQUFvQyw0QkFBNEIsMEJBQTBCLDREQUE0RCxVQUFVLGlCQUFpQixhQUFhLHdDQUF3QyxVQUFVLHdCQUF3QixhQUFhLGFBQWEsVUFBVSx5Q0FBeUMsK0RBQStELDJGQUEyRixTQUFTLHFCQUFxQiw2SEFBNkgsd0NBQXdDLHFYQUFxWCxJQUFJLFlBQVksV0FBVyxLQUFLLGVBQWUsT0FBTyxZQUFZLFdBQVcsS0FBSyxhQUFhLCtCQUErQixZQUFZLE1BQU0sS0FBSyxRQUFRLFlBQVksV0FBVyx3QkFBd0IsZ0JBQWdCLDJDQUEyQywwQkFBMEIsc0RBQXNELFVBQVUsWUFBWSxXQUFXLEtBQUsscUJBQXFCLDBEQUEwRCx5REFBeUQsa0VBQWtFLFFBQVEsR0FBZ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NpbXBsZS15ZW5jL2Rpc3QvZXNtLmpzPzdjYmMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdD0odCxuPTQyOTQ5NjcyOTUsZT03OTc2NDkxOSk9Pntjb25zdCByPW5ldyBJbnQzMkFycmF5KDI1Nik7bGV0IG8scyxpLGM9bjtmb3Iobz0wO288MjU2O28rKyl7Zm9yKGk9bzw8MjQscz04O3M+MDstLXMpaT0yMTQ3NDgzNjQ4Jmk/aTw8MV5lOmk8PDE7cltvXT1pfWZvcihvPTA7bzx0Lmxlbmd0aDtvKyspYz1jPDw4XnJbMjU1JihjPj4yNF50W29dKV07cmV0dXJuIGN9LG49dD0+e2NvbnN0IG49W107Zm9yKGNvbnN0IGUgb2YgdCl7bGV0IHQ9KGUrNDIpJTI1NjswPT09dHx8MTA9PT10fHwxMz09PXR8fDYxPT09dD9uLnB1c2goXCI9XCIrU3RyaW5nLmZyb21DaGFyQ29kZSgodCs2NCklMjU2KSk6bi5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUodCkpfXJldHVybiBuLmpvaW4oXCJcIil9LGU9KG4sZT10KT0+e2NvbnN0IHI9dD0+bmV3IFVpbnQ4QXJyYXkodC5sZW5ndGgvMikubWFwKCgobixlKT0+cGFyc2VJbnQodC5zdWJzdHJpbmcoMiplLDIqKGUrMSkpLDE2KSkpLG89dD0+cih0KVswXSxzPW5ldyBNYXA7Wyw4MzY0LCw4MjE4LDQwMiw4MjIyLDgyMzAsODIyNCw4MjI1LDcxMCw4MjQwLDM1Miw4MjQ5LDMzOCwsMzgxLCwsODIxNiw4MjE3LDgyMjAsODIyMSw4MjI2LDgyMTEsODIxMiw3MzIsODQ4MiwzNTMsODI1MCwzMzksLDM4MiwzNzZdLmZvckVhY2goKCh0LG4pPT5zLnNldCh0LG4pKSk7Y29uc3QgaT1uZXcgVWludDhBcnJheShuLmxlbmd0aCk7bGV0IGMsYSxsLGY9ITEsZz0wLGg9NDIscD1uLmxlbmd0aD4xMyYmXCJkeW5FbmNvZGVcIj09PW4uc3Vic3RyaW5nKDAsOSksdT0wO3AmJih1PTExLGE9byhuLnN1YnN0cmluZyg5LHUpKSxhPD0xJiYodSs9MixoPW8obi5zdWJzdHJpbmcoMTEsdSkpKSwxPT09YSYmKHUrPTgsbD0odD0+bmV3IERhdGFWaWV3KHIodCkuYnVmZmVyKS5nZXRJbnQzMigwLCEwKSkobi5zdWJzdHJpbmcoMTMsdSkpKSk7Y29uc3QgZD0yNTYtaDtmb3IobGV0IHQ9dTt0PG4ubGVuZ3RoO3QrKylpZihjPW4uY2hhckNvZGVBdCh0KSw2MSE9PWN8fGYpe2lmKDkyPT09YyYmdDxuLmxlbmd0aC01JiZwKXtjb25zdCBlPW4uY2hhckNvZGVBdCh0KzEpOzExNyE9PWUmJjg1IT09ZXx8KGM9cGFyc2VJbnQobi5zdWJzdHJpbmcodCsyLHQrNiksMTYpLHQrPTUpfWlmKGM+MjU1KXtjb25zdCB0PXMuZ2V0KGMpO3QmJihjPXQrMTI3KX1mJiYoZj0hMSxjLT02NCksaVtnKytdPWM8aCYmYz4wP2MrZDpjLWh9ZWxzZSBmPSEwO2NvbnN0IG09aS5zdWJhcnJheSgwLGcpO2lmKHAmJjE9PT1hKXtjb25zdCB0PWUobSk7aWYodCE9PWwpe2NvbnN0IG49XCJEZWNvZGUgZmFpbGVkIGNyYzMyIHZhbGlkYXRpb25cIjt0aHJvdyBjb25zb2xlLmVycm9yKFwiYHNpbXBsZS15ZW5jYFxcblwiLG4rXCJcXG5cIixcIkV4cGVjdGVkOiBcIitsK1wiOyBHb3Q6IFwiK3QrXCJcXG5cIixcIlZpc2l0IGh0dHBzOi8vZ2l0aHViLmNvbS9lc2hhei9zaW1wbGUteWVuYyBmb3IgbW9yZSBpbmZvcm1hdGlvblwiKSxFcnJvcihuKX19cmV0dXJuIG19LHI9KG4sZT0nXCInLHI9dCxvKT0+e2NvbnN0IHM9KHQsbik9Pih0JW4rbiklbixpPSh0LG4pPT5uLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZSg2MSwodCs2NCklMjU2KSksYz10PT50Lm1hcCgodD0+dC50b1N0cmluZygxNikucGFkU3RhcnQoMixcIjBcIikpKTtsZXQgYSxsLGY9W10sZz0xLzAsaD1BcnJheSgyNTYpLmZpbGwoMCk7aWYoJ1wiJz09PWU/KGw9WzAsOCw5LDEwLDExLDEyLDEzLDM0LDkyLDYxXSxhPXQ9PjA9PT10fHw4PT09dHx8OT09PXR8fDEwPT09dHx8MTE9PT10fHwxMj09PXR8fDEzPT09dHx8MzQ9PT10fHw5Mj09PXR8fDYxPT09dCk6XCInXCI9PT1lPyhsPVswLDgsOSwxMCwxMSwxMiwxMywzOSw5Miw2MV0sYT10PT4wPT09dHx8OD09PXR8fDk9PT10fHwxMD09PXR8fDExPT09dHx8MTI9PT10fHwxMz09PXR8fDM5PT09dHx8OTI9PT10fHw2MT09PXQpOlwiYFwiPT09ZSYmKGw9WzEzLDYxLDk2XSxmPVs3LDIwNSwyMzFdLGE9KHQsbik9PjEzPT09dHx8MzY9PT10JiYxMjM9PT1ufHw2MT09PXR8fDkyPT09dCYmKDg1PT09bnx8MTE3PT09bil8fDk2PT09dCksdm9pZCAwPT09byl7bz0wO2ZvcihsZXQgdD0wO3Q8bi5sZW5ndGg7dCsrKXtjb25zdCBlPTB8blt0XTtoW2VdKys7Zm9yKGxldCByPTA7cjxmLmxlbmd0aDtyKyspe2NvbnN0IG89ZltyXTtzKGUtblt0KzFdfDAsMjU2KT09PW8mJmhbZV0rK319Zm9yKGxldCB0PTA7dDwyNTY7dCsrKXtsZXQgbj0wO2ZvcihsZXQgZT0wO2U8bC5sZW5ndGg7ZSsrKW4rPWhbcyhsW2VdLXQsMjU2KV07bjxnJiYoZz1uLG89dCl9fWNvbnN0IHA9W1wiZHluRW5jb2RlXCIsXCIwMVwiLGMoW29dKSwuLi5jKCh0PT57Y29uc3Qgbj1uZXcgVWludDhBcnJheSg0KTtyZXR1cm4gbmV3IERhdGFWaWV3KG4uYnVmZmVyKS5zZXRJbnQzMigwLHQsITApLFsuLi5uXX0pKHIobikpKV07Zm9yKGxldCB0PTA7dDxuLmxlbmd0aDt0Kyspe2NvbnN0IGU9KG5bdF0rbyklMjU2O2EoZSwoblt0KzFdK28pJTI1Nik/aShlLHApOnAucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGUpKX1yZXR1cm5cIlxcXFxcIj09PXBbcC5sZW5ndGgtMV0mJihwLnBvcCgpLGkoOTIscCkpLHAuam9pbihcIlwiKX0sbz10PT50LnJlcGxhY2UoL1tcXFxcXS9nLFwiXFxcXFxcXFxcIikucmVwbGFjZSgvW2BdL2csXCJcXFxcYFwiKS5yZXBsYWNlKC9cXCR7L2csXCJcXFxcJHtcIik7ZXhwb3J0e3QgYXMgY3JjMzIsZSBhcyBkZWNvZGUsciBhcyBkeW5hbWljRW5jb2RlLG4gYXMgZW5jb2RlLG8gYXMgc3RyaW5naWZ5fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/simple-yenc/dist/esm.js\n"));

/***/ })

}]);